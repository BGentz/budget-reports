{"version":3,"sources":["localstorageUtils.js","uiRepo.js","dataUtils.js","repoUtils.js","localBudgetCache.js","ynabRepo.js","components/typeComponents.js","components/Loading.js","components/EnsureBudgetLoaded.js","styleVariables.js","components/Button.js","components/Icon.js","budgetUtils.js","commonHooks.js","components/CollapsibleSection.js","components/Chart.js","components/CurrencyContext.js","components/Amount.js","components/ChartNumbers.js","components/SpendingChart.js","components/Modal.js","components/ChartSettingsModal.js","components/DayByDaySection.js","components/ListItem.js","components/EmptyText.js","components/NoTransactions.js","components/LabelWithMinorText.js","components/LabelWithTransactionCount.js","components/AmountWithPercentage.js","components/SeeAll.js","components/GenericEntitiesSection.js","components/DateSummaryTransaction.js","components/ToggleNode.js","components/DateSummary.js","components/RecentSpending.js","components/CurrentMonth.js","components/Transaction.js","components/TransactionsSection.js","components/CurrentMonthGroup.js","components/CurrentMonthCategory.js","components/MonthlyChart.js","components/Toggle.js","components/ToggleWithLabel.js","components/MonthByMonthSettingsModal.js","components/MonthByMonthSection.js","components/Groups.js","components/TransactionsByMonthSection.js","components/Group.js","components/Category.js","components/CategoryPayee.js","components/Income.js","components/IncomeVsExpensesChart.js","components/BreakdownNode.js","components/Breakdown.js","components/ExpensesBreakdown.js","components/IncomeBreakdown.js","components/Breakdowns.js","components/IncomeVsExpenses.js","components/NetWorthChart.js","components/NetWorthAccounts.js","components/NetWorth.js","components/Investments.js","components/ProjectionsChart.js","components/ClickOff.js","components/ProjectionsSlider.js","components/Projections.js","projectionUtils.js","components/Section.js","components/AccountsSelectionForm.js","components/Settings.js","pages.js","components/SidebarMenuContent.js","components/SidebarMenu.js","components/Scroller.js","components/PageWrapper.js","components/PageTitle.js","components/PageBreadcrumbs.js","components/PageActions.js","components/CategoriesState.js","components/PageContent.js","components/Unauthorized.js","components/ErrorPage.js","components/NotFound.js","components/ErrorBoundary.js","components/Budgets.js","components/App.js","index.js"],"names":["cache","getStorage","key","raw","localStorage","getItem","parsed","JSON","parse","setStorage","obj","setItem","stringify","e","SETTINGS","excludeFirstMonth","localStorageKey","default","excludeLastMonth","investmentAccounts","lastUpdated","mortgageAccounts","netWorthHiddenAccounts","spendingMonthsToCompare","trendsShowAverage","getSetting","settingsKey","budgetId","setting","Error","get","setSetting","value","previousSetting","Object","objectSpread","defineProperty","groupBy","func","arr","grouped","forEach","push","groupByProp","keyByProp","reduce","acc","curr","sumByProp","simpleMemoize","lastArgs","lastResult","_len","arguments","length","args","Array","_key","every","index","apply","notAny","predicates","arg","predicate","formatCurrency","utils","convertMilliUnitsToCurrencyAmount","GROUPS_TO_HIDE","sanitizeBudget","budget","transactionIdsFromSub","uniq","subtransactions","map","transaction","transaction_id","categoryGroups","category_groups","filter","group","includes","name","categories","category","deleted","activity","balance","budgeted","categoriesById","earliestDate","moment","subtract","MAX_MONTHS_TO_SHOW","format","currencyFormat","symbol","currency_format","currency_symbol","omit","accountsById","accounts","categoryGroupsById","payeesById","payees","months","sortBy","transactions","compose","amount","category_id","flatMap","id","subs","sub","matchesProperty","reverse","dropWhile","date","applyDeltas","deltas","undefined","updater","prev","exists","newArr","item","concat","upsertBy","arraysToUpdate","cachedDetails","getAllBudgetDetails","setBudgetDetails","_ref","server_knowledge","details","newDetails","AUTHORIZE_URL","api","getBudgets","budgets","then","data","catch","matches","error","message","removeItem","getBudget","getBudgetById","_ref2","valueOf","authorized","getUpdatedBudget","budgetDetails","getBudgetDetails","_ref3","mergeBudgets","setLastLocation","window","location","hash","PageTitle","styled","div","_templateObject","LargeNumber","_templateObject2","StrongText","_templateObject3","SecondaryText","_templateObject4","_templateObject5","MinorText","_templateObject6","Loading","react_default","a","createElement","style","height","display","flexDirection","alignItems","justifyContent","EnsureBudgetLoaded","_this$props","this","props","budgetLoaded","onRequestBudget","children","components_Loading","Component","selectedPlotBandColor","tinyColor","lighten","desaturate","toHexString","lighterPrimaryColor","lightPrimaryColor","negativeChartColor","Button","Button_templateObject","PrimaryButton","Button_templateObject2","library","add","faArrowLeft","faBars","faCaretDown","faChevronRight","faCog","faEllipsisV","faEye","faEyeSlash","faPencilAlt","faTimes","ICONS","arrow-left","bars","caret-down","chevron-right","cog","pencil","ellipsis-v","eye","eye-slash","times","PRESET_STYLES","faded","fontWeight","color","fontSize","Icon","icon","other","objectWithoutProperties","react_fontawesome_index_es","assign","mapRaw","convert","cap","isStartingBalanceOrReconciliation","startingBalancePayeeId","find","payee","reconciliationPayeeId","payee_id","isIncome","toBeBudgetedId","isTransfer","transfer_account_id","getTransactionMonth","slice","getFirstMonth","getPayeeNodes","divideBy","payeeId","pick","sanitizeName","replace","trim","useSelectedMonth","_useState","useState","_useState2","slicedToArray","selectedMonth","setSelectedMonth","selectedMonthRef","useRef","current","month","useSelectedEntityId","_useState3","_useState4","selectedEntityId","setSelectedEntityId","entityId","useTrendsShowAverage","_useState5","_useState6","showAverage","setShowAverage","useMonthExclusions","_useState7","_useState8","setExcludeFirstMonth","_useState9","_useState10","setExcludeLastMonth","firstBudgetMonth","firstMonth","lastMonth","m","getMonths","onSetExclusion","exclude","Container","CollapsibleSection_templateObject","Header","CollapsibleSection_templateObject2","SettingsContainer","CollapsibleSection_templateObject3","Body","CollapsibleSection_templateObject4","CollapsibleSection","actions","hasSettings","noPadding","title","onClickSettings","expanded","setExpanded","CollapsibleSection_Container","onClick","components_Icon","transform","rotate","marginLeft","es","isExpanded","padding","CHART_DEFAULTS","chart","spacing","credits","enabled","legend","text","subtitle","tooltip","xAxis","tickLength","Chart","options","highcharts_react_min_default","highcharts","Highcharts","CurrencyContext","React","createContext","Amount","amountAfterDecimal","positiveIsRed","showCurrencySymbol","components_CurrencyContext","Consumer","nStr","x","split","x1","x2","rgx","test","addCommas","Math","abs","toFixed","defaultProps","ChartNumbers","numbers","alwaysRound","smallNumbers","some","textAlign","lineHeight","marginBottom","label","_ref3$isMoney","isMoney","decimalsToRound","components_Amount","isNumber","DateLabels","SpendingChart_templateObject","getData","transactionsByDate","today","cumulative","range","daysInMonth","numDays","padCharsStart","sumBy","SpendingChart","total","highlightFunction","currentMonth","monthsToCompare","highlightedTransactions","highlightSeries","type","enableMouseTracking","marker","animation","lineWidth","fillOpacity","firstDate","lastDate","lineData","day","firstDayOfWeek","parseInt","plotBands","num","from","to","comparisonSeries","numMonths","mix","toHex","spent","takeWhile","chartNumbers","react","components_ChartNumbers","components_Chart","labels","yAxis","visible","endOnTick","startOnTick","series","dashStyle","toConsumableArray","PureComponent","Modal_templateObject","Overlay","Modal_templateObject2","ModalContent","Modal_templateObject3","ensureNextTick","callback","requestAnimationFrame","Modal","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleTransitionEnd","animationState","state","setState","el","document","body","appendChild","prevProps","_this2","open","removeChild","onClose","width","shouldShow","createPortal","Modal_Container","opacity","onTransitionEnd","marginTop","ChartSettingsModal","onDecrementMonths","onIncrementMonths","components_Modal","marginRight","components_Button","MAX_MONTHS","DayByDaySection","handleClickSettings","modalOpen","handleCloseModal","handleDecrementMonths","max","saveSetting","handleIncrementMonths","min","_this$state","components_CollapsibleSection","components_SpendingChart","components_ChartSettingsModal","ListItem","ListItem_templateObject","isContinuing","EmptyText","EmptyText_templateObject","NoTransactions","components_EmptyText","LabelWithMinorText","minorText","inLink","bold","whiteSpace","overflow","react_router_dom","textOverflow","LabelWithTransactionCount","count","selected","showCount","components_LabelWithMinorText","AmountWithPercentage","SeeAll","pluralizedName","showAll","onToggle","mapWithKeys","keyToPluralizedName","category_group_id","GenericEntitiesSection","allMounted","handleToggleShowAll","emptyName","entityKey","entityFunction","entitiesById","linkFunction","limitShowingProp","limitShowing","showAverageToggle","showTransactionCount","onClickEntity","onToggleAverage","_this$state2","entities","LIMIT","topEntities","otherEntities","components_NoTransactions","GenericEntitiesSection_GenericItemLink","components_SeeAll","MaybeLink","GenericItemLink","_this$props2","components_ListItem","components_LabelWithTransactionCount","GenericEntitiesSection_MaybeLink","evt","stopPropagation","components_AmountWithPercentage","StyledListItem","DateSummaryTransaction_templateObject","DateSummaryTransaction","memo","NodeWrapper","ToggleNode_templateObject","isCompact","IconWrapper","ToggleNode_templateObject2","ToggleNode","valueRenderer","DateSummary_templateObject","DateSummary","onToggleExpanded","DateSummary_Container","components_ToggleNode","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","paddingLeft","components_DateSummaryTransaction","margin","RecentSpending","recentDays","n","startsWith","isAllExpanded","values","components_DateSummary","CurrentMonth","_useSelectedEntityId","_useSelectedEntityId2","selectedGroupId","onSelectGroupId","selectedGroup","transactionsThisMonth","components_DayByDaySection","components_RecentSpending","components_GenericEntitiesSection","groupId","makeLink","pages","currentMonthGroup","path","categoryGroupId","Transaction","TransactionsSection","categoryId","components_Transaction","CurrentMonthGroup","selectedCategoryId","onSelectCategoryId","allCategories","allTransactions","selectedCategory","categoryIds","transactionsInGroup","transactionsInGroupForMonth","available","currentMonthCategory","components_TransactionsSection","CurrentMonthCategory","transactionsInCategory","transactionsInCategoryForMonth","MonthlyChart","average","stacked","onSelectMonth","yearLines","d","highlights","zIndex","findIndex","events","click","event","round","plotLines","gridLineColor","plotOptions","stacking","s","valueFunction","borderWidth","states","hover","brightness","Track","Toggle_templateObject","HEIGHT","on","Handle","Toggle_templateObject2","WIDTH","Toggle","ToggleWithLabel_templateObject","Label","ToggleWithLabel_templateObject2","ToggleWithLabel","checked","onChange","ToggleWithLabel_Container","target","components_Toggle","MonthByMonthSettingsModal","components_ToggleWithLabel","MonthByMonthSection","settingsModalOpen","setSettingsModalOpen","selectedMonthTotal","transactionsByMonth","false","highlighted","true","components_MonthlyChart","components_MonthByMonthSettingsModal","Groups","onSelectGroup","_useTrendsShowAverage","_useTrendsShowAverage2","onToggleShowAverage","transactionsForMonth","components_MonthByMonthSection","TransactionsByMonthSection","selectedPayeeId","selectedPayee","topTransactions","otherTransactions","Group","onSelectCategory","categoryGroup","transactionsInSelectedMonth","components_TransactionsByMonthSection","Category","onSelectPayee","transactionsForCategory","categoryPayee","CategoryPayee","transactionsForCategoryAndPayee","Income","_useSelectedMonth","_useSelectedMonth2","onSelectPayeeId","IncomeVsExpensesChart","income","expenses","BreakdownNode","childrenMounted","handleToggleExpand","nodes","isTopLevel","hasChildNodes","BreakdownNode_Container","BreakdownNode_LeafNode","BreakdownNode_Nodes","Nodes","node","BreakdownNode_BreakdownNode","BreakdownNode_templateObject","LeafNode","BreakdownNode_NodeWrapper","Breakdown","components_BreakdownNode","ExpensesBreakdown","totalIncome","categoryNodes","payeeNodes","groupNodes","rootPayeeNodes","components_Breakdown","IncomeBreakdown","Breakdowns","expenseTransactions","incomeTransactions","components_ExpensesBreakdown","components_IncomeBreakdown","getSummaries","IncomeVsExpenses","showTotals","setShowTotals","allSummaries","summaries","summary","totalExpenses","denominator","components_IncomeVsExpensesChart","components_Breakdowns","CREDIT_ACCOUNTS","NetWorthChart","groupedData","getStack","monthlyData","assets","asset","liabilities","liability","getNodes","accountsByGroup","account","startCase","AccountBreakdown","_ref4","hiddenAccounts","onToggleAccounts","_ref5","propEq","ids","NetWorthAccounts","keyBy","visibleNodes","reject","hiddenNodes","NetWorthAccounts_AccountBreakdown","last","NetWorth","groupByMonthAndAccount","mapValues","identity","keys","getSummaryByAccount","groupedTransactions","getSelectedBalances","selectedMonthIndex","eq","accountSummaries","handleSelectMonth","handleToggleAccounts","shouldHide","newHiddenAccounts","selectedBalances","filterHidden","omitBy","_","selectedLiabilities","sum","b","selectedAssets","components_NetWorthChart","constant","components_NetWorthAccounts","isContribution","account_id","isCapitalGainOrLoss","Investments","_useMonthExclusions","selectedBreakdown","onSelectBreakdown","settings","investmentTransactions","isInvestmentTransaction","transactionsInMonth","contribution","capitalGain","ProjectionsChart","investmentsProjection","mortgageProjection","amountNeededToRetire","yearsUntilRetirement","floor","isDescendant","parent","child","parentNode","ClickOff","handleBodyClick","onClickOff","addEventListener","removeEventListener","ref","bodyEl","getElementsByTagName","ProjectionsSlider_templateObject","ProjectionsSlider","formatter","onBlur","onReset","rangeOptions","components_ClickOff","ProjectionsSlider_Container","borderTop","ProjectionsSlider_Range","val","Range","adjustableEntries","adjustableEntriesByName","getInitialState","mortgageAccount","t","lastMonthTransactions","takeRightWhile","P","P1","c","prop","r","N","log","rate","paymentsLeft","projection","pow","mortgagePayment","principalProjection","getMortgageRate","remainingMortgagePayments","returnOnInvestments","investmentAccountIds","tr","startForMonth","returnRates","trs","contributions","gains","returns","totalReturn","multiply","getReturnOnInvestments","averageContribution","_ref6","transferAccountId","_ref7","accountId","diff","head","getAverageContribution","currentInvestments","getCurrentInvestments","averageExpenses","_ref8","startingBalanceId","mortgageAccountIds","getAverageExpensesWithoutMortgage","retirementReturns","retirementTaxRate","maxAverageExpenses","ceil","maxAverageContribution","Projections","handleChange","parseFloat","handleSelectAdjusting","adjustingName","handleClearSelection","handleResetCalculation","calculation","_ref9","monthlyRate","getProjection","YEARS_TO_PROJECT","monthlyRetirementReturn","remainingMortgage","projectionWithRetirement","_ref10","monthsBeforeRetirement","monthlyExpenses","getProjectionWithRetirement","hasMortgage","projectionByYear","chunk","mortgageProjectionByYear","nameToRangeOptions","step","components_ProjectionsChart","Projections_AdjustableEntry","isAdjusting","onSelect","Projections_Entry","components_ProjectionsSlider","AdjustableEntry","highlightValue","isAdjustable","Entry","_ref4$formatter","backgroundColor","borderRadius","Section","Section_templateObject","top","AccountsSelectionForm","_evt$target","SectionHeader","Settings_templateObject","Space","Settings_templateObject2","Settings","investmentModalOpen","mortgageModalOpen","handleClickEdit","section","handleCloseInvestmentModal","handleCloseMortgageModal","handleChangeInvestment","accountsObject","onUpdateAccounts","handleChangeMortgage","potentialInvestmentAccounts","on_budget","potentialMortageAccounts","investmentAccountsList","mortgageAccountList","components_Section","components_AccountsSelectionForm","params","part","paramProps","breadcrumbs","groups","incomeVsExpenses","netWorth","investments","projections","SidebarMenuContent_templateObject","SidebarMenuContent_templateObject2","StyledLink","NavLink","SidebarMenuContent_templateObject3","active","SidebarMenuContent","hasMultipleBudgets","onCloseSidebar","SidebarMenuContent_PureHeader","page","_pages$page","SidebarMenuContent_PureStyledLink","matchPath","PureHeader","SidebarMenuContent_Header","SidebarMenuContent_IconWrapper","PureStyledLink","SidebarMenu","handleSetOpen","handleTriggerClick","handleCloseSidebar","react_sidebar_esm","sidebar","components_SidebarMenuContent","onSetOpen","styles","pointerEvents","sidebarTrigger","SidebarMenu_Trigger","Trigger","alignSelf","Scroller","toBeScrolled","raf","scrollPositions","scrollTop","prevState","snapshot","action","cancelAnimationFrame","_this3","PageWrapper_templateObject","PageWrapper_templateObject2","PageWrapper_templateObject3","PageWrapper","content","historyAction","onAuthorize","components_EnsureBudgetLoaded","components_SidebarMenu","PageWrapper_Container","PageWrapper_Header","flexGrow","typeComponents_PageTitle","components_Scroller","PageWrapper_Body","flexShrink","react_router","exact","render","match","routes","pageKey","PageBreadcrumbs","paddingBottom","PageActions","INITIAL_STATE","CategoriesState","cachedStates","handleSelectGroup","handleSelectCategory","handleSelectPayee","handleSetExclusion","getFilteredTransactions","getFilteredSpendingTransactions","getFilteredIncomeTransactions","trendsPath","groupedPages","PageContent","filteredTransactions","components_CategoriesState","trendPages","propsList","_pages$income","_pages$incomeVsExpens","otherPages","Unauthorized","ErrorPage_templateObject","ErrorPage","ErrorPage_Container","NotFound","components_ErrorPage","ErrorBoundary","hasError","Rollbar","token","Budgets","budgetsLoaded","onRequestBudgets","App","budgetIds","handleRequestBudgets","handleRequestBudget","handleAuthorize","hasToken","components_ErrorBoundary","components_Budgets","Provider","components_PageWrapper","history","pathname","components_PageTitle","components_PageBreadcrumbs","components_PageActions","components_PageContent","forceUpdate","component","components_Unauthorized","search","substring","decodeURIComponent","getAuthorizeToken","ynab","ReactDOM","components_App","getElementById"],"mappings":"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","file":"static/js/main.3ea844ab.chunk.js","sourcesContent":["const cache = {};\n\nexport const getStorage = key => {\n  if (cache[key]) {\n    return cache[key];\n  }\n  const raw = localStorage.getItem(key);\n  if (raw) {\n    const parsed = JSON.parse(raw);\n    cache[key] = parsed;\n    return parsed;\n  }\n  return null;\n};\n\nexport const setStorage = (key, obj) => {\n  delete cache[key];\n\n  try {\n    localStorage.setItem(key, JSON.stringify(obj));\n  } catch (e) {\n    // Most likely exceeds storage quota\n  }\n};\n","import { getStorage, setStorage } from \"./localstorageUtils\";\nimport get from \"lodash/get\";\n\nconst SETTINGS = {\n  excludeFirstMonth: {\n    localStorageKey: \"budget-reports-exclude-first-month\",\n    default: false\n  },\n  excludeLastMonth: {\n    localStorageKey: \"budget-reports-exclude-last-month\",\n    default: false\n  },\n  investmentAccounts: {\n    localStorageKey: \"budget-reports-investment-accounts\",\n    default: {}\n  },\n  lastUpdated: {\n    localStorageKey: \"budget-reports-last-updated\",\n    default: null\n  },\n  mortgageAccounts: {\n    localStorageKey: \"budget-reports-mortgage-accounts\",\n    default: {}\n  },\n  netWorthHiddenAccounts: {\n    localStorageKey: \"budget-reports-networth-hidden-accounts\",\n    default: {}\n  },\n  spendingMonthsToCompare: {\n    localStorageKey: \"budget-reports-spending-months-to-compare\",\n    default: 3\n  },\n  trendsShowAverage: {\n    localStorageKey: \"budget-reports-trends-show-average\",\n    default: true\n  }\n};\n\nexport const getSetting = (settingsKey, budgetId) => {\n  const setting = SETTINGS[settingsKey];\n\n  if (!setting) {\n    throw new Error(\"not a valid settings key\");\n  }\n\n  return get(getStorage(setting.localStorageKey), budgetId, setting.default);\n};\n\nexport const setSetting = (settingsKey, budgetId, value) => {\n  const setting = SETTINGS[settingsKey];\n\n  if (!setting) {\n    throw new Error(\"not a valid settings key\");\n  }\n\n  const previousSetting = getStorage(setting.localStorageKey);\n\n  setStorage(setting.localStorageKey, {\n    ...previousSetting,\n    [budgetId]: value\n  });\n};\n","export const groupBy = func => arr => {\n  const grouped = {};\n  arr.forEach(obj => {\n    const key = func(obj);\n    if (!grouped[key]) {\n      grouped[key] = [];\n    }\n    grouped[key].push(obj);\n  });\n  return grouped;\n};\n\nexport const groupByProp = key => arr => {\n  const grouped = {};\n  arr.forEach(obj => {\n    if (!grouped[obj[key]]) {\n      grouped[obj[key]] = [];\n    }\n    grouped[obj[key]].push(obj);\n  });\n  return grouped;\n};\n\nexport const keyByProp = key => arr =>\n  arr.reduce((acc, curr) => ({ ...acc, [curr[key]]: curr }), {});\n\nexport const sumBy = func => arr =>\n  arr.reduce((acc, curr) => acc + func(curr), 0);\n\nexport const sumByProp = key => arr =>\n  arr.reduce((acc, curr) => acc + curr[key], 0);\n\nexport const simpleMemoize = func => {\n  let lastArgs = null;\n  let lastResult = null;\n  return (...args) => {\n    if (\n      lastArgs !== null &&\n      lastArgs.length === args.length &&\n      args.every((value, index) => value === lastArgs[index])\n    ) {\n      return lastResult;\n    }\n    lastArgs = args;\n    lastResult = func(...args);\n    return lastResult;\n  };\n};\n\nexport const notAny = predicates => arg =>\n  predicates.every(predicate => !predicate(arg));\n\nexport const upsertBy = (arr, key, obj, updater = (prev, curr) => curr) => {\n  let exists = false;\n  const newArr = arr.map(item => {\n    if (item[key] === obj[key]) {\n      exists = true;\n      return updater(item, obj);\n    }\n    return item;\n  });\n  return exists ? newArr : newArr.concat(obj);\n};\n","import { utils } from \"ynab\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport flatMap from \"lodash/fp/flatMap\";\nimport dropWhile from \"lodash/fp/dropWhile\";\nimport matchesProperty from \"lodash/fp/matchesProperty\";\nimport omit from \"lodash/fp/omit\";\nimport reverse from \"lodash/fp/reverse\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport uniq from \"lodash/fp/uniq\";\nimport { upsertBy, keyByProp } from \"./dataUtils\";\n\nconst formatCurrency = utils.convertMilliUnitsToCurrencyAmount;\n\nconst GROUPS_TO_HIDE = [\"Internal Master Category\", \"Credit Card Payments\"];\n\nconst MAX_MONTHS_TO_SHOW = 24;\n\nexport const sanitizeBudget = budget => {\n  const transactionIdsFromSub = uniq(\n    budget.subtransactions.map(transaction => transaction.transaction_id)\n  );\n  const categoryGroups = budget.category_groups.filter(\n    group => !GROUPS_TO_HIDE.includes(group.name)\n  );\n  const categories = budget.categories\n    .filter(category => !category.deleted)\n    .map(category => ({\n      ...category,\n      activity: formatCurrency(category.activity),\n      balance: formatCurrency(category.balance),\n      budgeted: formatCurrency(category.budgeted)\n    }));\n  const categoriesById = keyByProp(\"id\")(categories);\n  const earliestDate = moment()\n    .subtract(MAX_MONTHS_TO_SHOW - 1, \"months\")\n    .format(\"YYYY-MM-01\");\n  const currencyFormat = {\n    symbol: budget.currency_format.currency_symbol\n  };\n\n  return {\n    ...omit([\"category_groups\", \"currency_format\"])(budget),\n    accountsById: keyByProp(\"id\")(budget.accounts),\n    categoryGroups,\n    categoryGroupsById: keyByProp(\"id\")(categoryGroups),\n    categories,\n    categoriesById,\n    currencyFormat,\n    payeesById: keyByProp(\"id\")(budget.payees),\n    months: sortBy(\"month\")(budget.months),\n    transactions: compose([\n      transactions =>\n        transactions.map(transaction => ({\n          ...transaction,\n          amount: formatCurrency(transaction.amount)\n        })),\n      // Not sure how this would happen, but seeing it in production\n      transactions =>\n        transactions.filter(\n          transaction =>\n            !transaction.category_id ||\n            !!categoriesById[transaction.category_id]\n        ),\n      flatMap(\n        transaction =>\n          transactionIdsFromSub.includes(transaction.id)\n            ? compose([\n                subs =>\n                  subs.map(sub =>\n                    omit(\"transaction_id\")({ ...transaction, ...sub })\n                  ),\n                subs =>\n                  subs.filter(matchesProperty(\"transaction_id\", transaction.id))\n              ])(budget.subtransactions)\n            : transaction\n      ),\n      reverse,\n      dropWhile(transaction => transaction.date < earliestDate),\n      sortBy(\"date\"),\n      transactions =>\n        transactions.filter(transaction => transaction.amount !== 0)\n    ])(budget.transactions)\n  };\n};\n\nconst applyDeltas = (arr, deltas, key = \"id\", updater) =>\n  deltas.reduce((acc, curr) => upsertBy(acc, key, curr, updater), arr);\n\nconst arraysToUpdate = [\n  \"accounts\",\n  \"categories\",\n  \"category_groups\",\n  \"payee_locations\",\n  \"payees\",\n  \"scheduled_subtransactions\",\n  \"scheduled_transactions\",\n  \"subtransactions\",\n  \"transactions\"\n];\n\nexport const mergeBudgets = (budget, deltas) => ({\n  ...budget,\n  ...deltas,\n  ...arraysToUpdate.reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr]: applyDeltas(budget[curr], deltas[curr])\n    }),\n    {}\n  ),\n  months: applyDeltas(budget.months, deltas.months, \"month\", (prev, curr) => ({\n    ...prev,\n    ...curr,\n    categories: applyDeltas(prev.categories, curr.categories)\n  }))\n});\n","import get from \"lodash/fp/get\";\nimport { getStorage, setStorage } from \"./localstorageUtils\";\n\nconst BUDGET_DETAILS_STORAGE_KEY = \"ynab_budget_details\";\n\nlet cachedDetails = null;\n\nconst getAllBudgetDetails = () => {\n  if (cachedDetails) {\n    return cachedDetails;\n  }\n  cachedDetails = getStorage(BUDGET_DETAILS_STORAGE_KEY);\n  return cachedDetails;\n};\n\nexport const getBudgetDetails = id => get(id)(getAllBudgetDetails());\n\nexport const setBudgetDetails = ({ id, budget, server_knowledge }) => {\n  const details = getAllBudgetDetails();\n  const newDetails = {\n    ...details,\n    [id]: { budget, server_knowledge }\n  };\n  setStorage(BUDGET_DETAILS_STORAGE_KEY, newDetails);\n  cachedDetails = newDetails;\n};\n","import * as ynab from \"ynab\";\nimport moment from \"moment\";\nimport get from \"lodash/fp/get\";\nimport matches from \"lodash/fp/matches\";\nimport { getStorage, setStorage } from \"./localstorageUtils\";\nimport { setSetting, getSetting } from \"./uiRepo\";\nimport { sanitizeBudget, mergeBudgets } from \"./repoUtils\";\nimport { getBudgetDetails, setBudgetDetails } from \"./localBudgetCache\";\nimport { clientId, redirectUri } from \"./ynabConfig\";\n\nconst TOKEN_STORAGE_KEY = \"ynab_access_token\";\nconst BUDGETS_STORAGE_KEY = \"ynab_budgets\";\nconst LAST_LOCATION_KEY = \"budget-reports-last-location\";\n\nconst TIME_LIMIT_FOR_FULL_REFRESH = 8 * 1000;\n\nexport const AUTHORIZE_URL =\n  \"https://api.youneedabudget.com/oauth/authorize?client_id=\" +\n  clientId +\n  \"&redirect_uri=\" +\n  redirectUri +\n  \"&response_type=token\";\n\nexport const getAuthorizeToken = () => {\n  // check for hash route\n  if (window.location.hash[1] === \"/\") {\n    return localStorage.getItem(TOKEN_STORAGE_KEY);\n  }\n\n  const search = window.location.hash\n    .substring(1)\n    .replace(/&/g, '\",\"')\n    .replace(/=/g, '\":\"');\n\n  if (!search) {\n    return localStorage.getItem(TOKEN_STORAGE_KEY);\n  }\n\n  const token = get(\"access_token\")(\n    JSON.parse(\n      '{\"' + search + '\"}',\n      (key, value) => (key === \"\" ? value : decodeURIComponent(value))\n    )\n  );\n  localStorage.setItem(TOKEN_STORAGE_KEY, token);\n  window.location.hash = localStorage.getItem(LAST_LOCATION_KEY) || \"\";\n  localStorage.removeItem(LAST_LOCATION_KEY);\n\n  return token;\n};\n\nlet api = null;\n\nexport const initializeYnabApi = token => {\n  api = new ynab.api(token);\n};\n\nexport const getBudgets = () =>\n  api.budgets\n    .getBudgets()\n    .then(({ data }) => {\n      setStorage(BUDGETS_STORAGE_KEY, data);\n      return data;\n    })\n    .catch(e => {\n      if (\n        matches({\n          id: \"401\",\n          name: \"unauthorized\"\n        })(e.error) ||\n        e.message === \"Failed to fetch\"\n      ) {\n        localStorage.removeItem(TOKEN_STORAGE_KEY);\n        return getStorage(BUDGETS_STORAGE_KEY) || { budgets: [] };\n      }\n\n      throw e;\n    });\n\nconst getBudget = id =>\n  api.budgets\n    .getBudgetById(id)\n    .then(({ data }) => {\n      const { budget, server_knowledge } = data;\n\n      setBudgetDetails({ id, budget, server_knowledge });\n      setSetting(\"lastUpdated\", id, moment().valueOf());\n\n      return { budget: sanitizeBudget(budget), authorized: true };\n    })\n    .catch(e => {\n      if (\n        matches({ id: \"401\", name: \"unauthorized\" })(e.error) ||\n        e.message === \"Failed to fetch\"\n      ) {\n        localStorage.removeItem(TOKEN_STORAGE_KEY);\n        return {\n          budget: { categories: [], transactions: [], payees: [] },\n          authorized: false\n        };\n      }\n\n      throw e;\n    });\n\nexport const getUpdatedBudget = id => {\n  const budgetDetails = getBudgetDetails(id);\n\n  if (!budgetDetails) {\n    return getBudget(id);\n  }\n\n  if (\n    moment().valueOf() - getSetting(\"lastUpdated\", id) <\n    TIME_LIMIT_FOR_FULL_REFRESH\n  ) {\n    return getBudget(id);\n  }\n\n  return api.budgets\n    .getBudgetById(id, budgetDetails.server_knowledge)\n    .then(({ data }) => {\n      const budget = mergeBudgets(budgetDetails.budget, data.budget);\n\n      setBudgetDetails({ id, budget, server_knowledge: data.server_knowledge });\n      setSetting(\"lastUpdated\", id, moment().valueOf());\n\n      return { budget: sanitizeBudget(budget), authorized: true };\n    })\n    .catch(e => {\n      if (\n        matches({ id: \"401\", name: \"unauthorized\" })(e.error) ||\n        e.message === \"Failed to fetch\"\n      ) {\n        return {\n          budget: sanitizeBudget(budgetDetails.budget),\n          authorized: false\n        };\n      }\n\n      throw e;\n    });\n};\n\nexport const setLastLocation = () => {\n  localStorage.setItem(LAST_LOCATION_KEY, window.location.hash);\n};\n","import styled from \"styled-components\";\n\nexport const PageTitle = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: #222;\n`;\n\nexport const LargeNumber = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: #222;\n`;\n\nexport const StrongText = styled.div`\n  font-size: 14px;\n  line-height: 22px;\n  font-weight: 500;\n  color: #222;\n`;\n\nexport const ListSectionHeader = styled.div`\n  font-size: 12px;\n  line-height: 21px;\n  font-weight: 700;\n  color: #222;\n`;\n\nexport const SecondaryText = styled.div`\n  font-size: 13px;\n  line-height: 21px;\n  font-weight: 400;\n  color: #666;\n`;\n\nexport const MinorText = styled.div`\n  font-size: 11px;\n  line-height: 16px;\n  font-weight: 400;\n  color: #999;\n`;\n","import React from \"react\";\nimport { StrongText, SecondaryText } from \"./typeComponents\";\n\nconst Loading = () => (\n  <div\n    style={{\n      height: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }}\n  >\n    <StrongText>Loading&hellip;</StrongText>\n    <SecondaryText>beep, beep, boop</SecondaryText>\n  </div>\n);\n\nLoading.propTypes = {};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loading from \"./Loading\";\n\nclass EnsureBudgetLoaded extends Component {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    budgetLoaded: PropTypes.bool.isRequired,\n    children: PropTypes.node.isRequired,\n    onRequestBudget: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    const { budgetId, budgetLoaded, onRequestBudget } = this.props;\n\n    if (!budgetLoaded) {\n      onRequestBudget(budgetId);\n    }\n  }\n\n  render() {\n    if (!this.props.budgetLoaded) {\n      return <Loading />\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default EnsureBudgetLoaded;\n","import tinyColor from \"tinycolor2\";\n\nexport const primaryColor = \"#4399ff\";\nexport const positiveColor = \"#2cbc2f\";\nexport const plotBandColor = \"#f2f2f2\";\nexport const negativeColor = \"red\";\nexport const selectedPlotBandColor = tinyColor(primaryColor)\n  .lighten(32)\n  .desaturate()\n  .toHexString();\nexport const lighterPrimaryColor = tinyColor(primaryColor)\n  .lighten(5)\n  .desaturate()\n  .toHexString();\nexport const lightPrimaryColor = tinyColor(primaryColor)\n  .lighten(25)\n  .desaturate()\n  .toHexString();\nexport const negativeChartColor = tinyColor(negativeColor)\n  .lighten(30)\n  .desaturate(60)\n  .toHexString();\n\nexport const iconWidth = 60;\n","import styled from \"styled-components\";\nimport { SecondaryText } from \"./typeComponents\";\nimport { primaryColor } from \"../styleVariables\";\n\nconst Button = styled(SecondaryText)`\n  display: inline-block;\n  user-select: none;\n  border: 1px solid #ccc;\n  padding: 4px 12px;\n  border-radius: 2px;\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nexport const PrimaryButton = styled(Button)`\n  background-color: ${primaryColor};\n  border-color: ${primaryColor};\n  color: #fff;\n`;\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/fp/keys\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons/faArrowLeft\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons/faBars\";\nimport { faCaretDown } from \"@fortawesome/free-solid-svg-icons/faCaretDown\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons/faChevronRight\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons/faCog\";\nimport { faEllipsisV } from \"@fortawesome/free-solid-svg-icons/faEllipsisV\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons/faEye\";\nimport { faEyeSlash } from \"@fortawesome/free-solid-svg-icons/faEyeSlash\";\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons/faPencilAlt\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons/faTimes\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nlibrary.add(\n  faArrowLeft,\n  faBars,\n  faCaretDown,\n  faChevronRight,\n  faCog,\n  faEllipsisV,\n  faEye,\n  faEyeSlash,\n  faPencilAlt,\n  faTimes\n);\n\nconst ICONS = {\n  \"arrow-left\": faArrowLeft,\n  bars: faBars,\n  \"caret-down\": faCaretDown,\n  \"chevron-right\": faChevronRight,\n  cog: faCog,\n  pencil: faPencilAlt,\n  \"ellipsis-v\": faEllipsisV,\n  eye: faEye,\n  \"eye-slash\": faEyeSlash,\n  times: faTimes\n};\n\nconst PRESET_STYLES = {\n  faded: {\n    fontWeight: 400,\n    color: \"#aaa\",\n    fontSize: 10\n  }\n};\n\nconst Icon = ({ icon, style, faded, ...other }) => (\n  <FontAwesomeIcon\n    {...other}\n    icon={ICONS[icon]}\n    style={{ ...style, ...(faded && PRESET_STYLES.faded) }}\n  />\n);\n\nIcon.propTypes = {\n  icon: PropTypes.oneOf(keys(ICONS)).isRequired,\n  faded: PropTypes.bool\n};\n\nexport default Icon;\n","import compose from \"lodash/fp/compose\";\nimport pick from \"lodash/fp/pick\";\nimport mapRaw from \"lodash/fp/map\";\nimport get from \"lodash/fp/get\";\nimport { groupByProp, simpleMemoize, sumByProp } from \"./dataUtils\";\n\nconst map = mapRaw.convert({ cap: false });\n\nexport const isStartingBalanceOrReconciliation = simpleMemoize(budget => {\n  const startingBalancePayeeId = get(\"id\")(\n    budget.payees.find(payee => payee.name === \"Starting Balance\")\n  );\n  const reconciliationPayeeId = get(\"id\")(\n    budget.payees.find(\n      payee => payee.name === \"Reconciliation Balance Adjustment\"\n    )\n  );\n\n  return transaction =>\n    transaction.payee_id === startingBalancePayeeId ||\n    transaction.payee_id === reconciliationPayeeId;\n});\n\nexport const isIncome = simpleMemoize(budget => {\n  const toBeBudgetedId = get(\"id\")(\n    budget.categories.find(category => category.name === \"To be Budgeted\")\n  );\n  return transaction => transaction.category_id === toBeBudgetedId;\n});\n\nexport const isTransfer = (investmentAccounts = {}) => transaction =>\n  !transaction.category_id ||\n  !!investmentAccounts[transaction.transfer_account_id];\n\nexport const getTransactionMonth = transaction => transaction.date.slice(0, 7);\n\nexport const getFirstMonth = budget =>\n  budget.transactions.length\n    ? getTransactionMonth(budget.transactions[budget.transactions.length - 1])\n    : undefined;\n\nexport const getPayeeNodes = ({ payeesById, transactions }, divideBy = 1) =>\n  compose([\n    map((transactions, payeeId) => ({\n      ...(payeesById[payeeId]\n        ? pick([\"id\", \"name\"])(payeesById[payeeId])\n        : { id: \"no-payee\", name: \"(no payee)\" }),\n      amount: sumByProp(\"amount\")(transactions) / divideBy\n    })),\n    groupByProp(\"payee_id\")\n  ])(transactions);\n\nexport const sanitizeName = name => name.replace(/[^a-zA-Z0-9 ]/g, \"\").trim();\n","import { useRef, useState } from \"react\";\nimport moment from \"moment\";\nimport { getSetting, setSetting } from \"./uiRepo\";\nimport { getFirstMonth } from \"./budgetUtils\";\n\nexport const useSelectedMonth = () => {\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const selectedMonthRef = useRef(selectedMonth);\n  selectedMonthRef.current = selectedMonth;\n\n  const onSelectMonth = month => {\n    setSelectedMonth(month === selectedMonthRef.current ? null : month);\n  };\n\n  return [selectedMonth, onSelectMonth];\n};\n\nexport const useSelectedEntityId = () => {\n  const [selectedEntityId, setSelectedEntityId] = useState(null);\n  const onSelectEntityId = entityId => {\n    setSelectedEntityId(entityId === selectedEntityId ? null : entityId);\n  };\n\n  return [selectedEntityId, onSelectEntityId];\n};\n\nexport const useTrendsShowAverage = budgetId => {\n  const [showAverage, setShowAverage] = useState(\n    getSetting(\"trendsShowAverage\", budgetId)\n  );\n  const onToggleShowAverage = () => {\n    setShowAverage(!showAverage);\n    setSetting(\"trendsShowAverage\", budgetId, !showAverage);\n  };\n\n  return [showAverage, onToggleShowAverage];\n};\n\nconst getMonths = (firstMonth, lastMonth) => {\n  const months = [firstMonth];\n  let m = firstMonth;\n\n  while (m !== lastMonth) {\n    m = moment(m)\n      .add(1, \"months\")\n      .format(\"YYYY-MM\");\n    months.push(m);\n  }\n\n  return months;\n};\n\nexport const useMonthExclusions = budget => {\n  const [excludeFirstMonth, setExcludeFirstMonth] = useState(\n    getSetting(\"excludeFirstMonth\", budget.id)\n  );\n  const [excludeLastMonth, setExcludeLastMonth] = useState(\n    getSetting(\"excludeLastMonth\", budget.id)\n  );\n\n  const firstBudgetMonth = getFirstMonth(budget);\n  const firstMonth = excludeFirstMonth\n    ? moment(firstBudgetMonth)\n        .add(1, \"months\")\n        .format(\"YYYY-MM\")\n    : firstBudgetMonth;\n  const lastMonth = excludeLastMonth\n    ? moment()\n        .subtract(1, \"months\")\n        .format(\"YYYY-MM\")\n    : moment().format(\"YYYY-MM\");\n  const months = getMonths(firstMonth, lastMonth);\n\n  const onSetExclusion = ({ month, exclude }) => {\n    if (month === \"first\") {\n      setExcludeFirstMonth(exclude);\n      setSetting(\"excludeFirstMonth\", budget.id, exclude);\n    } else {\n      setExcludeLastMonth(exclude);\n      setSetting(\"excludeLastMonth\", budget.id, exclude);\n    }\n  };\n\n  return { excludeFirstMonth, excludeLastMonth, months, onSetExclusion };\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { StrongText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\n\nconst Container = styled.div`\n  margin: 2px;\n  background-color: #fff;\n  border: 1px solid #e5e5e5;\n  border-radius: 2px;\n`;\n\nconst Header = styled(StrongText)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px 20px;\n  user-select: none;\n`;\n\nconst SettingsContainer = styled.div`\n  padding: 0 10px;\n  margin-right: -10px;\n  align-self: stretch;\n  display: flex;\n  align-items: center;\n  margin-left: 5px;\n`;\n\nconst Body = styled.div`\n  padding: 0 20px 15px;\n`;\n\nconst CollapsibleSection = ({\n  actions,\n  children,\n  hasSettings,\n  noPadding,\n  title,\n  onClickSettings\n}) => {\n  const [expanded, setExpanded] = useState(true);\n\n  return (\n    <Container>\n      <Header>\n        <div\n          style={{ display: \"flex\", alignItems: \"center\" }}\n          onClick={() => {\n            setExpanded(!expanded);\n          }}\n        >\n          {title}\n          <Icon\n            icon=\"chevron-right\"\n            transform={{ rotate: expanded ? 90 : 0 }}\n            style={{ marginLeft: 10 }}\n            faded\n          />\n        </div>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          {expanded && actions}\n          {hasSettings &&\n            expanded && (\n              <SettingsContainer onClick={onClickSettings}>\n                <Icon icon=\"cog\" faded />\n              </SettingsContainer>\n            )}\n        </div>\n      </Header>\n      <AnimateHeight isExpanded={expanded}>\n        <Body style={{ padding: noPadding && 0 }}>{children}</Body>\n      </AnimateHeight>\n    </Container>\n  );\n};\n\nCollapsibleSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  actions: PropTypes.node,\n  hasSettings: PropTypes.bool,\n  noPadding: PropTypes.bool,\n  onClickSettings: PropTypes.func\n};\n\nexport default CollapsibleSection;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst CHART_DEFAULTS = {\n  chart: { height: 240, spacing: [0, 0, 0, 0] },\n  credits: { enabled: false },\n  legend: { enabled: false },\n  title: { text: \"\" },\n  subtitle: { text: \"\" },\n  tooltip: { enabled: false },\n  xAxis: { tickLength: 0 }\n};\n\nconst Chart = ({ options }) => (\n  <HighchartsReact\n    highcharts={Highcharts}\n    options={{\n      ...CHART_DEFAULTS,\n      ...options,\n      chart: { ...CHART_DEFAULTS.chart, ...options.chart },\n      xAxis: { ...CHART_DEFAULTS.xAxis, ...options.xAxis }\n    }}\n  />\n);\n\nChart.propTypes = {\n  options: PropTypes.object\n};\n\nexport default Chart;\n","import React from \"react\";\n\nconst CurrencyContext = React.createContext();\n\nexport default CurrencyContext;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport get from \"lodash/fp/get\";\nimport { positiveColor, negativeColor } from \"../styleVariables\";\nimport CurrencyContext from \"./CurrencyContext\";\n\nexport const addCommas = nStr => {\n  nStr += \"\";\n\n  const x = nStr.split(\".\");\n  let x1 = x[0];\n  const x2 = x.length > 1 ? \".\" + x[1] : \"\";\n  const rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, \"$1,$2\");\n  }\n  return x1 + x2;\n};\n\nconst Amount = ({\n  amount,\n  amountAfterDecimal,\n  positiveIsRed,\n  showCurrencySymbol,\n  style\n}) => (\n  <CurrencyContext.Consumer>\n    {currencyFormat => (\n      <span\n        style={{\n          ...style,\n          color: amount > 0 && (positiveIsRed ? negativeColor : positiveColor)\n        }}\n      >\n        {amount > 0 && (positiveIsRed ? \"-\" : \"+\")}\n        {showCurrencySymbol && (get(\"symbol\")(currencyFormat) || \"$\")}\n        {addCommas(Math.abs(amount).toFixed(amountAfterDecimal))}\n      </span>\n    )}\n  </CurrencyContext.Consumer>\n);\n\nAmount.propTypes = {\n  amount: PropTypes.number.isRequired,\n  amountAfterDecimal: PropTypes.number,\n  positiveIsRed: PropTypes.bool,\n  showCurrencySymbol: PropTypes.bool,\n  style: PropTypes.object\n};\n\nAmount.defaultProps = {\n  amountAfterDecimal: 2\n};\n\nexport default Amount;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport isNumber from \"lodash/fp/isNumber\";\nimport { MinorText, LargeNumber } from \"./typeComponents\";\nimport Amount from \"./Amount\";\n\nconst ChartNumbers = ({ numbers, alwaysRound }) => {\n  const smallNumbers = numbers.some(({ amount }) => Math.abs(amount) < 100);\n  return (\n    <div\n      style={{\n        textAlign: \"right\",\n        lineHeight: \"16px\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        flexDirection: \"row-reverse\",\n        marginBottom: 8\n      }}\n    >\n      {numbers.map(({ amount, label, isMoney = true, decimalsToRound }) => (\n        <div key={label} style={{ marginLeft: 20 }}>\n          <LargeNumber style={{ lineHeight: \"16px\" }}>\n            <Amount\n              amount={amount}\n              amountAfterDecimal={\n                isNumber(decimalsToRound)\n                  ? decimalsToRound\n                  : smallNumbers && !alwaysRound\n                    ? 2\n                    : 0\n              }\n              showCurrencySymbol={isMoney}\n              positiveIsRed\n            />\n          </LargeNumber>\n          <MinorText>{label}</MinorText>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nChartNumbers.propTypes = {\n  numbers: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      label: PropTypes.string.isRequired,\n      alwaysRound: PropTypes.bool,\n      decimalsToRound: PropTypes.number,\n      isMoney: PropTypes.bool\n    })\n  ).isRequired,\n  alwaysRound: PropTypes.bool\n};\n\nexport default ChartNumbers;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport tinyColor from \"tinycolor2\";\nimport compose from \"lodash/fp/compose\";\nimport isNumber from \"lodash/fp/isNumber\";\nimport padCharsStart from \"lodash/fp/padCharsStart\";\nimport range from \"lodash/fp/range\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport { groupByProp, sumByProp } from \"../dataUtils\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport { primaryColor, plotBandColor } from \"../styleVariables\";\nimport { MinorText } from \"./typeComponents\";\nimport Chart from \"./Chart\";\nimport ChartNumbers from \"./ChartNumbers\";\n\nconst DateLabels = styled.div`\n  border-top: 1px solid #ddd;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst getData = ({ month, transactionsByDate }) => {\n  const today = moment().format(\"YYYY-MM-DD\");\n  let cumulative = 0;\n  return range(-1, moment(month).daysInMonth()).map(numDays => {\n    const date =\n      numDays === -1\n        ? moment(month).add(-1, \"days\")\n        : `${month}-${padCharsStart(\"0\")(2)(numDays + 1)}`;\n\n    if (date > today) {\n      return null;\n    }\n\n    cumulative += -sumBy(\"amount\")(transactionsByDate[date] || []);\n\n    return cumulative;\n  });\n};\n\nclass SpendingChart extends PureComponent {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    currentMonth: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        date: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    total: PropTypes.number\n  };\n\n  render() {\n    const {\n      total,\n      transactions,\n      highlightFunction,\n      currentMonth,\n      monthsToCompare\n    } = this.props;\n\n    const highlightedTransactions = highlightFunction\n      ? transactions.filter(highlightFunction)\n      : [];\n    const highlightData = getData({\n      month: currentMonth,\n      transactionsByDate: groupByProp(\"date\")(highlightedTransactions)\n    });\n    const highlightSeries = {\n      type: \"areaspline\",\n      data: highlightData,\n      enableMouseTracking: false,\n      marker: { enabled: false },\n      animation: false,\n      color: primaryColor,\n      lineWidth: 0,\n      fillOpacity: 0.8\n    };\n    const daysInMonth = moment(currentMonth).daysInMonth();\n    const firstDate = moment(currentMonth).add(-1, \"days\");\n    const lastDate = moment(currentMonth).add(daysInMonth - 1, \"days\");\n\n    const transactionsByDate = groupByProp(\"date\")(transactions);\n    const data = getData({ month: currentMonth, transactionsByDate });\n    const lineData = range(0, daysInMonth + 1).map(\n      day => (day / daysInMonth) * total\n    );\n    const firstDayOfWeek = parseInt(firstDate.format(\"d\"), 10);\n    const plotBands = range(0, 6).map(num => ({\n      color: plotBandColor,\n      from: num * 7 - 1.5 - firstDayOfWeek,\n      to: num * 7 + 0.5 - firstDayOfWeek\n    }));\n\n    const comparisonSeries = range(monthsToCompare, 0).map(numMonths => ({\n      type: \"spline\",\n      data: getData({\n        month: moment(currentMonth)\n          .subtract(numMonths, \"months\")\n          .format(\"YYYY-MM\"),\n        transactionsByDate\n      }),\n      enableMouseTracking: false,\n      color:\n        \"#\" +\n        tinyColor\n          .mix(\n            primaryColor,\n            \"#f2f2f2\",\n            30 + ((numMonths - 1) * 70) / monthsToCompare\n          )\n          .toHex(),\n      lineWidth: 1,\n      marker: { enabled: false },\n      animation: false\n    }));\n\n    const spent = compose([\n      sumByProp(\"amount\"),\n      takeWhile(\n        transaction => getTransactionMonth(transaction) === currentMonth\n      )\n    ])(transactions);\n    const chartNumbers = [{ amount: spent, label: \"spent\" }];\n    if (isNumber(total)) {\n      chartNumbers.push({ amount: -(total + spent), label: \"available\" });\n    }\n\n    return (\n      <Fragment>\n        <ChartNumbers numbers={chartNumbers} />\n        <Chart\n          key={monthsToCompare}\n          options={{\n            chart: { spacing: [0, 0, 0, 0], height: 140, animation: false },\n            xAxis: {\n              labels: { enabled: false },\n              plotBands\n            },\n            yAxis: { visible: false, endOnTick: false, startOnTick: false },\n            series: [\n              {\n                type: \"line\",\n                color: \"#aaa\",\n                dashStyle: \"Dot\",\n                lineWidth: 1,\n                data: lineData,\n                enableMouseTracking: false,\n                marker: { enabled: false },\n                animation: false\n              },\n              ...comparisonSeries,\n              {\n                type: \"spline\",\n                data,\n                enableMouseTracking: false,\n                color: primaryColor,\n                marker: { enabled: false },\n                animation: false,\n                ...(highlightFunction && {\n                  type: \"areaspline\",\n                  fillOpacity: 0.2\n                })\n              },\n              highlightSeries\n            ]\n          }}\n        />\n        <DateLabels>\n          <MinorText>{firstDate.format(\"MMM D\")}</MinorText>\n          <MinorText>{lastDate.format(\"MMM D\")}</MinorText>\n        </DateLabels>\n      </Fragment>\n    );\n  }\n}\n\nexport default SpendingChart;\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { StrongText } from \"./typeComponents\";\nimport { PrimaryButton } from \"./Button\";\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  opacity: 0;\n  transition: opacity 0.2s ease-in-out;\n`;\n\nconst ModalContent = styled.div`\n  position: relative;\n  min-width: 200px;\n  padding: 15px 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  background-color: #fff;\n  border-radius: 2px;\n  transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out;\n`;\n\nconst ensureNextTick = callback =>\n  requestAnimationFrame(() => {\n    requestAnimationFrame(callback);\n  });\n\nclass Modal extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    width: PropTypes.number\n  };\n\n  constructor() {\n    super();\n    this.el = document.createElement(\"div\");\n    this.state = { animationState: \"left\" };\n  }\n\n  componentDidMount() {\n    document.body.appendChild(this.el);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.open && this.props.open) {\n      ensureNextTick(() => {\n        this.setState({ animationState: \"entering\" });\n      });\n    }\n    if (prevProps.open && !this.props.open) {\n      ensureNextTick(() => {\n        this.setState({ animationState: \"leaving\" });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.el);\n  }\n\n  handleTransitionEnd = () => {\n    const { animationState } = this.state;\n\n    if (animationState === \"entering\") {\n      this.setState({ animationState: \"entered\" });\n    } else if (animationState === \"leaving\") {\n      this.setState({ animationState: \"left\" });\n    }\n  };\n\n  render() {\n    const { open, children, title, onClose, width } = this.props;\n    const { animationState } = this.state;\n\n    if (!open && animationState === \"left\") {\n      return null;\n    }\n\n    const shouldShow = [\"entering\", \"entered\"].includes(animationState);\n\n    return createPortal(\n      <Container>\n        <Overlay\n          onClick={onClose}\n          style={{ opacity: shouldShow ? 1 : 0 }}\n          onTransitionEnd={this.handleTransitionEnd}\n        />\n        <ModalContent\n          style={{\n            opacity: shouldShow ? 1 : 0,\n            transform: `translate3d(0, ${shouldShow ? \"0\" : \"20px\"}, 0)`,\n            width\n          }}\n        >\n          {title && (\n            <StrongText style={{ marginBottom: 10 }}>{title}</StrongText>\n          )}\n          {children}\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              marginTop: 20\n            }}\n          >\n            <PrimaryButton onClick={onClose}>Done</PrimaryButton>\n          </div>\n        </ModalContent>\n      </Container>,\n      this.el\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"./Modal\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Button from \"./Button\";\n\nconst ChartSettingsModal = ({\n  open,\n  monthsToCompare,\n  onClose,\n  onDecrementMonths,\n  onIncrementMonths\n}) => (\n  <Modal open={open} title=\"Chart Settings\" onClose={onClose}>\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <div style={{ marginRight: 10 }}>\n        <Button onClick={onDecrementMonths}>-</Button>\n        <Button onClick={onIncrementMonths}>+</Button>\n      </div>\n      <SecondaryText>\n        Compare with the last {monthsToCompare} month\n        {monthsToCompare === 1 ? \"\" : \"s\"}\n      </SecondaryText>\n    </div>\n  </Modal>\n);\n\nChartSettingsModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  monthsToCompare: PropTypes.number.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onDecrementMonths: PropTypes.func.isRequired,\n  onIncrementMonths: PropTypes.func.isRequired\n};\n\nexport default ChartSettingsModal;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getSetting, setSetting } from \"../uiRepo\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport SpendingChart from \"./SpendingChart\";\nimport ChartSettingsModal from \"./ChartSettingsModal\";\n\nconst MAX_MONTHS = 12;\n\nclass DayByDaySection extends Component {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    currentMonth: PropTypes.string.isRequired,\n    transactions: PropTypes.array.isRequired,\n    highlightFunction: PropTypes.func,\n    title: PropTypes.string,\n    total: PropTypes.number\n  };\n\n  static defaultProps = { title: \"Day by Day\" };\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      modalOpen: false,\n      monthsToCompare: getSetting(\"spendingMonthsToCompare\", props.budgetId)\n    };\n  }\n\n  handleClickSettings = () => {\n    this.setState({ modalOpen: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ modalOpen: false });\n  };\n\n  handleDecrementMonths = () => {\n    this.setState(\n      state => ({\n        ...state,\n        monthsToCompare: Math.max(state.monthsToCompare - 1, 0)\n      }),\n      this.saveSetting\n    );\n  };\n\n  handleIncrementMonths = () => {\n    this.setState(\n      state => ({\n        ...state,\n        monthsToCompare: Math.min(state.monthsToCompare + 1, MAX_MONTHS)\n      }),\n      this.saveSetting\n    );\n  };\n\n  saveSetting = () => {\n    setSetting(\n      \"spendingMonthsToCompare\",\n      this.props.budgetId,\n      this.state.monthsToCompare\n    );\n  };\n\n  render() {\n    const { transactions, budgetId, currentMonth, highlightFunction, title, total } = this.props;\n    const { modalOpen, monthsToCompare } = this.state;\n\n    return (\n      <Fragment>\n        <CollapsibleSection\n          title={title}\n          hasSettings\n          onClickSettings={this.handleClickSettings}\n        >\n          <SpendingChart\n            budgetId={budgetId}\n            currentMonth={currentMonth}\n            highlightFunction={highlightFunction}\n            monthsToCompare={monthsToCompare}\n            total={total}\n            transactions={transactions}\n          />\n        </CollapsibleSection>\n        <ChartSettingsModal\n          open={modalOpen}\n          monthsToCompare={monthsToCompare}\n          onClose={this.handleCloseModal}\n          onDecrementMonths={this.handleDecrementMonths}\n          onIncrementMonths={this.handleIncrementMonths}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default DayByDaySection;\n","import styled from \"styled-components\";\n\nconst ListItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 0;\n  border-top: 1px dotted #ddd;\n  user-select: none;\n\n  &:first-child {\n    border-top: ${props => !props.isContinuing && 0};\n    padding-top: ${props => !props.isContinuing && 0};\n  }\n`;\n\nexport default ListItem;\n","import styled from \"styled-components\";\nimport { SecondaryText } from \"./typeComponents\";\n\nconst EmptyText = styled(SecondaryText)`\n  text-align: center;\n  margin: 10px;\n  opacity: 0.5;\n`;\n\nexport default EmptyText;\n","import React from \"react\";\nimport EmptyText from \"./EmptyText\";\n\nconst NoTransactions = () => <EmptyText>No transactions this month</EmptyText>;\n\nexport default NoTransactions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\n\nconst LabelWithMinorText = ({ label, minorText, inLink, to, bold }) => (\n  <SecondaryText\n    style={{\n      fontWeight: bold && 700,\n      display: \"flex\",\n      alignItems: \"baseline\",\n      whiteSpace: \"pre\",\n      overflow: \"hidden\",\n      color: inLink && \"inherit\"\n    }}\n  >\n    {to ? <Link to={to}>{label}</Link> : label}\n    {minorText && (\n      <MinorText\n        style={{\n          fontWeight: bold && 700,\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\"\n        }}\n      >\n        &nbsp;&ndash; {minorText}\n      </MinorText>\n    )}\n  </SecondaryText>\n);\n\nLabelWithMinorText.propTypes = {\n  label: PropTypes.string.isRequired,\n  bold: PropTypes.bool,\n  inLink: PropTypes.bool,\n  minorText: PropTypes.string,\n  to: PropTypes.string\n};\n\nexport default LabelWithMinorText;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LabelWithMinorText from \"./LabelWithMinorText\";\n\nconst LabelWithTransactionCount = ({\n  label,\n  count,\n  inLink,\n  selected,\n  showCount,\n  to\n}) => (\n  <LabelWithMinorText\n    bold={selected}\n    label={label}\n    minorText={showCount && `${count} transaction${count === 1 ? \"\" : \"s\"}`}\n    inLink={inLink}\n    to={to}\n  />\n);\n\nLabelWithTransactionCount.propTypes = {\n  count: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n  inLink: PropTypes.bool,\n  selected: PropTypes.bool,\n  showCount: PropTypes.bool,\n  to: PropTypes.string\n};\n\nLabelWithTransactionCount.defaultProps = { showCount: true };\n\nexport default LabelWithTransactionCount;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\n\nconst AmountWithPercentage = ({\n  amount,\n  positiveIsRed,\n  total,\n  faded,\n  selected\n}) => (\n  <SecondaryText\n    style={{\n      display: \"flex\",\n      alignItems: \"baseline\",\n      opacity: faded ? 0.3 : 1,\n      fontWeight: selected && 700\n    }}\n  >\n    <Amount amount={amount} positiveIsRed={positiveIsRed} />\n    <MinorText\n      style={{ width: 44, textAlign: \"right\", fontWeight: selected && 700 }}\n    >\n      {total ? `${((amount / total) * 100).toFixed(1)}%` : `–`}\n    </MinorText>\n  </SecondaryText>\n);\n\nAmountWithPercentage.propTypes = {\n  amount: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveIsRed: PropTypes.bool,\n  faded: PropTypes.bool,\n  selected: PropTypes.bool\n};\n\nexport default AmountWithPercentage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MinorText } from \"./typeComponents\";\n\nconst SeeAll = ({ count, pluralizedName, showAll, onToggle }) => (\n  <MinorText style={{ textAlign: \"center\", marginTop: 5 }} onClick={onToggle}>\n    {showAll ? \"see less\" : `see all ${count} ${pluralizedName}`}\n  </MinorText>\n);\n\nSeeAll.propTypes = {\n  count: PropTypes.number.isRequired,\n  pluralizedName: PropTypes.string.isRequired,\n  showAll: PropTypes.bool.isRequired,\n  onToggle: PropTypes.func.isRequired\n};\n\nexport default SeeAll;\n","import React, { Component, PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport get from \"lodash/fp/get\";\nimport map from \"lodash/fp/map\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { groupBy, groupByProp, sumByProp } from \"../dataUtils\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { Link } from \"react-router-dom\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport { SecondaryText } from \"./typeComponents\";\nimport ListItem from \"./ListItem\";\nimport NoTransactions from \"./NoTransactions\";\nimport LabelWithTransactionCount from \"./LabelWithTransactionCount\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\nimport SeeAll from \"./SeeAll\";\n\nconst mapWithKeys = map.convert({ cap: false });\nconst LIMIT = 5;\n\nconst keyToPluralizedName = {\n  category_group_id: \"category groups\",\n  category_id: \"categories\",\n  payee_id: \"payees\"\n};\n\nclass GenericEntitiesSection extends Component {\n  static propTypes = {\n    entitiesById: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    entityKey: PropTypes.oneOf([\n      \"category_id\",\n      \"category_group_id\",\n      \"payee_id\"\n    ]),\n    emptyName: PropTypes.string,\n    entityFunction: PropTypes.func,\n    positiveIsRed: PropTypes.bool,\n    linkFunction: PropTypes.func,\n    limitShowing: PropTypes.bool,\n    numMonths: PropTypes.number,\n    selectedEntityId: PropTypes.string,\n    showAverage: PropTypes.bool,\n    showAverageToggle: PropTypes.bool,\n    showTransactionCount: PropTypes.bool,\n    onClickEntity: PropTypes.func,\n    onToggleAverage: PropTypes.func\n  };\n\n  static defaultProps = { emptyName: \"(none)\" };\n\n  state = { showAll: false, allMounted: false };\n\n  handleToggleShowAll = () => {\n    const { allMounted, showAll } = this.state;\n    if (allMounted) {\n      this.setState({ showAll: !showAll });\n    } else {\n      this.setState({ allMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ showAll: true });\n      });\n    }\n  };\n\n  render() {\n    const {\n      emptyName,\n      entityKey,\n      entityFunction,\n      entitiesById,\n      positiveIsRed,\n      linkFunction,\n      limitShowing: limitShowingProp,\n      numMonths,\n      selectedEntityId,\n      showAverage,\n      showAverageToggle,\n      showTransactionCount,\n      title,\n      transactions,\n      onClickEntity,\n      onToggleAverage\n    } = this.props;\n    const { allMounted, showAll } = this.state;\n    let total = 0;\n    const entities = compose([\n      sortBy(\"amount\"),\n      mapWithKeys((transactions, entityId) => {\n        const amount = sumByProp(\"amount\")(transactions);\n        total += amount;\n\n        return {\n          entityId,\n          transactions: transactions.length,\n          amount\n        };\n      }),\n      entityFunction ? groupBy(entityFunction) : groupByProp(entityKey)\n    ])(transactions);\n\n    const limitShowing = limitShowingProp && entities.length > LIMIT + 1;\n    const topEntities = entities.slice(0, LIMIT);\n    const otherEntities = entities.slice(LIMIT);\n\n    return (\n      <CollapsibleSection\n        title={title}\n        actions={\n          showAverageToggle && (\n            <SecondaryText onClick={onToggleAverage}>\n              {showAverage ? \"average\" : \"total\"}\n            </SecondaryText>\n          )\n        }\n      >\n        {entities.length === 0 && <NoTransactions />}\n        {(limitShowing ? topEntities : entities).map(\n          ({ entityId, transactions, amount }) => (\n            <GenericItemLink\n              key={entityId}\n              showTransactionCount={showTransactionCount}\n              to={\n                linkFunction && !!entitiesById[entityId]\n                  ? linkFunction(entityId)\n                  : null\n              }\n              transactions={transactions}\n              name={get(\"name\")(entitiesById[entityId]) || emptyName}\n              amount={showAverage ? amount / numMonths : amount}\n              positiveIsRed={positiveIsRed}\n              selected={entityId === selectedEntityId}\n              total={showAverage ? total / numMonths : total}\n              id={entityId}\n              onClick={onClickEntity}\n            />\n          )\n        )}\n        {allMounted && (\n          <AnimateHeight isExpanded={showAll}>\n            <Fragment>\n              {otherEntities.map(({ entityId, transactions, amount }) => (\n                <GenericItemLink\n                  key={entityId}\n                  showTransactionCount={showTransactionCount}\n                  to={\n                    linkFunction && !!entitiesById[entityId]\n                      ? linkFunction(entityId)\n                      : null\n                  }\n                  transactions={transactions}\n                  name={get(\"name\")(entitiesById[entityId]) || emptyName}\n                  amount={showAverage ? amount / numMonths : amount}\n                  positiveIsRed={positiveIsRed}\n                  selected={entityId === selectedEntityId}\n                  total={total}\n                  id={entityId}\n                  onClick={onClickEntity}\n                  isContinuing\n                />\n              ))}\n            </Fragment>\n          </AnimateHeight>\n        )}\n        {!!otherEntities.length &&\n          limitShowing && (\n            <SeeAll\n              count={entities.length}\n              pluralizedName={keyToPluralizedName[entityKey]}\n              showAll={showAll}\n              onToggle={this.handleToggleShowAll}\n            />\n          )}\n      </CollapsibleSection>\n    );\n  }\n}\n\nconst MaybeLink = ({ to, children, ...other }) =>\n  to ? (\n    <Link {...other} to={to}>\n      {children}\n    </Link>\n  ) : (\n    <span {...other}>{children}</span>\n  );\n\nclass GenericItemLink extends PureComponent {\n  render() {\n    const {\n      showTransactionCount,\n      to,\n      transactions,\n      name,\n      amount,\n      positiveIsRed,\n      total,\n      selected,\n      id,\n      onClick,\n      isContinuing\n    } = this.props;\n    return (\n      <ListItem\n        isContinuing={isContinuing}\n        onClick={onClick && (() => onClick(id))}\n      >\n        {showTransactionCount ? (\n          <LabelWithTransactionCount\n            count={transactions}\n            label={name}\n            selected={selected}\n            to={to}\n          />\n        ) : (\n          <MaybeLink\n            to={to}\n            onClick={\n              to &&\n              (evt => {\n                evt.stopPropagation();\n              })\n            }\n          >\n            <SecondaryText\n              style={{\n                whiteSpace: \"pre\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                color: \"inherit\",\n                fontWeight: selected && 700\n              }}\n            >\n              {name}\n            </SecondaryText>\n          </MaybeLink>\n        )}\n        <AmountWithPercentage\n          amount={amount}\n          positiveIsRed={positiveIsRed}\n          selected={selected}\n          total={total}\n        />\n      </ListItem>\n    );\n  }\n}\n\nGenericItemLink.propTypes = {\n  amount: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  total: PropTypes.number.isRequired,\n  transactions: PropTypes.number.isRequired,\n  id: PropTypes.string,\n  isContinuing: PropTypes.bool,\n  selected: PropTypes.bool,\n  showTransactionCount: PropTypes.bool,\n  to: PropTypes.string\n};\n\nexport default GenericEntitiesSection;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport get from \"lodash/fp/get\";\nimport { SecondaryText } from \"./typeComponents\";\nimport ListItem from \"./ListItem\";\nimport Amount from \"./Amount\";\nimport LabelWithMinorText from \"./LabelWithMinorText\";\n\nconst StyledListItem = styled(ListItem)`\n  border-top: 0;\n  padding-bottom: 0;\n`;\n\nconst DateSummaryTransaction = ({ category, payee, memo, amount }) => (\n  <StyledListItem isContinuing>\n    <div style={{ overflow: \"hidden\" }}>\n      <LabelWithMinorText\n        label={get(\"name\")(payee) || \"(no payee)\"}\n        minorText={\n          get(\"name\")(category) || \"(no category)\" + (memo ? ` (${memo})` : \"\")\n        }\n      />\n    </div>\n    <SecondaryText>\n      <Amount amount={amount} />\n    </SecondaryText>\n  </StyledListItem>\n);\n\nDateSummaryTransaction.propTypes = {\n  amount: PropTypes.number.isRequired,\n  category: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  }),\n  isContinuing: PropTypes.bool,\n  memo: PropTypes.string,\n  payee: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })\n};\n\nexport default DateSummaryTransaction;\n","import React from \"react\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\nimport Amount from \"./Amount\";\nimport styled from \"styled-components\";\nimport ListItem from \"./ListItem\";\n\nconst INDENTATION = 18;\n\nconst NodeWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${props => (props.isCompact ? \"0\" : \"8px 0\")};\n  user-select: none;\n\n  ${ListItem}:first-child > & {\n    padding-top: 0;\n  }\n`;\n\nconst IconWrapper = styled.div`\n  box-sizing: border-box;\n  padding-left: 3px;\n  width: ${INDENTATION}px;\n  font-weight: 400;\n  color: #888;\n  font-size: 10px;\n`;\n\nconst ToggleNode = ({\n  expanded,\n  name,\n  id,\n  amount,\n  valueRenderer,\n  onToggle,\n  isCompact\n}) => (\n  <NodeWrapper onClick={onToggle} isCompact={isCompact}>\n    <SecondaryText\n      style={{ whiteSpace: \"pre\", display: \"flex\", alignItems: \"center\" }}\n    >\n      <IconWrapper>\n        <Icon icon=\"chevron-right\" transform={{ rotate: expanded ? 90 : 0 }} />\n      </IconWrapper>\n      {typeof name === \"function\" ? name({ expanded }) : name}\n    </SecondaryText>\n    {valueRenderer ? (\n      valueRenderer({ amount, id, faded: expanded })\n    ) : (\n      <SecondaryText style={{ opacity: expanded ? 0.3 : 1 }}>\n        <Amount amount={amount} />\n      </SecondaryText>\n    )}\n  </NodeWrapper>\n);\n\nexport default ToggleNode;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport ListItem from \"./ListItem\";\nimport moment from \"moment\";\nimport { sumByProp } from \"../dataUtils\";\nimport EmptyText from \"./EmptyText\";\nimport DateSummaryTransaction from \"./DateSummaryTransaction\";\nimport ToggleNode from \"./ToggleNode\";\n\nconst Container = styled(ListItem)`\n  display: block;\n`;\n\nconst DateSummary = ({\n  categoriesById,\n  date,\n  expanded,\n  payeesById,\n  transactions,\n  onToggleExpanded\n}) => (\n  <Container>\n    <ToggleNode\n      amount={sumByProp(\"amount\")(transactions)}\n      expanded={expanded}\n      name={moment(date).calendar(null, {\n        sameDay: \"[Today]\",\n        nextDay: \"[Tomorrow]\",\n        nextWeek: \"dddd\",\n        lastDay: \"[Yesterday]\",\n        lastWeek: \"[Last] dddd\",\n        sameElse: \"DD/MM/YYYY\"\n      })}\n      onToggle={onToggleExpanded}\n      isCompact\n    />\n    <AnimateHeight isExpanded={expanded}>\n      <div style={{ paddingLeft: 18 }}>\n        {transactions.length ? (\n          transactions.map(transaction => (\n            <DateSummaryTransaction\n              key={transaction.id}\n              amount={transaction.amount}\n              payee={payeesById[transaction.payee_id]}\n              category={categoriesById[transaction.category_id]}\n              memo={transaction.memo}\n            />\n          ))\n        ) : (\n          <EmptyText style={{ margin: 0 }}>no transactions</EmptyText>\n        )}\n      </div>\n    </AnimateHeight>\n  </Container>\n);\n\nDateSummary.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  date: PropTypes.string.isRequired,\n  expanded: PropTypes.bool.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      category_id: PropTypes.string,\n      payee_id: PropTypes.string\n    })\n  ).isRequired,\n  onToggleExpanded: PropTypes.func.isRequired\n};\n\nexport default DateSummary;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { groupByProp } from \"../dataUtils\";\nimport moment from \"moment\";\nimport range from \"lodash/fp/range\";\nimport values from \"lodash/fp/values\";\nimport { SecondaryText } from \"./typeComponents\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport DateSummary from \"./DateSummary\";\n\nconst NUM_DAYS = 5;\n\nconst RecentSpending = ({\n  categoriesById,\n  currentMonth,\n  payeesById,\n  transactions\n}) => {\n  const transactionsByDate = groupByProp(\"date\")(transactions);\n  const recentDays = range(0, NUM_DAYS)\n    .map(n =>\n      moment()\n        .subtract(n, \"days\")\n        .format(\"YYYY-MM-DD\")\n    )\n    .filter(date => date.startsWith(currentMonth));\n\n  const [expanded, setExpanded] = useState(\n    recentDays.reduce((acc, date) => ({ ...acc, [date]: false }), {})\n  );\n\n  const isAllExpanded = values(expanded).every(e => e);\n\n  return (\n    <CollapsibleSection\n      title=\"Recent Spending\"\n      actions={\n        <SecondaryText\n          onClick={() => {\n            setExpanded(\n              recentDays.reduce(\n                (acc, date) => ({ ...acc, [date]: !isAllExpanded }),\n                {}\n              )\n            );\n          }}\n        >\n          {isAllExpanded ? \"collapse all\" : \"expand all\"}\n        </SecondaryText>\n      }\n    >\n      {recentDays.map(date => (\n        <DateSummary\n          key={date}\n          categoriesById={categoriesById}\n          date={date}\n          expanded={!!expanded[date]}\n          onToggleExpanded={() => {\n            setExpanded({ ...expanded, [date]: !expanded[date] });\n          }}\n          payeesById={payeesById}\n          transactions={transactionsByDate[date] || []}\n        />\n      ))}\n    </CollapsibleSection>\n  );\n};\n\nRecentSpending.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      date: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nexport default RecentSpending;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport {\n  getTransactionMonth,\n  isTransfer,\n  isStartingBalanceOrReconciliation,\n  isIncome,\n  sanitizeName\n} from \"../budgetUtils\";\nimport { notAny } from \"../dataUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport { useSelectedEntityId } from \"../commonHooks\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport RecentSpending from \"./RecentSpending\";\n\nconst CurrentMonth = ({ budget, currentMonth, investmentAccounts }) => {\n  const [selectedGroupId, onSelectGroupId] = useSelectedEntityId();\n\n  const {\n    categoryGroupsById,\n    categoriesById,\n    payeesById,\n    id: budgetId\n  } = budget;\n  const selectedGroup = selectedGroupId && categoryGroupsById[selectedGroupId];\n  const transactions = budget.transactions.filter(\n    notAny([\n      isIncome(budget),\n      isTransfer(investmentAccounts),\n      isStartingBalanceOrReconciliation(budget)\n    ])\n  );\n  const transactionsThisMonth = takeWhile(\n    transaction => getTransactionMonth(transaction) === currentMonth\n  )(transactions);\n\n  return (\n    <Fragment>\n      <DayByDaySection\n        budgetId={budget.id}\n        currentMonth={currentMonth}\n        transactions={transactions}\n        highlightFunction={\n          selectedGroupId &&\n          (transaction =>\n            categoriesById[transaction.category_id].category_group_id ===\n            selectedGroupId)\n        }\n        title={\n          selectedGroup\n            ? `Day by Day: ${sanitizeName(selectedGroup.name)}`\n            : \"Day by Day\"\n        }\n      />\n      <RecentSpending\n        categoriesById={categoriesById}\n        currentMonth={currentMonth}\n        payeesById={payeesById}\n        transactions={transactionsThisMonth}\n      />\n      <GenericEntitiesSection\n        entitiesById={categoryGroupsById}\n        entityFunction={transaction =>\n          categoriesById[transaction.category_id].category_group_id\n        }\n        entityKey=\"category_group_id\"\n        limitShowing\n        linkFunction={groupId =>\n          makeLink(pages.currentMonthGroup.path, {\n            budgetId,\n            categoryGroupId: groupId\n          })\n        }\n        selectedEntityId={selectedGroupId}\n        title=\"Category Groups\"\n        transactions={transactionsThisMonth}\n        showTransactionCount\n        onClickEntity={onSelectGroupId}\n      />\n    </Fragment>\n  );\n};\n\nCurrentMonth.propTypes = {\n  budget: PropTypes.object.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.object.isRequired\n};\n\nexport default CurrentMonth;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport get from \"lodash/fp/get\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\nimport ListItem from \"./ListItem\";\nimport Amount from \"./Amount\";\nimport LabelWithMinorText from \"./LabelWithMinorText\";\n\nconst Transaction = ({ category, payee, memo, date, amount, isContinuing }) => (\n  <ListItem isContinuing={isContinuing}>\n    <div style={{ overflow: \"hidden\" }}>\n      <LabelWithMinorText\n        label={get(\"name\")(payee) || \"(no payee)\"}\n        minorText={(get(\"name\")(category) || \"\") + (memo ? ` (${memo})` : \"\")}\n      />\n      <MinorText>{moment(date).format(\"dddd, MMM D\")}</MinorText>\n    </div>\n    <SecondaryText>\n      <Amount amount={amount} />\n    </SecondaryText>\n  </ListItem>\n);\n\nTransaction.propTypes = {\n  amount: PropTypes.number.isRequired,\n  date: PropTypes.string.isRequired,\n  category: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  }),\n  isContinuing: PropTypes.bool,\n  memo: PropTypes.string,\n  payee: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })\n};\n\nexport default Transaction;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Transaction from \"./Transaction\";\nimport NoTransactions from \"./NoTransactions\";\n\nconst TransactionsSection = ({\n  transactions,\n  title,\n  categoriesById,\n  payeesById\n}) => (\n  <CollapsibleSection title={title}>\n    {transactions.length ? (\n      transactions.map(\n        ({\n          id,\n          category_id: categoryId,\n          payee_id: payeeId,\n          date,\n          memo,\n          amount\n        }) => (\n          <Transaction\n            key={id}\n            amount={amount}\n            category={categoriesById[categoryId]}\n            date={date}\n            memo={memo}\n            payee={payeesById[payeeId]}\n          />\n        )\n      )\n    ) : (\n      <NoTransactions />\n    )}\n  </CollapsibleSection>\n);\n\nTransactionsSection.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      category_id: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      payee_id: PropTypes.string\n    })\n  ).isRequired,\n  title: PropTypes.string\n};\n\nTransactionsSection.defaultProps = { title: \"Transactions\" };\n\nexport default TransactionsSection;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport { sumByProp } from \"../dataUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport TransactionsSection from \"./TransactionsSection\";\nimport { useSelectedEntityId } from \"../commonHooks\";\n\nconst CurrentMonthGroup = ({ budget, categoryGroupId, currentMonth }) => {\n  const [selectedCategoryId, onSelectCategoryId] = useSelectedEntityId();\n  const {\n    id: budgetId,\n    payeesById,\n    categories: allCategories,\n    categoriesById,\n    transactions: allTransactions\n  } = budget;\n\n  const selectedCategory =\n    selectedCategoryId && categoriesById[selectedCategoryId];\n  const categories = allCategories.filter(\n    category => category.category_group_id === categoryGroupId\n  );\n  const categoryIds = categories.map(category => category.id);\n  const transactionsInGroup = allTransactions.filter(transaction =>\n    categoryIds.includes(transaction.category_id)\n  );\n  const transactionsInGroupForMonth = transactionsInGroup.filter(\n    transaction => getTransactionMonth(transaction) === currentMonth\n  );\n  const highlightedTransactions =\n    selectedCategoryId &&\n    transactionsInGroupForMonth.filter(\n      transaction => transaction.category_id === selectedCategoryId\n    );\n\n  const spent = -sumByProp(\"activity\")(categories);\n  const available = sumByProp(\"balance\")(categories);\n\n  return (\n    <Fragment>\n      <DayByDaySection\n        budgetId={budgetId}\n        currentMonth={currentMonth}\n        highlightFunction={\n          selectedCategoryId &&\n          (transaction => transaction.category_id === selectedCategoryId)\n        }\n        title={\n          selectedCategory\n            ? `Day by Day: ${sanitizeName(selectedCategory.name)}`\n            : \"Day by Day\"\n        }\n        transactions={transactionsInGroup}\n        total={spent + available}\n      />\n      <GenericEntitiesSection\n        entityKey=\"category_id\"\n        entitiesById={categoriesById}\n        linkFunction={categoryId =>\n          makeLink(pages.currentMonthCategory.path, {\n            budgetId,\n            categoryGroupId,\n            categoryId\n          })\n        }\n        selectedEntityId={selectedCategoryId}\n        title=\"Categories\"\n        transactions={transactionsInGroupForMonth}\n        showTransactionCount\n        onClickEntity={onSelectCategoryId}\n      />\n      <TransactionsSection\n        categoriesById={categoriesById}\n        payeesById={payeesById}\n        transactions={highlightedTransactions || transactionsInGroupForMonth}\n        title={\n          selectedCategory\n            ? `Transactions: ${sanitizeName(selectedCategory.name)}`\n            : \"Transactions\"\n        }\n      />\n    </Fragment>\n  );\n};\n\nCurrentMonthGroup.propTypes = {\n  budget: PropTypes.shape({\n    categories: PropTypes.array.isRequired,\n    id: PropTypes.string.isRequired,\n    payeesById: PropTypes.object.isRequired,\n    transactions: PropTypes.array.isRequired\n  }).isRequired,\n  categoryGroupId: PropTypes.string.isRequired,\n  currentMonth: PropTypes.string.isRequired\n};\n\nexport default CurrentMonthGroup;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport TransactionsSection from \"./TransactionsSection\";\n\nconst CurrentMonthCategory = ({ budget, currentMonth, categoryId }) => {\n  const {\n    id: budgetId,\n    payeesById,\n    categoriesById,\n    transactions: allTransactions\n  } = budget;\n\n  const category = categoriesById[categoryId];\n  const transactionsInCategory = allTransactions.filter(\n    transaction => transaction.category_id === categoryId\n  );\n  const transactionsInCategoryForMonth = transactionsInCategory.filter(\n    transaction => getTransactionMonth(transaction) === currentMonth\n  );\n\n  const spent = -category.activity;\n  const available = category.balance;\n\n  return (\n    <Fragment>\n      <DayByDaySection\n        key={category ? category.name : \"day-by-day\"}\n        budgetId={budgetId}\n        currentMonth={currentMonth}\n        title=\"Day by Day\"\n        transactions={transactionsInCategory}\n        total={spent + available}\n      />\n      <TransactionsSection\n        categoriesById={categoriesById}\n        payeesById={payeesById}\n        transactions={transactionsInCategoryForMonth}\n      />\n    </Fragment>\n  );\n};\n\nCurrentMonthCategory.propTypes = {\n  budget: PropTypes.shape({\n    categories: PropTypes.array.isRequired,\n    id: PropTypes.string.isRequired,\n    payeesById: PropTypes.object.isRequired,\n    transactions: PropTypes.array.isRequired\n  }).isRequired,\n  categoryGroupId: PropTypes.string.isRequired,\n  categoryId: PropTypes.string.isRequired,\n  currentMonth: PropTypes.string.isRequired\n};\n\nexport default CurrentMonthCategory;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport findIndex from \"lodash/fp/findIndex\";\nimport { selectedPlotBandColor } from \"../styleVariables\";\nimport Chart from \"./Chart\";\n\nconst MonthlyChart = ({\n  average,\n  data,\n  height,\n  series,\n  selectedMonth,\n  stacked,\n  onSelectMonth\n}) => {\n  const yearLines = [];\n  const plotBands = [];\n  const categories = data.map(d => moment(d.month).format(\"MMM\"));\n  let highlights = null;\n\n  if (selectedMonth) {\n    highlights = { months: [selectedMonth], color: selectedPlotBandColor };\n  }\n\n  data.forEach(({ month }, index) => {\n    if (moment(month).format(\"MMM\") === \"Jan\") {\n      yearLines.push({\n        color: \"#ccc\",\n        width: 1,\n        value: index - 0.5,\n        zIndex: 3\n      });\n    }\n  });\n\n  if (highlights) {\n    highlights.months.forEach(month => {\n      const index = findIndex(d => d.month === month)(data);\n      plotBands.push({\n        color: highlights.color,\n        from: index - 0.5,\n        to: index + 0.5\n      });\n    });\n  }\n\n  return (\n    <Chart\n      key={data.length}\n      options={{\n        chart: {\n          animation: false,\n          height,\n          type: \"column\",\n          events: {\n            click: event => {\n              onSelectMonth &&\n                onSelectMonth(data[Math.round(event.xAxis[0].value)].month);\n            }\n          }\n        },\n        xAxis: {\n          categories,\n          plotBands,\n          plotLines: yearLines\n        },\n        yAxis: {\n          endOnTick: false,\n          startOnTick: false,\n          gridLineColor: \"transparent\",\n          labels: { enabled: false },\n          title: { text: null },\n          plotLines: average && [\n            {\n              color: \"#aaa\",\n              dashStyle: \"Dot\",\n              width: 1,\n              value: -average,\n              zIndex: 2\n            }\n          ]\n        },\n        plotOptions: {\n          series: { animation: false, stacking: stacked ? \"normal\" : null }\n        },\n        series: series.map(s => {\n          if (s.type === \"line\") {\n            return {\n              color: s.color,\n              data: data.map(s.valueFunction),\n              enableMouseTracking: false,\n              type: \"line\"\n            };\n          }\n\n          return {\n            borderWidth: 0,\n            color: s.color,\n            data: data.map(s.valueFunction),\n            enableMouseTracking: false,\n            states: { hover: { brightness: 0 } }\n          };\n        })\n      }}\n    />\n  );\n};\n\nMonthlyChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      month: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  series: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string.isRequired,\n      valueFunction: PropTypes.func.isRequired,\n      type: PropTypes.oneOf([\"line\"])\n    })\n  ).isRequired,\n  average: PropTypes.number,\n  height: PropTypes.number,\n  selectedMonth: PropTypes.string,\n  stacked: PropTypes.bool,\n  onSelectMonth: PropTypes.func\n};\n\nMonthlyChart.defaultProps = { height: 140, stacked: true };\n\nexport default MonthlyChart;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { primaryColor } from \"../styleVariables\";\n\nconst PADDING = 2;\nconst WIDTH = 32;\nconst HEIGHT = 18;\n\nconst Track = styled.div`\n  box-sizing: border-box;\n  padding: ${PADDING}px;\n  display: inline-block;\n  width: ${WIDTH}px;\n  height: ${HEIGHT}px;\n  border-radius: ${HEIGHT / 2}px;\n  background-color: ${props => (props.on ? primaryColor : \"#ddd\")};\n  transition: background-color 0.15s ease-in-out;\n`;\n\nconst Handle = styled.div`\n  box-sizing: border-box;\n  height: ${HEIGHT - 2 * PADDING}px;\n  width: ${HEIGHT - 2 * PADDING}px;\n  border-radius: 50%;\n  background-color: #fff;\n  transform: translate3d(${props => (props.on ? WIDTH - HEIGHT : 0)}px, 0, 0);\n  transition: transform 0.15s ease-in-out;\n`;\n\nconst Toggle = ({ on, onClick }) => (\n  <Track on={on} onClick={onClick}>\n    <Handle on={on} />\n  </Track>\n);\n\nToggle.propTypes = {\n  on: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Toggle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Toggle from \"./Toggle\";\n\nconst Container = styled.div`\n  user-select: none;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px 0;\n`;\n\nconst Label = styled.div``;\n\nconst ToggleWithLabel = ({ label, name, checked, onChange }) => (\n  <Container\n    onClick={() => {\n      onChange({ target: { name, checked: !checked } });\n    }}\n  >\n    <Label>{label}</Label>\n    <Toggle\n      on={checked}\n      onClick={() => {\n        onChange({ target: { name, checked: !checked } });\n      }}\n    />\n  </Container>\n);\n\nToggleWithLabel.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default ToggleWithLabel;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"./Modal\";\nimport ToggleWithLabel from \"./ToggleWithLabel\";\nimport { MinorText } from \"./typeComponents\";\n\nconst MonthByMonthSettingsModal = ({\n  excludeFirstMonth,\n  excludeLastMonth,\n  open,\n  onClose,\n  onSetExclusion\n}) => (\n  <Modal open={open} onClose={onClose} title=\"Chart Settings\" width={240}>\n    <ToggleWithLabel\n      checked={excludeFirstMonth}\n      label=\"Exclude first month\"\n      name=\"excludeFirstMonth\"\n      onChange={() => {\n        onSetExclusion({ month: \"first\", exclude: !excludeFirstMonth });\n      }}\n    />\n    <ToggleWithLabel\n      checked={excludeLastMonth}\n      label=\"Exclude last month\"\n      name=\"excludeLastMonth\"\n      onChange={() => {\n        onSetExclusion({ month: \"last\", exclude: !excludeLastMonth });\n      }}\n    />\n    <MinorText style={{ marginTop: 5 }}>\n      Excluding incomplete months may lead to more representative averages\n    </MinorText>\n  </Modal>\n);\n\nMonthByMonthSettingsModal.propTypes = {\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired\n};\n\nexport default MonthByMonthSettingsModal;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport { groupBy, sumByProp } from \"../dataUtils\";\nimport { lightPrimaryColor, lighterPrimaryColor } from \"../styleVariables\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport MonthlyChart from \"./MonthlyChart\";\nimport MonthByMonthSettingsModal from \"./MonthByMonthSettingsModal\";\n\nconst MonthByMonthSection = ({\n  excludeFirstMonth,\n  excludeLastMonth,\n  highlightFunction,\n  months,\n  selectedMonth,\n  title,\n  transactions,\n  onSelectMonth,\n  onSetExclusion\n}) => {\n  const [settingsModalOpen, setSettingsModalOpen] = useState(false);\n\n  let total = 0;\n  let selectedMonthTotal = 0;\n\n  const transactionsByMonth = groupBy(getTransactionMonth)(transactions);\n  const data = months.map(month => {\n    const grouped = groupBy(highlightFunction || (() => false))(\n      transactionsByMonth[month] || []\n    );\n    const amount = sumByProp(\"amount\")(grouped.false || []);\n    const highlighted = sumByProp(\"amount\")(grouped.true || []);\n    total += highlightFunction ? highlighted : amount;\n    if (month === selectedMonth) {\n      selectedMonthTotal = highlightFunction ? highlighted : amount;\n    }\n\n    return { month, amount: -amount, highlighted: -highlighted };\n  });\n\n  const chartNumbers = selectedMonth\n    ? [\n        { amount: total / months.length, label: \"average\" },\n        {\n          amount: selectedMonthTotal,\n          label: moment(selectedMonth).format(\"MMM YYYY\")\n        }\n      ]\n    : [\n        { amount: total / months.length, label: \"average\" },\n        {\n          amount: total,\n          label: \"total\"\n        }\n      ];\n  const series = [\n    {\n      color: highlightFunction ? lightPrimaryColor : lighterPrimaryColor,\n      valueFunction: d => d.amount\n    }\n  ];\n\n  if (highlightFunction) {\n    series.push({\n      color: lighterPrimaryColor,\n      valueFunction: d => d.highlighted\n    });\n  }\n\n  return (\n    <CollapsibleSection\n      title={title}\n      hasSettings\n      onClickSettings={() => {\n        setSettingsModalOpen(true);\n      }}\n    >\n      <ChartNumbers numbers={chartNumbers} />\n      <MonthlyChart\n        data={data}\n        average={total / months.length}\n        series={series}\n        selectedMonth={selectedMonth}\n        onSelectMonth={onSelectMonth}\n      />\n      <MonthByMonthSettingsModal\n        excludeFirstMonth={excludeFirstMonth}\n        excludeLastMonth={excludeLastMonth}\n        open={settingsModalOpen}\n        onClose={() => {\n          setSettingsModalOpen(false);\n        }}\n        onSetExclusion={onSetExclusion}\n      />\n    </CollapsibleSection>\n  );\n};\n\nMonthByMonthSection.propTypes = {\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  highlightFunction: PropTypes.func,\n  selectedMonth: PropTypes.string,\n  title: PropTypes.string\n};\n\nMonthByMonthSection.defaultProps = { title: \"Month by Month\" };\n\nexport default MonthByMonthSection;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport { useTrendsShowAverage } from \"../commonHooks\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nconst Groups = ({\n  budget,\n  excludeFirstMonth,\n  excludeLastMonth,\n  months,\n  transactions,\n  selectedMonth,\n  selectedGroupId,\n  onSelectGroup,\n  onSelectMonth,\n  onSetExclusion\n}) => {\n  const [showAverage, onToggleShowAverage] = useTrendsShowAverage(budget.id);\n\n  const { categoryGroupsById, categoriesById, id: budgetId } = budget;\n  const selectedGroup = selectedGroupId && categoryGroupsById[selectedGroupId];\n\n  const transactionsForMonth =\n    selectedMonth &&\n    transactions.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <Fragment>\n      <MonthByMonthSection\n        excludeFirstMonth={excludeFirstMonth}\n        excludeLastMonth={excludeLastMonth}\n        highlightFunction={\n          selectedGroupId &&\n          (transaction =>\n            categoriesById[transaction.category_id].category_group_id ===\n            selectedGroupId)\n        }\n        months={months}\n        selectedMonth={selectedMonth}\n        title={\n          selectedGroup\n            ? `Month by Month: ${sanitizeName(selectedGroup.name)}`\n            : \"Month by Month\"\n        }\n        transactions={transactions}\n        onSelectMonth={onSelectMonth}\n        onSetExclusion={onSetExclusion}\n      />\n      <GenericEntitiesSection\n        key={selectedMonth || \"all\"}\n        entityFunction={transaction =>\n          categoriesById[transaction.category_id].category_group_id\n        }\n        entityKey=\"category_group_id\"\n        entitiesById={categoryGroupsById}\n        linkFunction={categoryGroupId =>\n          makeLink(pages.group.path, { budgetId, categoryGroupId })\n        }\n        selectedEntityId={selectedGroupId}\n        title={\n          selectedMonth\n            ? `Category Groups: ${moment(selectedMonth).format(\"MMMM\")}`\n            : \"Category Groups\"\n        }\n        transactions={transactionsForMonth || transactions}\n        onClickEntity={onSelectGroup}\n        numMonths={months.length}\n        showAverageToggle={!selectedMonth}\n        showAverage={showAverage && !selectedMonth}\n        onToggleAverage={onToggleShowAverage}\n        limitShowing\n      />\n    </Fragment>\n  );\n};\n\nGroups.propTypes = {\n  budget: PropTypes.object.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectGroup: PropTypes.func.isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedGroupId: PropTypes.string,\n  selectedMonth: PropTypes.string\n};\n\nexport default Groups;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Transaction from \"./Transaction\";\nimport NoTransactions from \"./NoTransactions\";\nimport SeeAll from \"./SeeAll\";\n\nconst LIMIT = 3;\n\nclass TransactionsByMonthSection extends Component {\n  static propTypes = {\n    categoriesById: PropTypes.object.isRequired,\n    payeesById: PropTypes.object.isRequired,\n    selectedMonth: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    limitShowing: PropTypes.bool,\n    selectedCategoryId: PropTypes.string,\n    selectedPayeeId: PropTypes.string\n  };\n\n  static defaultProps = { limitShowing: true };\n\n  state = { allMounted: false, showAll: false };\n\n  handleToggleShowAll = () => {\n    const { allMounted, showAll } = this.state;\n\n    if (allMounted) {\n      this.setState({ showAll: !showAll });\n    } else {\n      this.setState({ allMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ showAll: true });\n      });\n    }\n  };\n\n  render() {\n    const {\n      categoriesById,\n      payeesById,\n      selectedCategoryId,\n      selectedPayeeId,\n      selectedMonth,\n      transactions,\n      limitShowing: limitShowingProp\n    } = this.props;\n    const { allMounted, showAll } = this.state;\n\n    const selectedCategory =\n      selectedCategoryId && categoriesById[selectedCategoryId];\n    const selectedPayee = selectedPayeeId && payeesById[selectedPayeeId];\n    const month = moment(selectedMonth).format(\"MMMM\");\n    const transactionsForMonth = compose([\n      limitShowingProp\n        ? sortBy(\"amount\")\n        : transactions => transactions.reverse(),\n      transactions =>\n        transactions.filter(\n          transaction =>\n            getTransactionMonth(transaction) === selectedMonth &&\n            (!selectedCategoryId ||\n              transaction.category_id === selectedCategoryId) &&\n            (!selectedPayeeId || transaction.payee_id === selectedPayeeId)\n        )\n    ])(transactions);\n    const limitShowing =\n      limitShowingProp && transactionsForMonth.length > LIMIT + 2;\n    const topTransactions = limitShowing\n      ? transactionsForMonth.slice(0, LIMIT)\n      : transactionsForMonth;\n    const otherTransactions = limitShowing\n      ? transactionsForMonth.slice(LIMIT)\n      : [];\n\n    return (\n      <CollapsibleSection\n        title={\n          selectedPayee\n            ? `Transactions: ${month}, ${selectedPayee.name}`\n            : selectedCategory\n              ? `Transactions: ${month}, ${selectedCategory.name}`\n              : `Transactions: ${month}`\n        }\n      >\n        {topTransactions.length ? (\n          topTransactions.map(\n            ({\n              id,\n              date,\n              amount,\n              memo,\n              payee_id: payeeId,\n              category_id: categoryId\n            }) => (\n              <Transaction\n                key={id}\n                amount={amount}\n                category={categoriesById[categoryId]}\n                date={date}\n                memo={memo}\n                payee={payeesById[payeeId]}\n              />\n            )\n          )\n        ) : (\n          <NoTransactions />\n        )}\n        {allMounted && (\n          <AnimateHeight isExpanded={showAll}>\n            <Fragment>\n              {otherTransactions.map(\n                ({\n                  id,\n                  date,\n                  amount,\n                  payee_id: payeeId,\n                  category_id: categoryId\n                }) => (\n                  <Transaction\n                    key={id}\n                    amount={amount}\n                    category={categoriesById[categoryId]}\n                    date={date}\n                    payee={payeesById[payeeId]}\n                    isContinuing\n                  />\n                )\n              )}\n            </Fragment>\n          </AnimateHeight>\n        )}\n        {!!otherTransactions.length && (\n          <SeeAll\n            count={transactionsForMonth.length}\n            pluralizedName=\"transactions\"\n            showAll={showAll}\n            onToggle={this.handleToggleShowAll}\n          />\n        )}\n      </CollapsibleSection>\n    );\n  }\n}\n\nexport default TransactionsByMonthSection;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport { useTrendsShowAverage } from \"../commonHooks\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nconst Group = ({\n  budget,\n  categoryGroupId,\n  excludeFirstMonth,\n  excludeLastMonth,\n  months,\n  selectedMonth,\n  selectedCategoryId,\n  transactions,\n  onSelectMonth,\n  onSelectCategory,\n  onSetExclusion\n}) => {\n  const [showAverage, onToggleShowAverage] = useTrendsShowAverage(budget.id);\n\n  const {\n    categories,\n    categoriesById,\n    categoryGroupsById,\n    payeesById,\n    id: budgetId\n  } = budget;\n  const categoryGroup = categoryGroupsById[categoryGroupId];\n  const selectedCategory =\n    selectedCategoryId && categoriesById[selectedCategoryId];\n  const categoriesInGroup = categories.filter(\n    category => category.category_group_id === categoryGroup.id\n  );\n  const categoryIds = categoriesInGroup.map(category => category.id);\n  const transactionsInGroup = transactions.filter(transaction =>\n    categoryIds.includes(transaction.category_id)\n  );\n  const transactionsInSelectedMonth =\n    selectedMonth &&\n    compose([\n      sortBy(\"amount\"),\n      transactions =>\n        transactions.filter(\n          transaction => getTransactionMonth(transaction) === selectedMonth\n        )\n    ])(transactionsInGroup);\n\n  return (\n    <Fragment>\n      <MonthByMonthSection\n        excludeFirstMonth={excludeFirstMonth}\n        excludeLastMonth={excludeLastMonth}\n        months={months}\n        highlightFunction={\n          selectedCategoryId &&\n          (transaction => transaction.category_id === selectedCategoryId)\n        }\n        selectedMonth={selectedMonth}\n        title={\n          selectedCategory\n            ? `Month by Month: ${sanitizeName(selectedCategory.name)}`\n            : \"Month by Month\"\n        }\n        transactions={transactionsInGroup}\n        onSelectMonth={onSelectMonth}\n        onSetExclusion={onSetExclusion}\n      />\n      <GenericEntitiesSection\n        key={`categories-${selectedMonth || \"all\"}`}\n        entityKey=\"category_id\"\n        entitiesById={categoriesById}\n        linkFunction={categoryId =>\n          makeLink(pages.category.path, {\n            budgetId,\n            categoryGroupId: categoryGroup.id,\n            categoryId\n          })\n        }\n        title={\n          selectedMonth\n            ? `Categories: ${moment(selectedMonth).format(\"MMMM\")}`\n            : \"Categories\"\n        }\n        transactions={transactionsInSelectedMonth || transactionsInGroup}\n        selectedEntityId={selectedCategoryId}\n        onClickEntity={onSelectCategory}\n        showAverageToggle={!selectedMonth}\n        showAverage={showAverage && !selectedMonth}\n        numMonths={months.length}\n        onToggleAverage={onToggleShowAverage}\n        limitShowing\n      />\n      {selectedMonth &&\n        transactionsInSelectedMonth.length > 0 && (\n          <TransactionsByMonthSection\n            key={`transactions-${selectedMonth || \"all\"}-${selectedCategoryId ||\n              \"all\"}`}\n            categoriesById={categoriesById}\n            payeesById={payeesById}\n            selectedMonth={selectedMonth}\n            selectedCategoryId={selectedCategoryId}\n            transactions={transactionsInSelectedMonth}\n          />\n        )}\n    </Fragment>\n  );\n};\n\nGroup.propTypes = {\n  budget: PropTypes.shape({\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        categoryId: PropTypes.string\n      })\n    ).isRequired,\n    payeesById: PropTypes.object.isRequired,\n    categoryGroupsById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  categoryGroupId: PropTypes.string.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectCategory: PropTypes.func.isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedCategoryId: PropTypes.string,\n  selectedMonth: PropTypes.string\n};\n\nexport default Group;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\n\nconst Category = ({\n  categoryId,\n  budget,\n  excludeFirstMonth,\n  excludeLastMonth,\n  months,\n  selectedMonth,\n  selectedPayeeId,\n  transactions,\n  onSelectMonth,\n  onSelectPayee,\n  onSetExclusion\n}) => {\n  const { categoriesById, payeesById, id: budgetId } = budget;\n  const category = categoriesById[categoryId];\n  const selectedPayee = selectedPayeeId && payeesById[selectedPayeeId];\n  const transactionsForCategory = transactions.filter(\n    transaction => transaction.category_id === categoryId\n  );\n  const transactionsForMonth =\n    selectedMonth &&\n    transactionsForCategory.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <Fragment>\n      <MonthByMonthSection\n        excludeFirstMonth={excludeFirstMonth}\n        excludeLastMonth={excludeLastMonth}\n        months={months}\n        onSetExclusion={onSetExclusion}\n        highlightFunction={\n          selectedPayeeId &&\n          (transaction => transaction.payee_id === selectedPayeeId)\n        }\n        selectedMonth={selectedMonth}\n        title={\n          selectedPayee\n            ? `Month by Month: ${sanitizeName(selectedPayee.name)}`\n            : \"Month by Month\"\n        }\n        transactions={transactionsForCategory}\n        onSelectMonth={onSelectMonth}\n      />\n      <GenericEntitiesSection\n        key={`payees-${selectedMonth || \"all\"}`}\n        emptyName=\"(no payee)\"\n        entitiesById={payeesById}\n        entityKey=\"payee_id\"\n        linkFunction={payeeId =>\n          makeLink(pages.categoryPayee.path, {\n            budgetId,\n            categoryGroupId: category.category_group_id,\n            categoryId: categoryId,\n            payeeId\n          })\n        }\n        title={\n          selectedMonth\n            ? `Payees: ${moment(selectedMonth).format(\"MMMM\")}`\n            : \"Payees\"\n        }\n        transactions={transactionsForMonth || transactionsForCategory}\n        selectedEntityId={selectedPayeeId}\n        onClickEntity={onSelectPayee}\n        limitShowing\n      />\n      {selectedMonth &&\n        transactionsForMonth.length > 0 && (\n          <TransactionsByMonthSection\n            key={`transactions-${selectedMonth || \"all\"}-${selectedPayeeId ||\n              \"all\"}`}\n            categoriesById={categoriesById}\n            payeesById={payeesById}\n            transactions={transactionsForMonth}\n            selectedMonth={selectedMonth}\n            selectedPayeeId={selectedPayeeId}\n          />\n        )}\n    </Fragment>\n  );\n};\n\nCategory.propTypes = {\n  budget: PropTypes.shape({\n    categoriesById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        payee_id: PropTypes.string\n      })\n    ).isRequired,\n    payeesById: PropTypes.object.isRequired\n  }).isRequired,\n  categoryId: PropTypes.string.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSelectPayee: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string,\n  selectedPayeeId: PropTypes.string\n};\n\nexport default Category;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\n\nconst CategoryPayee = ({\n  budget,\n  categoryId,\n  excludeFirstMonth,\n  excludeLastMonth,\n  months,\n  payeeId,\n  selectedMonth,\n  transactions,\n  onSelectMonth,\n  onSetExclusion\n}) => {\n  const { categoriesById, payeesById } = budget;\n  const transactionsForCategoryAndPayee = transactions.filter(\n    transaction =>\n      transaction.category_id === categoryId && transaction.payee_id === payeeId\n  );\n\n  return (\n    <Fragment>\n      <MonthByMonthSection\n        excludeFirstMonth={excludeFirstMonth}\n        excludeLastMonth={excludeLastMonth}\n        months={months}\n        selectedMonth={selectedMonth}\n        transactions={transactionsForCategoryAndPayee}\n        onSelectMonth={onSelectMonth}\n        onSetExclusion={onSetExclusion}\n      />\n      {selectedMonth && (\n        <TransactionsByMonthSection\n          categoriesById={categoriesById}\n          payeesById={payeesById}\n          selectedMonth={selectedMonth}\n          transactions={transactionsForCategoryAndPayee}\n          limitShowing={false}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nCategoryPayee.propTypes = {\n  budget: PropTypes.shape({\n    payeesById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    categoriesById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  categoryId: PropTypes.string.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  payeeId: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      payee_id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string\n};\n\nexport default CategoryPayee;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport moment from \"moment\";\nimport { useSelectedMonth, useSelectedEntityId } from \"../commonHooks\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nconst Income = ({\n  budget,\n  excludeFirstMonth,\n  excludeLastMonth,\n  months,\n  transactions,\n  onSetExclusion\n}) => {\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\n  const [selectedPayeeId, onSelectPayeeId] = useSelectedEntityId();\n\n  const { payeesById } = budget;\n  const transactionsInSelectedMonth =\n    selectedMonth &&\n    transactions.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <Fragment>\n      <MonthByMonthSection\n        excludeFirstMonth={excludeFirstMonth}\n        excludeLastMonth={excludeLastMonth}\n        highlightFunction={\n          selectedPayeeId &&\n          (transaction => transaction.payee_id === selectedPayeeId)\n        }\n        months={months}\n        selectedMonth={selectedMonth}\n        title={\n          selectedPayeeId\n            ? `Month by Month: ${sanitizeName(\n                payeesById[selectedPayeeId].name\n              )}`\n            : \"Month by Month\"\n        }\n        transactions={transactions}\n        onSelectMonth={onSelectMonth}\n        onSetExclusion={onSetExclusion}\n      />\n      <GenericEntitiesSection\n        key={`payee-${selectedMonth || \"all\"}`}\n        entityKey=\"payee_id\"\n        entitiesById={payeesById}\n        title={\n          selectedMonth\n            ? `Payees: ${moment(selectedMonth).format(\"MMMM\")}`\n            : \"Payees\"\n        }\n        transactions={transactionsInSelectedMonth || transactions}\n        selectedEntityId={selectedPayeeId}\n        onClickEntity={onSelectPayeeId}\n        showAverageToggle={false}\n        showAverage={!selectedMonth}\n        numMonths={months.length}\n        limitShowing\n      />\n    </Fragment>\n  );\n};\n\nIncome.propTypes = {\n  budget: PropTypes.shape({\n    payeesById: PropTypes.object.isRequired\n  }).isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  months: PropTypes.array.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      payee_id: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nexport default Income;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  primaryColor,\n  lightPrimaryColor,\n  negativeChartColor\n} from \"../styleVariables\";\nimport MonthlyChart from \"./MonthlyChart\";\n\nconst IncomeVsExpensesChart = ({ data, onSelectMonth, selectedMonth }) => (\n  <MonthlyChart\n    data={data}\n    height={160}\n    selectedMonth={selectedMonth}\n    series={[\n      { color: lightPrimaryColor, valueFunction: d => d.income },\n      { color: negativeChartColor, valueFunction: d => d.expenses },\n      {\n        type: \"line\",\n        color: primaryColor,\n        valueFunction: d => d.income + d.expenses\n      }\n    ]}\n    onSelectMonth={onSelectMonth}\n  />\n);\n\nIncomeVsExpensesChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      expenses: PropTypes.number.isRequired,\n      income: PropTypes.number.isRequired,\n      month: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string\n};\n\nexport default IncomeVsExpensesChart;\n","import React, { Component, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\nimport ListItem from \"./ListItem\";\nimport ToggleNode from \"./ToggleNode\";\n\nconst INDENTATION = 18;\n\nclass BreakdownNode extends Component {\n  static propTypes = {\n    amount: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n    isTopLevel: PropTypes.bool.isRequired,\n    name: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n    nodes: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ),\n    valueRenderer: PropTypes.func\n  };\n\n  state = { expanded: false, childrenMounted: false };\n\n  handleToggleExpand = () => {\n    const { expanded, childrenMounted } = this.state;\n\n    if (childrenMounted) {\n      this.setState({ expanded: !expanded });\n    } else {\n      this.setState({ childrenMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ expanded: true });\n      });\n    }\n  };\n\n  render() {\n    const { name, id, amount, nodes, isTopLevel, valueRenderer } = this.props;\n    const { expanded, childrenMounted } = this.state;\n    const hasChildNodes = !!nodes && nodes.length > 0;\n\n    return (\n      <Container hasChildNodes={hasChildNodes} isTopLevel={isTopLevel}>\n        {hasChildNodes ? (\n          <ToggleNode\n            id={id}\n            name={name}\n            amount={amount}\n            expanded={expanded}\n            onToggle={this.handleToggleExpand}\n            valueRenderer={valueRenderer}\n          />\n        ) : (\n          <LeafNode\n            id={id}\n            name={name}\n            amount={amount}\n            valueRenderer={valueRenderer}\n          />\n        )}\n\n        {hasChildNodes &&\n          childrenMounted && (\n            <AnimateHeight isExpanded={expanded}>\n              <Nodes nodes={nodes} valueRenderer={valueRenderer} />\n            </AnimateHeight>\n          )}\n      </Container>\n    );\n  }\n}\n\nclass Nodes extends PureComponent {\n  render() {\n    const { nodes, valueRenderer } = this.props;\n    return (\n      <div style={{ paddingLeft: INDENTATION }}>\n        {nodes.map(node => (\n          <BreakdownNode\n            {...node}\n            key={node.id}\n            isTopLevel={false}\n            valueRenderer={valueRenderer}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst NodeWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n  user-select: none;\n\n  ${ListItem}:first-child > & {\n    padding-top: 0;\n  }\n`;\n\nconst LeafNode = ({ name, id, amount, valueRenderer }) => (\n  <NodeWrapper>\n    <SecondaryText>{name}</SecondaryText>\n    {valueRenderer ? (\n      valueRenderer({ amount, id })\n    ) : (\n      <SecondaryText>\n        <Amount amount={amount} />\n      </SecondaryText>\n    )}\n  </NodeWrapper>\n);\n\nconst Container = ({ isTopLevel, hasChildNodes, children }) =>\n  isTopLevel ? (\n    <ListItem style={{ display: \"block\", padding: 0 }}>{children}</ListItem>\n  ) : (\n    children\n  );\n\nexport default BreakdownNode;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BreakdownNode from \"./BreakdownNode\";\n\nconst Breakdown = ({ nodes, valueRenderer }) =>\n  nodes.map(({ id, name, amount, nodes }) => (\n    <BreakdownNode\n      key={id}\n      id={id}\n      name={name}\n      amount={amount}\n      nodes={nodes}\n      valueRenderer={valueRenderer}\n      isTopLevel\n    />\n  ));\n\nBreakdown.propTypes = {\n  nodes: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n      name: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n      nodes: PropTypes.array\n    })\n  ).isRequired,\n  valueRenderer: PropTypes.func\n};\n\nBreakdown.defaultProps = { reverse: false };\n\nexport default Breakdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport concat from \"lodash/fp/concat\";\nimport mapRaw from \"lodash/fp/map\";\nimport omit from \"lodash/fp/omit\";\nimport pick from \"lodash/fp/pick\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { sumByProp, groupByProp } from \"../dataUtils\";\nimport { getPayeeNodes } from \"../budgetUtils\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\n\nconst map = mapRaw.convert({ cap: false });\n\nconst ExpensesBreakdown = ({\n  categoriesById,\n  categoryGroupsById,\n  transactions,\n  totalIncome,\n  payeesById,\n  divideBy\n}) => {\n  const categoryNodes = compose([\n    map((transactions, categoryId) => {\n      const payeeNodes = getPayeeNodes({ payeesById, transactions }, divideBy);\n      return {\n        ...pick([\"id\", \"name\", \"category_group_id\"])(\n          categoriesById[categoryId]\n        ),\n        nodes: sortBy(\"amount\")(payeeNodes),\n        amount: sumByProp(\"amount\")(payeeNodes)\n      };\n    }),\n    groupByProp(\"category_id\")\n  ])(transactions);\n\n  const groupNodes = compose([\n    map((nodes, categoryGroupId) => {\n      const categoryNodes = map(omit(\"category_group_id\"))(nodes);\n      return {\n        ...pick([\"id\", \"name\"])(categoryGroupsById[categoryGroupId]),\n        nodes: sortBy(\"amount\")(categoryNodes),\n        amount: sumByProp(\"amount\")(categoryNodes)\n      };\n    }),\n    groupByProp(\"category_group_id\")\n  ])(categoryNodes);\n\n  const rootPayeeNodes = getPayeeNodes(\n    {\n      payeesById,\n      transactions: transactions.filter(transaction => !transaction.category_id)\n    },\n    divideBy\n  );\n\n  const nodes = compose([\n    nodes =>\n      concat(nodes)([\n        {\n          id: \"net\",\n          amount: -totalIncome - sumByProp(\"amount\")(nodes),\n          name: \"Net Income\"\n        }\n      ]),\n    sortBy(\"amount\"),\n    concat(rootPayeeNodes)\n  ])(groupNodes);\n\n  return (\n    <CollapsibleSection title=\"Expenses Breakdown\">\n      <Breakdown\n        nodes={nodes}\n        valueRenderer={node => (\n          <AmountWithPercentage {...node} positiveIsRed total={-totalIncome} />\n        )}\n      />\n    </CollapsibleSection>\n  );\n};\n\nExpensesBreakdown.propTypes = {\n  categoriesById: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      category_group_id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  categoryGroupsById: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  divideBy: PropTypes.number.isRequired,\n  payeesById: PropTypes.objectOf(PropTypes.object).isRequired,\n  totalIncome: PropTypes.number.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      category_id: PropTypes.string\n    })\n  ).isRequired\n};\n\nExpensesBreakdown.defaultProps = { divideBy: 1 };\n\nexport default ExpensesBreakdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport { getPayeeNodes } from \"../budgetUtils\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\n\nconst IncomeBreakdown = ({ transactions, payeesById, divideBy }) => {\n  const nodes = getPayeeNodes({ payeesById, transactions }, divideBy);\n  const total = sumBy(\"amount\")(nodes);\n  return (\n    <CollapsibleSection title=\"Income Breakdown\">\n      <Breakdown\n        nodes={sortBy(\"amount\")(nodes).reverse()}\n        total={total}\n        valueRenderer={node => <AmountWithPercentage {...node} total={total} />}\n      />\n    </CollapsibleSection>\n  );\n};\n\nIncomeBreakdown.propTypes = {\n  divideBy: PropTypes.number.isRequired,\n  payeesById: PropTypes.objectOf(PropTypes.object).isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      categoryId: PropTypes.string\n    })\n  ).isRequired\n};\n\nIncomeBreakdown.defaultProps = { divideBy: 1 };\n\nexport default IncomeBreakdown;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { sumByProp } from \"../dataUtils\";\nimport ExpensesBreakdown from \"./ExpensesBreakdown\";\nimport IncomeBreakdown from \"./IncomeBreakdown\";\n\nconst Breakdowns = ({\n  categoriesById,\n  categoryGroupsById,\n  payeesById,\n  expenseTransactions,\n  incomeTransactions,\n  divideBy\n}) => (\n  <Fragment>\n    <ExpensesBreakdown\n      categoriesById={categoriesById}\n      categoryGroupsById={categoryGroupsById}\n      payeesById={payeesById}\n      transactions={expenseTransactions}\n      totalIncome={sumByProp(\"amount\")(incomeTransactions) / divideBy}\n      divideBy={divideBy}\n    />\n    <IncomeBreakdown\n      payeesById={payeesById}\n      transactions={incomeTransactions}\n      divideBy={divideBy}\n    />\n  </Fragment>\n);\n\nBreakdowns.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  categoryGroupsById: PropTypes.object.isRequired,\n  expenseTransactions: PropTypes.array.isRequired,\n  incomeTransactions: PropTypes.array.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  divideBy: PropTypes.number.isRequired\n};\n\nexport default Breakdowns;\n","import React, { useState, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport find from \"lodash/fp/find\";\nimport flatMap from \"lodash/fp/flatMap\";\nimport mapRaw from \"lodash/fp/map\";\nimport matchesProperty from \"lodash/fp/matchesProperty\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { sumByProp, groupBy, simpleMemoize } from \"../dataUtils\";\nimport { getTransactionMonth, isIncome } from \"../budgetUtils\";\nimport { SecondaryText } from \"./typeComponents\";\nimport IncomeVsExpensesChart from \"./IncomeVsExpensesChart\";\nimport Breakdowns from \"./Breakdowns\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport MonthByMonthSettingsModal from \"./MonthByMonthSettingsModal\";\nimport { useSelectedMonth } from \"../commonHooks\";\n\nconst map = mapRaw.convert({ cap: false });\n\nconst getSummaries = simpleMemoize((transactions, investmentAccounts, budget) =>\n  compose([\n    sortBy(\"month\"),\n    map((transactions, month) => {\n      const grouped = groupBy(isIncome(budget))(transactions);\n\n      return {\n        month,\n        expenseTransactions: grouped.false || [],\n        incomeTransactions: grouped.true || [],\n        income: sumByProp(\"amount\")(grouped.true || []),\n        expenses: sumByProp(\"amount\")(grouped.false || [])\n      };\n    }),\n    groupBy(getTransactionMonth)\n  ])(transactions)\n);\n\nconst IncomeVsExpenses = ({\n  budget,\n  excludeFirstMonth,\n  excludeLastMonth,\n  investmentAccounts,\n  transactions,\n  onSetExclusion\n}) => {\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\n  const [settingsModalOpen, setSettingsModalOpen] = useState(false);\n  const [showTotals, setShowTotals] = useState(false);\n  const { categoriesById, categoryGroupsById, payeesById } = budget;\n\n  const allSummaries = getSummaries(transactions, investmentAccounts, budget);\n  const summaries = selectedMonth\n    ? [find(matchesProperty(\"month\", selectedMonth))(allSummaries)]\n    : allSummaries;\n\n  const incomeTransactions = flatMap(summary => summary.incomeTransactions)(\n    summaries\n  );\n  const expenseTransactions = flatMap(summary => summary.expenseTransactions)(\n    summaries\n  );\n\n  const totalExpenses = sumByProp(\"amount\")(expenseTransactions);\n  const totalIncome = sumByProp(\"amount\")(incomeTransactions);\n  const denominator = showTotals ? 1 : summaries.length;\n\n  return (\n    <Fragment>\n      <CollapsibleSection\n        title=\"Monthly Trend\"\n        hasSettings\n        onClickSettings={() => {\n          setSettingsModalOpen(true);\n        }}\n        actions={\n          <SecondaryText\n            onClick={() => {\n              setShowTotals(!showTotals);\n            }}\n          >\n            {showTotals ? \"show average\" : \"show total\"}\n          </SecondaryText>\n        }\n      >\n        <ChartNumbers\n          numbers={[\n            {\n              label: \"net income\",\n              amount: -(totalExpenses + totalIncome) / denominator\n            },\n            {\n              label: \"expenses\",\n              amount: totalExpenses / denominator\n            },\n            {\n              label: \"income\",\n              amount: -totalIncome / denominator\n            }\n          ]}\n        />\n        <IncomeVsExpensesChart\n          data={allSummaries}\n          selectedMonth={selectedMonth}\n          onSelectMonth={onSelectMonth}\n        />\n        <MonthByMonthSettingsModal\n          excludeFirstMonth={excludeFirstMonth}\n          excludeLastMonth={excludeLastMonth}\n          open={settingsModalOpen}\n          onClose={() => {\n            setSettingsModalOpen(false);\n          }}\n          onSetExclusion={onSetExclusion}\n        />\n      </CollapsibleSection>\n      <Breakdowns\n        categoriesById={categoriesById}\n        categoryGroupsById={categoryGroupsById}\n        payeesById={payeesById}\n        expenseTransactions={expenseTransactions}\n        incomeTransactions={incomeTransactions}\n        divideBy={showTotals ? 1 : summaries.length}\n      />\n    </Fragment>\n  );\n};\n\nIncomeVsExpenses.propTypes = {\n  budget: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    months: PropTypes.arrayOf(\n      PropTypes.shape({\n        month: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  investmentAccounts: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onSetExclusion: PropTypes.func.isRequired\n};\n\nexport default IncomeVsExpenses;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport includes from \"lodash/fp/includes\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport { groupBy } from \"../dataUtils\";\nimport {\n  primaryColor,\n  lightPrimaryColor,\n  negativeChartColor\n} from \"../styleVariables\";\nimport MonthlyChart from \"./MonthlyChart\";\n\nconst CREDIT_ACCOUNTS = [\"mortgage\", \"creditCard\"];\nconst getStack = ({ type, id, mortgageAccounts }) => {\n  if (mortgageAccounts[id]) {\n    return \"liability\";\n  }\n\n  return includes(type)(CREDIT_ACCOUNTS) ? \"liability\" : \"asset\";\n};\n\nconst NetWorthChart = ({\n  data,\n  months,\n  mortgageAccounts,\n  selectedMonth,\n  onSelectMonth\n}) => {\n  const groupedData = groupBy(d =>\n    getStack({ type: d.type, id: d.id, mortgageAccounts })\n  )(data);\n  const monthlyData = months.map((month, index) => ({\n    month,\n    assets: sumBy(d => d.data[index])(groupedData.asset),\n    liabilities: sumBy(d => d.data[index])(groupedData.liability)\n  }));\n\n  return (\n    <MonthlyChart\n      selectedMonth={selectedMonth}\n      onSelectMonth={onSelectMonth}\n      data={monthlyData}\n      height={160}\n      series={[\n        {\n          color: negativeChartColor,\n          valueFunction: d => Math.max(-d.liabilities, 0)\n        },\n        {\n          color: lightPrimaryColor,\n          valueFunction: d => Math.max(d.assets, 0)\n        },\n        {\n          color: primaryColor,\n          type: \"line\",\n          valueFunction: d => d.assets + d.liabilities\n        }\n      ]}\n      stacked={false}\n    />\n  );\n};\n\nNetWorthChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(PropTypes.number).isRequired,\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string\n};\n\nexport default NetWorthChart;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport every from \"lodash/fp/every\";\nimport filter from \"lodash/fp/filter\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport mapRaw from \"lodash/fp/map\";\nimport propEq from \"lodash/fp/propEq\";\nimport reject from \"lodash/fp/reject\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport startCase from \"lodash/fp/startCase\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport values from \"lodash/fp/values\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\nimport Icon from \"./Icon\";\n\nconst map = mapRaw.convert({ cap: false });\n\nconst getNodes = ({ accounts, investmentAccounts, mortgageAccounts }) => {\n  const accountsByGroup = groupBy(account => {\n    if (investmentAccounts[account.id]) {\n      return \"Investments\";\n    }\n\n    if (mortgageAccounts[account.id]) {\n      return \"Mortgages\";\n    }\n\n    return startCase(account.type);\n  })(accounts);\n\n  return compose([\n    accounts => accounts.reverse(),\n    sortBy(\"amount\"),\n    map((accounts, name) => ({\n      name,\n      accounts,\n      amount: sumBy(\"balance\")(accounts),\n      id: name,\n      nodes: compose([\n        sortBy(\"balance\"),\n        map(({ id, name, balance }) => ({\n          amount: balance,\n          id,\n          name\n        }))\n      ])(accounts)\n    }))\n  ])(accountsByGroup);\n};\n\nconst NetWorthAccounts = ({\n  accounts,\n  hiddenAccounts,\n  onToggleAccounts,\n  investmentAccounts,\n  mortgageAccounts\n}) => {\n  const accountsById = keyBy(\"id\")(accounts);\n  const visibleNodes = getNodes({\n    accounts: reject(account => hiddenAccounts[account.id])(accounts),\n    investmentAccounts,\n    mortgageAccounts\n  });\n  const hiddenNodes = getNodes({\n    accounts: filter(account => hiddenAccounts[account.id])(accounts),\n    investmentAccounts,\n    mortgageAccounts\n  });\n\n  return (\n    <Fragment>\n      <CollapsibleSection title=\"Accounts\">\n        <AccountBreakdown\n          accountsById={accountsById}\n          hiddenAccounts={hiddenAccounts}\n          nodes={visibleNodes}\n          onToggleAccounts={onToggleAccounts}\n        />\n      </CollapsibleSection>\n\n      {values(hiddenNodes).length > 0 && (\n        <CollapsibleSection title=\"Hidden Accounts\">\n          <AccountBreakdown\n            accountsById={accountsById}\n            hiddenAccounts={hiddenAccounts}\n            nodes={hiddenNodes}\n            onToggleAccounts={onToggleAccounts}\n          />\n        </CollapsibleSection>\n      )}\n    </Fragment>\n  );\n};\n\nNetWorthAccounts.propTypes = {\n  accounts: PropTypes.arrayOf(\n    PropTypes.shape({\n      balance: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  hiddenAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onToggleAccounts: PropTypes.func.isRequired\n};\n\nconst AccountBreakdown = ({\n  accountsById,\n  hiddenAccounts,\n  nodes,\n  onToggleAccounts\n}) => (\n  <Breakdown\n    nodes={nodes}\n    valueRenderer={({ id, amount }) => {\n      const node = nodes.find(propEq(\"id\", id));\n      const accounts = node ? node.accounts : [accountsById[id]];\n\n      return (\n        <SecondaryText style={{ display: \"flex\", alignItems: \"center\" }}>\n          <Amount amount={amount} />\n          <div\n            style={{ width: 36, textAlign: \"center\" }}\n            onClick={evt => {\n              evt.stopPropagation();\n              onToggleAccounts({ ids: map(\"id\")(accounts) });\n            }}\n          >\n            {every(account => hiddenAccounts[account.id])(accounts) ? (\n              <Icon icon=\"eye-slash\" />\n            ) : (\n              <Icon icon=\"eye\" />\n            )}\n          </div>\n        </SecondaryText>\n      );\n    }}\n  />\n);\n\nexport default NetWorthAccounts;\n","import React, { PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport constant from \"lodash/fp/constant\";\nimport eq from \"lodash/fp/eq\";\nimport filter from \"lodash/fp/filter\";\nimport findIndex from \"lodash/fp/findIndex\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport identity from \"lodash/fp/identity\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport keys from \"lodash/fp/keys\";\nimport last from \"lodash/fp/last\";\nimport map from \"lodash/fp/map\";\nimport mapValues from \"lodash/fp/mapValues\";\nimport omitBy from \"lodash/fp/omitBy\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sum from \"lodash/fp/sum\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport values from \"lodash/fp/values\";\nimport { simpleMemoize } from \"../dataUtils\";\nimport { getSetting, setSetting } from \"../uiRepo\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport NetWorthChart from \"./NetWorthChart\";\nimport NetWorthAccounts from \"./NetWorthAccounts\";\n\nconst cumulative = arr =>\n  arr.reduce(\n    (acc, curr) => (acc.length === 0 ? [curr] : acc.concat(last(acc) + curr)),\n    []\n  );\n\nclass NetWorth extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      accounts: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          name: PropTypes.string.isRequired,\n          type: PropTypes.string.isRequired\n        })\n      ).isRequired,\n      accountsById: PropTypes.objectOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          name: PropTypes.string.isRequired,\n          type: PropTypes.string.isRequired\n        })\n      ).isRequired,\n      transactions: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          account_id: PropTypes.string.isRequired,\n          amount: PropTypes.number.isRequired,\n          date: PropTypes.string.isRequired\n        })\n      ).isRequired\n    }).isRequired,\n    investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired\n  };\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      hiddenAccounts: getSetting(\"netWorthHiddenAccounts\", props.budget.id),\n      selectedMonth: null\n    };\n  }\n\n  groupByMonthAndAccount = simpleMemoize(\n    compose([\n      mapValues(groupBy(\"account_id\")),\n      groupBy(({ date }) => date.slice(0, 7))\n    ])\n  );\n\n  getMonths = simpleMemoize(budget =>\n    compose([sortBy(identity), keys, this.groupByMonthAndAccount])(\n      budget.transactions\n    )\n  );\n\n  getSummaryByAccount = simpleMemoize(budget => {\n    const groupedTransactions = this.groupByMonthAndAccount(\n      budget.transactions\n    );\n    const months = this.getMonths(budget);\n    return map(({ id }) => ({\n      id,\n      data: compose([\n        cumulative,\n        map(month => sumBy(\"amount\")(groupedTransactions[month][id]))\n      ])(months)\n    }))(budget.accounts);\n  });\n\n  getSelectedBalances = simpleMemoize((selectedMonth, budget) => {\n    const months = this.getMonths(budget);\n    const selectedMonthIndex = findIndex(eq(selectedMonth))(months);\n    const accountSummaries = this.getSummaryByAccount(budget);\n\n    return compose([\n      mapValues(\n        ({ data }) =>\n          selectedMonthIndex > -1 ? data[selectedMonthIndex] : last(data)\n      ),\n      keyBy(\"id\")\n    ])(accountSummaries);\n  });\n\n  handleSelectMonth = month => {\n    this.setState(state => ({\n      ...state,\n      selectedMonth: state.selectedMonth === month ? null : month\n    }));\n  };\n\n  handleToggleAccounts = ({ ids }) => {\n    const { budget } = this.props;\n    const { hiddenAccounts } = this.state;\n    const shouldHide = ids.some(id => !hiddenAccounts[id]);\n    const newHiddenAccounts = ids.reduce(\n      (acc, id) => ({ ...acc, [id]: shouldHide }),\n      hiddenAccounts\n    );\n\n    this.setState({ hiddenAccounts: newHiddenAccounts });\n    setSetting(\"netWorthHiddenAccounts\", budget.id, newHiddenAccounts);\n  };\n\n  render() {\n    const { budget, investmentAccounts, mortgageAccounts } = this.props;\n    const { hiddenAccounts, selectedMonth } = this.state;\n\n    const months = this.getMonths(budget);\n    const accountSummaries = this.getSummaryByAccount(budget);\n    const selectedBalances = this.getSelectedBalances(selectedMonth, budget);\n    const filterHidden = omitBy((_, id) => hiddenAccounts[id]);\n    const selectedLiabilities = compose([\n      sum,\n      filter(b => b < 0),\n      values,\n      filterHidden\n    ])(selectedBalances);\n    const selectedAssets = compose([\n      sum,\n      filter(b => b > 0),\n      values,\n      filterHidden\n    ])(selectedBalances);\n\n    return (\n      <Fragment>\n        <CollapsibleSection title=\"Monthly Trend\">\n          <ChartNumbers\n            numbers={[\n              {\n                amount: -(selectedAssets + selectedLiabilities),\n                label: \"Net Worth\"\n              },\n              { amount: -selectedAssets, label: \"Assets\" },\n              { amount: selectedLiabilities, label: \"Liabilities\" }\n            ]}\n            alwaysRound\n          />\n          <NetWorthChart\n            data={map(({ id, data }) => ({\n              data: hiddenAccounts[id] ? data.map(constant(0)) : data,\n              type: budget.accountsById[id].type,\n              id\n            }))(accountSummaries)}\n            months={months}\n            mortgageAccounts={mortgageAccounts}\n            selectedMonth={selectedMonth}\n            onSelectMonth={this.handleSelectMonth}\n          />\n        </CollapsibleSection>\n        <NetWorthAccounts\n          accounts={map(account => ({\n            ...account,\n            balance: selectedBalances[account.id]\n          }))(budget.accounts)}\n          hiddenAccounts={hiddenAccounts}\n          investmentAccounts={investmentAccounts}\n          mortgageAccounts={mortgageAccounts}\n          onToggleAccounts={this.handleToggleAccounts}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default NetWorth;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/fp/keys\";\nimport get from \"lodash/fp/get\";\nimport EmptyText from \"./EmptyText\";\nimport { Link } from \"react-router-dom\";\nimport pages, { makeLink } from \"../pages\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport {\n  useMonthExclusions,\n  useSelectedEntityId,\n  useSelectedMonth\n} from \"../commonHooks\";\n\nconst isContribution = investmentAccounts => transaction =>\n  !!investmentAccounts[transaction.account_id] &&\n  !!transaction.transfer_account_id &&\n  !investmentAccounts[transaction.transfer_account_id];\n\nconst isCapitalGainOrLoss = (investmentAccounts, payeesById) => transaction =>\n  !!investmentAccounts[transaction.account_id] &&\n  !transaction.transfer_account_id &&\n  get([transaction.payee_id, \"name\"])(payeesById) !== \"Starting Balance\";\n\nconst isInvestmentTransaction = (\n  investmentAccounts,\n  payeesById\n) => transaction =>\n  isContribution(investmentAccounts)(transaction) ||\n  isCapitalGainOrLoss(investmentAccounts, payeesById)(transaction);\n\nconst Investments = ({ budget, investmentAccounts }) => {\n  const {\n    excludeFirstMonth,\n    excludeLastMonth,\n    months,\n    onSetExclusion\n  } = useMonthExclusions(budget);\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\n  const [selectedBreakdown, onSelectBreakdown] = useSelectedEntityId();\n\n  const { payeesById } = budget;\n\n  if (keys(investmentAccounts).length === 0) {\n    return (\n      <EmptyText>\n        You don't have any accounts marked as investment accounts.{\" \"}\n        <Link to={makeLink(pages.settings.path, { budgetId: budget.id })}>\n          Go to Settings\n        </Link>\n      </EmptyText>\n    );\n  }\n\n  const investmentTransactions = budget.transactions\n    .filter(isInvestmentTransaction(investmentAccounts, payeesById))\n    .map(transaction => ({ ...transaction, amount: -transaction.amount }));\n  const transactionsInMonth =\n    selectedMonth &&\n    investmentTransactions.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <Fragment>\n      <MonthByMonthSection\n        excludeFirstMonth={excludeFirstMonth}\n        excludeLastMonth={excludeLastMonth}\n        highlightFunction={\n          selectedBreakdown &&\n          (transaction =>\n            selectedBreakdown === \"contribution\"\n              ? isContribution(investmentAccounts)(transaction)\n              : isCapitalGainOrLoss(investmentAccounts, payeesById)(\n                  transaction\n                ))\n        }\n        months={months}\n        selectedMonth={selectedMonth}\n        transactions={investmentTransactions}\n        onSelectMonth={onSelectMonth}\n        onSetExclusion={onSetExclusion}\n      />\n      <GenericEntitiesSection\n        transactions={transactionsInMonth || investmentTransactions}\n        entitiesById={{\n          contribution: { name: \"Contributions\" },\n          capitalGain: { name: \"Capital Gains/Losses\" }\n        }}\n        title=\"Growth Breakdown\"\n        onClickEntity={onSelectBreakdown}\n        selectedEntityId={selectedBreakdown}\n        entityFunction={transaction =>\n          isContribution(investmentAccounts)(transaction)\n            ? \"contribution\"\n            : \"capitalGain\"\n        }\n        positiveIsRed\n      />\n    </Fragment>\n  );\n};\n\nInvestments.propTypes = {\n  budget: PropTypes.object.isRequired,\n  investmentAccounts: PropTypes.object.isRequired\n};\n\nexport default Investments;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  primaryColor,\n  negativeColor,\n  selectedPlotBandColor\n} from \"../styleVariables\";\nimport Chart from \"./Chart\";\n\nconst ProjectionsChart = ({\n  investmentsProjection,\n  mortgageProjection,\n  amountNeededToRetire,\n  yearsUntilRetirement\n}) => (\n  <Chart\n    options={{\n      chart: {\n        type: \"column\"\n      },\n      xAxis: {\n        type: \"category\",\n        plotBands: [\n          {\n            color: selectedPlotBandColor,\n            from: Math.floor(yearsUntilRetirement) - 0.5,\n            to: Math.floor(yearsUntilRetirement) + 0.5\n          }\n        ]\n      },\n      yAxis: {\n        title: { text: null },\n        endOnTick: false,\n        plotLines: [\n          {\n            value: amountNeededToRetire,\n            color: \"#ccc\",\n            width: 1\n          }\n        ]\n      },\n      legend: {\n        enabled: false\n      },\n      series: [\n        { data: investmentsProjection, color: primaryColor, borderWidth: 0 },\n        { data: mortgageProjection, color: negativeColor, borderWidth: 0 }\n      ]\n    }}\n  />\n);\n\nProjectionsChart.propTypes = {\n  amountNeededToRetire: PropTypes.number.isRequired,\n  investmentsProjection: PropTypes.arrayOf(PropTypes.number).isRequired,\n  mortgageProjection: PropTypes.arrayOf(PropTypes.number).isRequired,\n  yearsUntilRetirement: PropTypes.number.isRequired\n};\n\nexport default ProjectionsChart;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst isDescendant = (parent, child) => {\n  let node = child.parentNode;\n  while (node !== null) {\n    if (node === parent) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n  return false;\n};\n\nclass ClickOff extends Component {\n  static propTypes = {\n    children: PropTypes.func.isRequired,\n    onClickOff: PropTypes.func\n  };\n\n  parent = null;\n\n  componentDidMount() {\n    document.body.addEventListener(\"click\", this.handleBodyClick);\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener(\"click\", this.handleBodyClick);\n  }\n\n  handleBodyClick = evt => {\n    if (this.props.onClickOff && !isDescendant(this.parent, evt.target)) {\n      this.props.onClickOff();\n    }\n  };\n\n  render() {\n    return this.props.children({\n      ref: el => {\n        this.parent = el;\n      }\n    });\n  }\n}\n\nexport default ClickOff;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport ClickOff from \"./ClickOff\";\nimport Button from \"./Button\";\n\nconst bodyEl = document.getElementsByTagName(\"body\")[0];\n\nconst Container = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: #fff;\n`;\n\nconst ProjectionsSlider = ({\n  name,\n  formatter,\n  label,\n  value,\n  onBlur,\n  onChange,\n  onReset,\n  rangeOptions\n}) =>\n  createPortal(\n    <ClickOff onClickOff={name && onBlur}>\n      {({ ref }) => (\n        <Container ref={ref}>\n          <AnimateHeight isExpanded={!!name}>\n            <div style={{ borderTop: \"1px solid #bbb\", padding: \"15px 20px\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  marginBottom: 15\n                }}\n              >\n                {label}: {formatter(value || 0)}\n                <Button\n                  onClick={() => {\n                    onReset(name);\n                  }}\n                >\n                  reset\n                </Button>\n              </div>\n              <Range\n                {...rangeOptions}\n                name={name}\n                value={value || 0}\n                onChange={onChange}\n              />\n            </div>\n          </AnimateHeight>\n        </Container>\n      )}\n    </ClickOff>,\n    bodyEl\n  );\n\nProjectionsSlider.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n  formatter: PropTypes.func,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.number\n};\n\nProjectionsSlider.defaultProps = {\n  formatter: val => val\n};\n\nconst Range = ({ name, onReset, ...other }) => (\n  <input\n    {...other}\n    name={name}\n    type=\"range\"\n    style={{ display: \"block\", width: \"100%\" }}\n  />\n);\n\nexport default ProjectionsSlider;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport chunk from \"lodash/fp/chunk\";\nimport compose from \"lodash/fp/compose\";\nimport get from \"lodash/fp/get\";\nimport head from \"lodash/fp/head\";\nimport map from \"lodash/fp/map\";\nimport pick from \"lodash/fp/pick\";\nimport range from \"lodash/fp/range\";\nimport { simpleMemoize, keyByProp } from \"../dataUtils\";\nimport { selectedPlotBandColor } from \"../styleVariables\";\nimport {\n  getMortgageRate,\n  getReturnOnInvestments,\n  getAverageContribution,\n  getCurrentInvestments,\n  getAverageExpensesWithoutMortgage,\n  getProjection,\n  getProjectionWithRetirement\n} from \"../projectionUtils\";\nimport Icon from \"./Icon\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ProjectionsChart from \"./ProjectionsChart\";\nimport ProjectionsSlider from \"./ProjectionsSlider\";\nimport ChartNumbers from \"./ChartNumbers\";\n\nconst YEARS_TO_PROJECT = 50;\n\nconst adjustableEntries = [\n  {\n    label: \"Average monthly contribution\",\n    name: \"averageContribution\",\n    formatter: val => `$${Math.round(val)}`\n  },\n  {\n    label: \"Average return on investments\",\n    name: \"returnOnInvestments\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  },\n  {\n    label: \"Average expenses without mortgage\",\n    name: \"averageExpenses\",\n    formatter: val => `$${Math.round(val)}`\n  },\n  {\n    label: \"Return on investment after retirement\",\n    name: \"retirementReturns\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  },\n  {\n    label: \"Average tax rate after retirement\",\n    name: \"retirementTaxRate\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  }\n];\n\nconst adjustableEntriesByName = keyByProp(\"name\")(adjustableEntries);\n\nconst getInitialState = simpleMemoize(\n  (budget, investmentAccounts, mortgageAccounts) => {\n    const {\n      paymentsLeft: remainingMortgagePayments,\n      mortgagePayment,\n      principalProjection: mortgageProjection\n    } = getMortgageRate(budget, mortgageAccounts) || {};\n    const returnOnInvestments = getReturnOnInvestments(\n      budget,\n      investmentAccounts\n    );\n    const averageContribution = getAverageContribution(\n      budget,\n      investmentAccounts\n    );\n    const currentInvestments = getCurrentInvestments(\n      budget,\n      investmentAccounts\n    );\n    const averageExpenses = getAverageExpensesWithoutMortgage(\n      budget,\n      investmentAccounts,\n      mortgageAccounts\n    );\n\n    return {\n      mortgagePayment,\n      remainingMortgagePayments,\n      mortgageProjection,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      averageExpenses,\n      retirementReturns: 0.04,\n      retirementTaxRate: 0.15,\n      maxAverageExpenses: Math.ceil((averageExpenses * 2) / 1000) * 1000,\n      maxAverageContribution: Math.ceil((averageContribution * 2) / 1000) * 1000\n    };\n  }\n);\n\nclass Projections extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      transactions: PropTypes.array.isRequired\n    }).isRequired,\n    investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired\n  };\n\n  constructor(props) {\n    super();\n    this.state = {\n      ...getInitialState(\n        props.budget,\n        props.investmentAccounts,\n        props.mortgageAccounts\n      ),\n      adjustingName: null\n    };\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: parseFloat(e.target.value) });\n  };\n\n  handleSelectAdjusting = name => {\n    this.setState(state => ({\n      adjustingName: state.adjustingName === name ? null : name\n    }));\n  };\n\n  handleClearSelection = () => {\n    this.setState({ adjustingName: null });\n  };\n\n  handleResetCalculation = calculation => {\n    const { budget, investmentAccounts, mortgageAccounts } = this.props;\n    this.setState(\n      pick(calculation)(\n        getInitialState(budget, investmentAccounts, mortgageAccounts)\n      )\n    );\n  };\n\n  render() {\n    const {\n      mortgagePayment,\n      remainingMortgagePayments,\n      mortgageProjection,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      averageExpenses,\n      retirementReturns,\n      retirementTaxRate,\n      maxAverageExpenses,\n      maxAverageContribution,\n      adjustingName\n    } = this.state;\n\n    const projection = getProjection({\n      numMonths: YEARS_TO_PROJECT * 12,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments\n    });\n    const monthlyRetirementReturn = (1 + retirementReturns) ** (1 / 12) - 1;\n    const amountNeededToRetire =\n      averageExpenses / (monthlyRetirementReturn * (1 - retirementTaxRate));\n    let m = 0;\n\n    while (m < projection.length) {\n      if (m < remainingMortgagePayments) {\n        const remainingMortgage = range(\n          0,\n          remainingMortgagePayments - m\n        ).reduce(\n          (acc, curr) =>\n            acc +\n            mortgagePayment /\n              (1 + monthlyRetirementReturn * (1 - retirementTaxRate)) ** curr,\n          0\n        );\n        if (\n          (projection[m] - remainingMortgage) *\n            monthlyRetirementReturn *\n            (1 - retirementTaxRate) >\n          averageExpenses\n        ) {\n          break;\n        }\n      } else {\n        if (\n          projection[m] * monthlyRetirementReturn * (1 - retirementTaxRate) >\n          averageExpenses\n        ) {\n          break;\n        }\n      }\n      m += 1;\n    }\n\n    const projectionWithRetirement = getProjectionWithRetirement({\n      numMonths: YEARS_TO_PROJECT * 12,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      monthsBeforeRetirement: m,\n      monthlyExpenses: averageExpenses,\n      retirementReturns,\n      retirementTaxRate,\n      remainingMortgagePayments,\n      mortgagePayment\n    });\n    const hasMortgage = !!mortgagePayment;\n\n    const yearsUntilRetirement = m / 12;\n    const projectionByYear = compose([map(head), chunk(12)])(\n      projectionWithRetirement\n    );\n    const mortgageProjectionByYear = compose([map(head), chunk(12)])(\n      mortgageProjection\n    );\n\n    const nameToRangeOptions = {\n      averageContribution: { min: 0, max: maxAverageContribution, step: 50 },\n      returnOnInvestments: { min: 0, max: 0.2, step: 0.001 },\n      averageExpenses: { min: 0, max: maxAverageExpenses, step: 50 },\n      retirementReturns: { min: 0, max: 0.2, step: 0.001 },\n      retirementTaxRate: { min: 0, max: 0.5, step: 0.001 }\n    };\n\n    return (\n      <Fragment>\n        <CollapsibleSection title=\"Projection\">\n          <ChartNumbers\n            numbers={[\n              {\n                amount: -amountNeededToRetire,\n                label: \"needed for retirement\",\n                decimalsToRound: 0\n              },\n              {\n                amount: -yearsUntilRetirement,\n                label: \"years to retirement\",\n                isMoney: false,\n                decimalsToRound: 1\n              }\n            ]}\n          />\n          <ProjectionsChart\n            investmentsProjection={projectionByYear}\n            mortgageProjection={mortgageProjectionByYear}\n            amountNeededToRetire={amountNeededToRetire}\n            yearsUntilRetirement={yearsUntilRetirement}\n          />\n        </CollapsibleSection>\n        <CollapsibleSection title=\"Assumptions\">\n          {adjustableEntries.map(({ label, name, formatter }) => (\n            <AdjustableEntry\n              key={name}\n              label={label}\n              name={name}\n              value={this.state[name]}\n              formatter={formatter}\n              isAdjusting={adjustingName === name}\n              onSelect={this.handleSelectAdjusting}\n              onReset={this.handleResetCalculation}\n              onChange={this.handleChange}\n            />\n          ))}\n          {hasMortgage && (\n            <Fragment>\n              <Entry\n                label=\"Mortgage payment\"\n                value={mortgagePayment}\n                formatter={val => `$${val.toFixed(2)}`}\n              />\n              <Entry\n                label=\"Time remaining on mortgage\"\n                value={remainingMortgagePayments}\n                formatter={val => `${(val / 12).toFixed(1)} years`}\n              />\n            </Fragment>\n          )}\n        </CollapsibleSection>\n        <ProjectionsSlider\n          name={adjustingName}\n          label={get([adjustingName, \"label\"])(adjustableEntriesByName)}\n          onReset={this.handleResetCalculation}\n          onChange={this.handleChange}\n          onBlur={this.handleClearSelection}\n          formatter={get([adjustingName, \"formatter\"])(adjustableEntriesByName)}\n          value={this.state[adjustingName]}\n          rangeOptions={nameToRangeOptions[adjustingName]}\n        />\n      </Fragment>\n    );\n  }\n}\n\nconst AdjustableEntry = ({\n  label,\n  value,\n  formatter,\n  name,\n  onSelect,\n  isAdjusting\n}) => (\n  <Entry\n    label={label}\n    value={value}\n    formatter={formatter}\n    onClick={() => {\n      onSelect(name);\n    }}\n    highlightValue={isAdjusting}\n    isAdjustable\n  />\n);\n\nconst Entry = ({\n  label,\n  value,\n  onClick,\n  highlightValue,\n  isAdjustable,\n  formatter = a => a\n}) => (\n  <div\n    style={{\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      padding: \"2px 0\"\n    }}\n  >\n    {label}:\n    <div style={{ display: \"flex\", alignItems: \"center\" }} onClick={onClick}>\n      <strong\n        style={{\n          backgroundColor: highlightValue ? selectedPlotBandColor : null,\n          padding: isAdjustable && \"0 4px\",\n          borderRadius: 2\n        }}\n      >\n        {formatter(value)}\n      </strong>\n      {isAdjustable && <Icon icon=\"pencil\" faded style={{ marginLeft: 4 }} />}\n    </div>\n  </div>\n);\n\nexport default Projections;\n","import moment from \"moment\";\nimport add from \"lodash/fp/add\";\nimport compose from \"lodash/fp/compose\";\nimport concat from \"lodash/fp/concat\";\nimport filter from \"lodash/fp/filter\";\nimport find from \"lodash/fp/find\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport head from \"lodash/fp/head\";\nimport identity from \"lodash/fp/identity\";\nimport includes from \"lodash/fp/includes\";\nimport keys from \"lodash/fp/keys\";\nimport last from \"lodash/fp/last\";\nimport map from \"lodash/fp/map\";\nimport matches from \"lodash/fp/matches\";\nimport multiply from \"lodash/fp/multiply\";\nimport prop from \"lodash/fp/prop\";\nimport range from \"lodash/fp/range\";\nimport reduce from \"lodash/fp/reduce\";\nimport reject from \"lodash/fp/reject\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport takeRightWhile from \"lodash/fp/takeRightWhile\";\nimport uniq from \"lodash/fp/uniq\";\nimport { getTransactionMonth } from \"./budgetUtils\";\n\nexport const getMortgageRate = (\n  { accounts, transactions: allTransactions },\n  mortgageAccounts\n) => {\n  const mortgageAccount = find(account => mortgageAccounts[account.id])(\n    accounts\n  );\n\n  if (!mortgageAccount) {\n    return null;\n  }\n\n  const transactions = compose([\n    sortBy(\"date\"),\n    filter(matches({ account_id: mortgageAccount.id }))\n  ])(allTransactions);\n  const lastMonth = compose([t => t.date.slice(0, 7), last])(transactions);\n  const lastMonthTransactions = takeRightWhile(\n    t => t.date.slice(0, 7) === lastMonth\n  )(transactions);\n\n  const P = -compose([\n    sumBy(\"amount\"),\n    takeWhile(t => t.date.slice(0, 7) !== lastMonth)\n  ])(transactions);\n  const P1 = P - sumBy(\"amount\")(lastMonthTransactions);\n  const c = compose([prop(\"amount\"), find(prop(\"transfer_account_id\"))])(\n    lastMonthTransactions\n  );\n  const r = (P1 + c) / P - 1;\n  const N = -Math.log(1 - (r * P) / c) / Math.log(1 + r);\n\n  const rate = r * 12;\n  const paymentsLeft = N - 1;\n\n  const projection = map(n => (1 + r) ** n * P - (((1 + r) ** n - 1) / r) * c)(\n    range(1, N)\n  );\n\n  return {\n    rate,\n    mortgagePayment: c,\n    paymentsLeft,\n    principalProjection: projection\n  };\n};\n\nexport const getCurrentInvestments = (\n  { accounts, transactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  return compose([\n    sumBy(\"amount\"),\n    filter(({ account_id: accountId }) =>\n      includes(accountId)(investmentAccountIds)\n    )\n  ])(transactions);\n};\n\nexport const getReturnOnInvestments = (\n  { accounts, payees, transactions: allTransactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const transactionsByMonth = compose([\n    groupBy(tr => tr.date.slice(0, 7)),\n    reject(t => includes(t.transfer_account_id)(investmentAccountIds)), // remove transfers between investment accounts\n    filter(t => includes(t.account_id)(investmentAccountIds))\n  ])(allTransactions);\n\n  let startForMonth = 0;\n  const returnRates = [];\n\n  const months = compose([sortBy(identity), keys])(transactionsByMonth);\n  map(month => transactionsByMonth[month])(months).forEach(trs => {\n    const contributions = compose([\n      sumBy(\"amount\"),\n      filter(prop(\"transfer_account_id\"))\n    ])(trs);\n    const gains = reject(prop(\"transfer_account_id\"))(trs);\n    const returns = sumBy(\"amount\")(gains);\n\n    if (startForMonth && gains.length) {\n      returnRates.push(returns / (startForMonth + 0.5 * contributions));\n    }\n\n    startForMonth += returns + contributions;\n  });\n\n  const totalReturn = compose([reduce(multiply, 1), map(add(1))])(returnRates);\n  const numMonths = returnRates.length;\n\n  return totalReturn ** (12 / numMonths) - 1;\n};\n\nexport const getAverageContribution = (\n  { accounts, transactions: allTransactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const contributions = compose([\n    filter(\n      ({ transfer_account_id: transferAccountId }) =>\n        transferAccountId && !includes(transferAccountId)(investmentAccountIds)\n    ),\n    filter(({ account_id: accountId }) =>\n      includes(accountId)(investmentAccountIds)\n    )\n  ])(allTransactions);\n\n  const months = compose([\n    sortBy(identity),\n    uniq,\n    map(d => d.slice(0, 7)),\n    map(\"date\")\n  ])(contributions);\n\n  const totalContributions = sumBy(\"amount\")(contributions);\n  const numMonths =\n    moment(last(months)).diff(moment(head(months)), \"months\") + 1;\n\n  return totalContributions / numMonths;\n};\n\nexport const getAverageExpensesWithoutMortgage = (\n  { transactions, accounts, payees, categoriesById, categoryGroupsById },\n  investmentAccounts,\n  mortgageAccounts\n) => {\n  const startingBalanceId = compose([\n    prop(\"id\"),\n    find(matches({ name: \"Starting Balance\" }))\n  ])(payees);\n  const months = compose([sortBy(identity), uniq, map(getTransactionMonth)])(\n    transactions\n  );\n\n  const mortgageAccountIds = compose([\n    filter(id => mortgageAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const totalExpenses = compose([\n    sumBy(\"amount\"),\n    reject(\n      tr =>\n        tr.amount > 0 &&\n        !tr.transfer_account_id &&\n        (!tr.category_id ||\n          !categoryGroupsById[categoriesById[tr.category_id].category_group_id])\n    ),\n    reject(tr =>\n      includes(tr.transfer_account_id)(\n        concat(mortgageAccountIds, investmentAccountIds)\n      )\n    ),\n    reject(tr =>\n      includes(tr.account_id)(concat(mortgageAccountIds, investmentAccountIds))\n    ),\n    reject(tr =>\n      includes(getTransactionMonth(tr))([head(months), last(months)])\n    ),\n    reject(matches({ payee_id: startingBalanceId }))\n  ])(transactions);\n\n  return -totalExpenses / (months.length - 2);\n};\n\nexport const getProjection = ({\n  numMonths,\n  returnOnInvestments,\n  averageContribution,\n  currentInvestments\n}) => {\n  const monthlyRate = (1 + returnOnInvestments) ** (1 / 12) - 1;\n  let amount = currentInvestments;\n  let projection = [];\n\n  do {\n    projection.push(amount);\n    amount +=\n      averageContribution + (amount + 0.5 * averageContribution) * monthlyRate;\n  } while (projection.length < numMonths);\n\n  return projection;\n};\n\nexport const getProjectionWithRetirement = ({\n  numMonths,\n  returnOnInvestments,\n  averageContribution,\n  currentInvestments,\n  monthsBeforeRetirement,\n  monthlyExpenses,\n  retirementReturns,\n  retirementTaxRate,\n  remainingMortgagePayments,\n  mortgagePayment\n}) => {\n  const monthlyRate = (1 + returnOnInvestments) ** (1 / 12) - 1;\n  const monthlyRetirementReturn = (1 + retirementReturns) ** (1 / 12) - 1;\n  let amount = currentInvestments;\n  let projection = [];\n\n  do {\n    projection.push(amount);\n    if (projection.length < monthsBeforeRetirement) {\n      amount +=\n        averageContribution +\n        (amount + 0.5 * averageContribution) * monthlyRate;\n    } else {\n      amount +=\n        amount * monthlyRetirementReturn * (1 - retirementTaxRate) -\n        monthlyExpenses;\n      if (projection.length < remainingMortgagePayments) {\n        amount -= mortgagePayment;\n      }\n    }\n  } while (projection.length < numMonths);\n\n  return projection;\n};\n","import styled from \"styled-components\";\n\nconst Section = styled.div`\n  margin: ${props => (props.top ? \"0\" : \"3px\")};\n  padding: ${props =>\n    props.noPadding ? \"0\" : props.top ? \"15px 23px\" : \"15px 20px\"};\n  background-color: #fff;\n  border: 1px solid #e5e5e5;\n  border-width: ${props => (props.top ? \"0 0 1px\" : \"1px\")};\n  border-radius: 2px;\n`;\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport omit from \"lodash/fp/omit\";\nimport ToggleWithLabel from \"./ToggleWithLabel\";\n\nconst AccountsSelectionForm = ({ accounts, value, onChange }) =>\n  accounts.map(({ id, name }) => (\n    <ToggleWithLabel\n      key={id}\n      checked={!!value[id]}\n      name={id}\n      onChange={evt => {\n        const { name, checked } = evt.target;\n\n        onChange(\n          checked\n            ? {\n                ...value,\n                [name]: true\n              }\n            : omit(name)(value)\n        );\n      }}\n      label={name}\n    />\n  ));\n\nAccountsSelectionForm.propTypes = {\n  accounts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  value: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default AccountsSelectionForm;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"./Section\";\nimport { StrongText, MinorText } from \"./typeComponents\";\nimport AccountsSelectionForm from \"./AccountsSelectionForm\";\nimport Modal from \"./Modal\";\nimport EmptyText from \"./EmptyText\";\nimport Icon from \"./Icon\";\n\nconst SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Space = styled.div`\n  height: 20px;\n`;\n\nclass Settings extends Component {\n  static propTypes = {\n    budget: PropTypes.shape({\n      accounts: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          name: PropTypes.string.isRequired\n        })\n      ).isRequired\n    }).isRequired,\n    investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    onUpdateAccounts: PropTypes.func.isRequired\n  };\n\n  state = {\n    investmentModalOpen: false,\n    mortgageModalOpen: false\n  };\n\n  handleClickEdit = section => {\n    if (section === \"investment\") {\n      this.setState({ investmentModalOpen: true });\n    }\n    if (section === \"mortgage\") {\n      this.setState({ mortgageModalOpen: true });\n    }\n  };\n\n  handleCloseInvestmentModal = () => {\n    this.setState({ investmentModalOpen: false });\n  };\n\n  handleCloseMortgageModal = () => {\n    this.setState({ mortgageModalOpen: false });\n  };\n\n  handleChangeInvestment = accountsObject => {\n    this.props.onUpdateAccounts({ type: \"investment\", value: accountsObject });\n  };\n\n  handleChangeMortgage = accountsObject => {\n    this.props.onUpdateAccounts({ type: \"mortgage\", value: accountsObject });\n  };\n\n  render() {\n    const { budget, investmentAccounts, mortgageAccounts } = this.props;\n    const { investmentModalOpen, mortgageModalOpen } = this.state;\n\n    const potentialInvestmentAccounts = budget.accounts.filter(\n      account => account.type === \"otherAsset\" && !account.on_budget\n    );\n    const potentialMortageAccounts = budget.accounts.filter(\n      account => account.type === \"otherLiability\" && !account.on_budget\n    );\n    const investmentAccountsList = budget.accounts.filter(\n      ({ id }) => investmentAccounts[id]\n    );\n    const mortgageAccountList = budget.accounts.filter(\n      ({ id }) => mortgageAccounts[id]\n    );\n\n    return (\n      <Fragment>\n        <Section>\n          <SectionHeader>\n            <StrongText>Investment Accounts</StrongText>\n            <span\n              onClick={() => {\n                this.handleClickEdit(\"investment\");\n              }}\n            >\n              <Icon icon=\"pencil\" />\n            </span>\n          </SectionHeader>\n          {investmentAccountsList.length ? (\n            investmentAccountsList.map(({ id, name }) => (\n              <div key={id}>{name}</div>\n            ))\n          ) : (\n            <EmptyText>No accounts marked as investment</EmptyText>\n          )}\n          <MinorText style={{ marginTop: 10 }}>\n            Transfers to investment accounts are not counted as spending since\n            it's assumed it's for retirement or some other savings goal.\n          </MinorText>\n          <Modal\n            open={investmentModalOpen}\n            onClose={this.handleCloseInvestmentModal}\n            title=\"Investment Accounts\"\n          >\n            <AccountsSelectionForm\n              accounts={potentialInvestmentAccounts}\n              value={investmentAccounts}\n              onChange={this.handleChangeInvestment}\n            />\n          </Modal>\n          <Space />\n          <SectionHeader>\n            <StrongText>Mortgage Accounts</StrongText>\n            <span\n              onClick={() => {\n                this.handleClickEdit(\"mortgage\");\n              }}\n            >\n              <Icon icon=\"pencil\" />\n            </span>\n          </SectionHeader>\n          {mortgageAccountList.length ? (\n            mortgageAccountList.map(({ id, name }) => (\n              <div key={id}>{name}</div>\n            ))\n          ) : (\n            <EmptyText>No accounts marked as mortgage</EmptyText>\n          )}\n          <MinorText style={{ marginTop: 10 }}>\n            Mortgage accounts are used in the retirement calculator since it's a\n            significant expense you won't have in your retirement presumably.\n          </MinorText>\n          <Modal\n            open={mortgageModalOpen}\n            onClose={this.handleCloseMortgageModal}\n            title=\"Mortgage Account\"\n          >\n            <AccountsSelectionForm\n              accounts={potentialMortageAccounts}\n              value={mortgageAccounts}\n              onChange={this.handleChangeMortgage}\n            />\n          </Modal>\n        </Section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Settings;\n","import CurrentMonth from \"./components/CurrentMonth\";\nimport CurrentMonthGroup from \"./components/CurrentMonthGroup\";\nimport CurrentMonthCategory from \"./components/CurrentMonthCategory\";\nimport Groups from \"./components/Groups\";\nimport Group from \"./components/Group\";\nimport Category from \"./components/Category\";\nimport CategoryPayee from \"./components/CategoryPayee\";\nimport Income from \"./components/Income\";\nimport IncomeVsExpenses from \"./components/IncomeVsExpenses\";\nimport NetWorth from \"./components/NetWorth\";\nimport Investments from \"./components/Investments\";\nimport Projections from \"./components/Projections\";\nimport Settings from \"./components/Settings\";\n\nexport const makeLink = (path, params) =>\n  path.replace(/:([a-zA-Z]*)/g, (_, part) => params[part]);\n\nconst pages = {\n  currentMonth: {\n    path: \"/budgets/:budgetId/current\",\n    title: \"Current Month Spending\",\n    Component: CurrentMonth,\n    props: [\"budget\", \"currentMonth\", \"investmentAccounts\"]\n  },\n  currentMonthGroup: {\n    path: \"/budgets/:budgetId/current/:categoryGroupId\",\n    title: (params, budget) =>\n      budget.categoryGroupsById[params.categoryGroupId].name,\n    Component: CurrentMonthGroup,\n    props: [\"budget\", \"currentMonth\"],\n    paramProps: [\"categoryGroupId\"],\n    breadcrumbs: [\"currentMonth\"]\n  },\n  currentMonthCategory: {\n    path: \"/budgets/:budgetId/current/:categoryGroupId/:categoryId\",\n    title: (params, budget) => budget.categoriesById[params.categoryId].name,\n    Component: CurrentMonthCategory,\n    props: [\"budget\", \"currentMonth\"],\n    paramProps: [\"categoryId\", \"categoryGroupId\"],\n    breadcrumbs: [\"currentMonth\", \"currentMonthGroup\"]\n  },\n  groups: {\n    path: \"/budgets/:budgetId/groups\",\n    title: \"Spending Trends\",\n    Component: Groups,\n    props: [\"budget\"]\n  },\n  group: {\n    path: \"/budgets/:budgetId/groups/:categoryGroupId\",\n    title: (params, budget) =>\n      budget.categoryGroupsById[params.categoryGroupId].name,\n    Component: Group,\n    props: [\"budget\"],\n    paramProps: [\"categoryGroupId\"],\n    breadcrumbs: [\"groups\"]\n  },\n  category: {\n    path: \"/budgets/:budgetId/groups/:categoryGroupId/categories/:categoryId\",\n    title: (params, budget) => budget.categoriesById[params.categoryId].name,\n    Component: Category,\n    props: [\"budget\"],\n    paramProps: [\"categoryId\"],\n    breadcrumbs: [\"groups\", \"group\"]\n  },\n  categoryPayee: {\n    path:\n      \"/budgets/:budgetId/groups/:categoryGroupId/categories/:categoryId/payees/:payeeId\",\n    title: (params, budget) => budget.payeesById[params.payeeId].name,\n    Component: CategoryPayee,\n    props: [\"budget\"],\n    paramProps: [\"categoryId\", \"payeeId\"],\n    breadcrumbs: [\"groups\", \"group\", \"category\"]\n  },\n  income: {\n    path: \"/budgets/:budgetId/income\",\n    title: \"Income Trends\",\n    Component: Income,\n    props: [\"budget\"]\n  },\n  incomeVsExpenses: {\n    path: \"/budgets/:budgetId/income-vs-expenses\",\n    title: \"Income vs Expenses\",\n    Component: IncomeVsExpenses,\n    props: [\"budget\", \"investmentAccounts\"]\n  },\n  netWorth: {\n    path: \"/budgets/:budgetId/net-worth\",\n    title: \"Net Worth\",\n    Component: NetWorth,\n    props: [\"budget\", \"investmentAccounts\", \"mortgageAccounts\"]\n  },\n  investments: {\n    path: \"/budgets/:budgetId/investments\",\n    title: \"Investments\",\n    Component: Investments,\n    props: [\"budget\", \"investmentAccounts\"]\n  },\n  projections: {\n    path: \"/budgets/:budgetId/projections\",\n    title: \"Retirement Calculator\",\n    Component: Projections,\n    props: [\"budget\", \"investmentAccounts\", \"mortgageAccounts\"]\n  },\n  settings: {\n    path: \"/budgets/:budgetId/settings\",\n    title: \"Budget Settings\",\n    Component: Settings,\n    props: [\n      \"budget\",\n      \"investmentAccounts\",\n      \"mortgageAccounts\",\n      \"onUpdateAccounts\"\n    ]\n  }\n};\n\nexport default pages;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { matchPath } from \"react-router\";\nimport styled from \"styled-components\";\nimport pages, { makeLink } from \"../pages\";\nimport Icon from \"./Icon\";\nimport { selectedPlotBandColor, iconWidth } from \"../styleVariables\";\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n  height: 60px;\n`;\n\nconst IconWrapper = styled.div`\n  width: ${iconWidth}px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledLink = styled(NavLink)`\n  color: inherit;\n  display: flex;\n  align-items: center;\n  height: 60px;\n  padding: 0 20px;\n  border-top: 1px solid #eee;\n  background-color: ${props => props.active && selectedPlotBandColor};\n  &:last-of-type {\n    border-bottom: 1px solid #eee;\n  }\n`;\n\nclass SidebarMenuContent extends PureComponent {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    hasMultipleBudgets: PropTypes.bool.isRequired,\n    location: PropTypes.string.isRequired,\n    onCloseSidebar: PropTypes.func.isRequired\n  };\n\n  render() {\n    const { budgetId, hasMultipleBudgets, location, onCloseSidebar } = this.props;\n\n    return (\n      <Fragment>\n        <PureHeader onCloseSidebar={onCloseSidebar} budgetId={budgetId} />\n        {[\n          \"currentMonth\",\n          \"groups\",\n          \"income\",\n          \"incomeVsExpenses\",\n          \"netWorth\",\n          \"investments\",\n          \"projections\"\n        ].map(page => {\n          const { path, title } = pages[page];\n\n          return (\n            <PureStyledLink\n              key={path}\n              to={makeLink(path, { budgetId })}\n              active={matchPath(location, { path })}\n              onClick={onCloseSidebar}\n            >\n              {title}\n            </PureStyledLink>\n          );\n        })}\n        {hasMultipleBudgets && (\n          <PureStyledLink to=\"/\">Switch Budgets</PureStyledLink>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nclass PureHeader extends PureComponent {\n  render() {\n    const { onCloseSidebar, budgetId } = this.props;\n    return (\n      <Header>\n        <IconWrapper onClick={onCloseSidebar}>\n          <Icon icon=\"times\" />\n        </IconWrapper>\n        <Link\n          to={makeLink(pages.settings.path, { budgetId })}\n          style={{ display: \"flex\", color: \"inherit\" }}\n          onClick={onCloseSidebar}\n        >\n          <IconWrapper>\n            <Icon icon=\"cog\" />\n          </IconWrapper>\n        </Link>\n      </Header>\n    );\n  }\n}\n\nclass PureStyledLink extends PureComponent {\n  render() {\n    return <StyledLink {...this.props} />;\n  }\n}\n\nexport default SidebarMenuContent;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Sidebar from \"react-sidebar\";\nimport { iconWidth } from \"../styleVariables\";\nimport Icon from \"./Icon\";\nimport SidebarMenuContent from \"./SidebarMenuContent\";\n\nclass SidebarMenu extends Component {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    children: PropTypes.func.isRequired,\n    hasMultipleBudgets: PropTypes.bool.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  state = { open: false };\n\n  handleSetOpen = open => {\n    this.setState({ open });\n  };\n\n  handleTriggerClick = () => {\n    this.setState({ open: true });\n  };\n\n  handleCloseSidebar = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { budgetId, children, hasMultipleBudgets, location } = this.props;\n    const { open } = this.state;\n\n    return (\n      <Sidebar\n        sidebar={\n          <SidebarMenuContent\n            budgetId={budgetId}\n            hasMultipleBudgets={hasMultipleBudgets}\n            location={location}\n            onCloseSidebar={this.handleCloseSidebar}\n          />\n        }\n        open={open}\n        onSetOpen={this.handleSetOpen}\n        styles={{\n          sidebar: {\n            backgroundColor: \"#fff\",\n            width: 280,\n            pointerEvents: !open && \"none\"\n          }\n        }}\n      >\n        {children({\n          sidebarTrigger: <Trigger onClick={this.handleTriggerClick} />\n        })}\n      </Sidebar>\n    );\n  }\n}\n\nconst Trigger = ({ onClick }) => (\n  <div\n    onClick={onClick}\n    style={{\n      alignSelf: \"stretch\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: iconWidth\n    }}\n  >\n    <Icon icon=\"bars\" />\n  </div>\n);\n\nexport default SidebarMenu;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Scroller extends Component {\n  static propTypes = {\n    action: PropTypes.string.isRequired,\n    children: PropTypes.func.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  toBeScrolled = null;\n\n  raf = null;\n\n  scrollPositions = {};\n\n  getSnapshotBeforeUpdate() {\n    return { scrollTop: this.toBeScrolled.scrollTop };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { action, location } = this.props;\n\n    if (location === prevProps.location) {\n      return;\n    }\n\n    if (action === \"POP\") {\n      this.scrollPositions[prevProps.location] = snapshot.scrollTop;\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = this.scrollPositions[location] || 0;\n      });\n    }\n\n    if (action === \"PUSH\") {\n      this.scrollPositions[prevProps.location] = snapshot.scrollTop;\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = 0;\n      });\n    }\n\n    if (action === \"REPLACE\") {\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = 0;\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.raf);\n  }\n\n  render() {\n    return this.props.children({\n      ref: el => {\n        this.toBeScrolled = el;\n      }\n    });\n  }\n}\n\nexport default Scroller;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport EnsureBudgetLoaded from \"./EnsureBudgetLoaded\";\nimport { PageTitle } from \"./typeComponents\";\nimport { PrimaryButton } from \"./Button\";\nimport SidebarMenu from \"./SidebarMenu\";\nimport Scroller from \"./Scroller\";\n\nconst Container = styled.div`\n  height: 100%;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Header = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  height: 60px;\n  padding-left: 0;\n  padding-right: 20px;\n  background-color: #fff;\n  border-bottom: 1px solid #ccc;\n  white-space: pre;\n  user-select: none;\n`;\n\nconst Body = styled.div`\n  flex-grow: 1;\n  overflow-y: auto;\n`;\n\nconst PageWrapper = ({\n  content,\n  authorized,\n  budgetId,\n  budgetLoaded,\n  hasMultipleBudgets,\n  historyAction,\n  location,\n  title,\n  actions,\n  breadcrumbs,\n  onAuthorize,\n  onRequestBudget\n}) => (\n  <EnsureBudgetLoaded\n    budgetId={budgetId}\n    budgetLoaded={budgetLoaded}\n    onRequestBudget={onRequestBudget}\n  >\n    <SidebarMenu\n      budgetId={budgetId}\n      location={location}\n      hasMultipleBudgets={hasMultipleBudgets}\n    >\n      {({ sidebarTrigger }) => (\n        <Container>\n          <Header>\n            {sidebarTrigger}\n            <div style={{ flexGrow: 1 }}>\n              {breadcrumbs}\n              <PageTitle style={{ lineHeight: 1 }}>{title}</PageTitle>\n            </div>\n            {actions}\n          </Header>\n          <Scroller action={historyAction} location={location}>\n            {({ ref }) => <Body ref={ref}>{content}</Body>}\n          </Scroller>\n          {!authorized && (\n            <div\n              style={{\n                padding: \"15px 20px\",\n                backgroundColor: \"#fff\",\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                flexShrink: 0,\n                borderTop: \"1px solid #ccc\"\n              }}\n            >\n              Your authorization expired.\n              <PrimaryButton onClick={onAuthorize}>Reauthorize</PrimaryButton>\n            </div>\n          )}\n        </Container>\n      )}\n    </SidebarMenu>\n  </EnsureBudgetLoaded>\n);\n\nPageWrapper.propTypes = {\n  actions: PropTypes.node.isRequired,\n  authorized: PropTypes.bool.isRequired,\n  breadcrumbs: PropTypes.node.isRequired,\n  budgetId: PropTypes.string.isRequired,\n  budgetLoaded: PropTypes.bool.isRequired,\n  content: PropTypes.node.isRequired,\n  hasMultipleBudgets: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  title: PropTypes.node.isRequired,\n  onAuthorize: PropTypes.func.isRequired,\n  onRequestBudget: PropTypes.func.isRequired\n};\n\nexport default PageWrapper;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route } from \"react-router-dom\";\nimport values from \"lodash/fp/values\";\nimport pages from \"../pages\";\n\nconst PageTitle = ({ budget }) =>\n  budget && (\n    <Switch>\n      {values(pages).map(({ path, title }) => (\n        <Route\n          key={path}\n          path={path}\n          exact\n          render={props =>\n            typeof title === \"function\"\n              ? title(props.match.params, budget)\n              : title\n          }\n        />\n      ))}\n      <Route render={() => \"Page Not Found\"} />\n    </Switch>\n  );\n\nPageTitle.propTypes = {\n  budget: PropTypes.object\n};\n\nexport default PageTitle;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport values from \"lodash/fp/values\";\nimport pages, { makeLink } from \"../pages\";\nimport { MinorText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\n\nconst routes = values(pages)\n  .filter(page => !!page.breadcrumbs)\n  .map(page => ({\n    path: page.path,\n    breadcrumbs: page.breadcrumbs.map(pageKey => ({\n      title: pages[pageKey].title,\n      path: pages[pageKey].path\n    }))\n  }));\n\nconst PageBreadcrumbs = ({ budget }) =>\n  budget && (\n    <Switch>\n      {routes.map(({ path, breadcrumbs }) => (\n        <Route\n          key={path}\n          path={path}\n          exact\n          render={props => (\n            <MinorText style={{ lineHeight: 1, whiteSpace: \"normal\" }}>\n              {breadcrumbs.map(({ title, path }, index) => (\n                <Fragment key={path}>\n                  <Link\n                    to={makeLink(path, props.match.params)}\n                    style={{\n                      paddingBottom: 8,\n                      display: \"inline-block\"\n                    }}\n                  >\n                    {typeof title === \"function\"\n                      ? title(props.match.params, budget)\n                      : title}\n                  </Link>\n                  {index !== breadcrumbs.length - 1 && (\n                    <Icon\n                      icon=\"chevron-right\"\n                      style={{ padding: \"0 5px\", fontSize: 8 }}\n                    />\n                  )}\n                </Fragment>\n              ))}\n            </MinorText>\n          )}\n        />\n      ))}\n    </Switch>\n  );\n\nPageBreadcrumbs.propTypes = {\n  budget: PropTypes.object\n};\n\nexport default PageBreadcrumbs;\n","import React from \"react\";\nimport pages, { makeLink } from \"../pages\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { SecondaryText } from \"./typeComponents\";\n\nconst PageActions = () => (\n  <Switch>\n    <Route\n      path={pages.currentMonth.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.groups.path, match.params)}>\n            Past Months\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.currentMonthGroup.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.group.path, match.params)}>Past Months</Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.currentMonthCategory.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.category.path, match.params)}>\n            Past Months\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.groups.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonth.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.group.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonthGroup.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.category.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonthCategory.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n  </Switch>\n);\n\nPageActions.propTypes = {};\n\nexport default PageActions;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst INITIAL_STATE = {\n  selectedMonth: null,\n  selectedGroupId: null,\n  selectedCategoryId: null,\n  selectedPayeeId: null\n};\n\nclass CategoriesState extends Component {\n  static propTypes = {\n    action: PropTypes.oneOf([\"PUSH\", \"POP\", \"REPLACE\"]).isRequired,\n    children: PropTypes.func.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  state = INITIAL_STATE;\n\n  cachedStates = {};\n\n  getSnapshotBeforeUpdate() {\n    return this.state;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { location, action } = this.props;\n\n    if (location === prevProps.location) {\n      return;\n    }\n\n    if (action === \"POP\") {\n      this.cachedStates[prevProps.location] = snapshot;\n      this.setState(this.cachedStates[location]);\n    }\n\n    if (action === \"PUSH\") {\n      this.cachedStates[prevProps.location] = snapshot;\n      this.setState(INITIAL_STATE);\n    }\n\n    if (action === \"REPLACE\") {\n      this.setState(INITIAL_STATE);\n    }\n  }\n\n  handleSelectMonth = month => {\n    this.setState(state => ({\n      ...state,\n      selectedMonth: state.selectedMonth === month ? null : month\n    }));\n  };\n\n  handleSelectGroup = groupId => {\n    this.setState(state => ({\n      ...state,\n      selectedGroupId: state.selectedGroupId === groupId ? null : groupId\n    }));\n  };\n\n  handleSelectCategory = categoryId => {\n    this.setState(state => ({\n      ...state,\n      selectedCategoryId:\n        state.selectedCategoryId === categoryId ? null : categoryId\n    }));\n  };\n\n  handleSelectPayee = payeeId => {\n    this.setState(state => ({\n      ...state,\n      selectedPayeeId: state.selectedPayeeId === payeeId ? null : payeeId\n    }));\n  };\n\n  render() {\n    return this.props.children({\n      ...this.state,\n      onSelectMonth: this.handleSelectMonth,\n      onSelectGroup: this.handleSelectGroup,\n      onSelectCategory: this.handleSelectCategory,\n      onSelectPayee: this.handleSelectPayee,\n      onSetExclusion: this.handleSetExclusion\n    });\n  }\n}\n\nexport default CategoriesState;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Switch, Route } from \"react-router-dom\";\nimport pick from \"lodash/fp/pick\";\nimport values from \"lodash/fp/values\";\nimport moment from \"moment\";\nimport { groupBy, notAny, simpleMemoize } from \"../dataUtils\";\nimport {\n  getFirstMonth,\n  getTransactionMonth,\n  isIncome,\n  isStartingBalanceOrReconciliation,\n  isTransfer\n} from \"../budgetUtils\";\nimport { useMonthExclusions } from \"../commonHooks\";\nimport pages, { makeLink } from \"../pages\";\nimport CategoriesState from \"./CategoriesState\";\n\nconst getFilteredTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) => {\n    const firstMonth = getFirstMonth(budget);\n    const lastMonth = moment().format(\"YYYY-MM\");\n    return budget.transactions.filter(\n      notAny([\n        isStartingBalanceOrReconciliation(budget),\n        isTransfer(investmentAccounts),\n        transaction =>\n          excludeFirstMonth && getTransactionMonth(transaction) === firstMonth,\n        transaction =>\n          excludeLastMonth && getTransactionMonth(transaction) === lastMonth\n      ])\n    );\n  }\n);\n\nconst getFilteredSpendingTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) =>\n    getFilteredTransactions(\n      budget,\n      investmentAccounts,\n      excludeFirstMonth,\n      excludeLastMonth\n    ).filter(transaction => !isIncome(budget)(transaction))\n);\n\nconst getFilteredIncomeTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) =>\n    getFilteredTransactions(\n      budget,\n      investmentAccounts,\n      excludeFirstMonth,\n      excludeLastMonth\n    )\n      .filter(transaction => isIncome(budget)(transaction))\n      .map(transaction => ({ ...transaction, amount: -transaction.amount }))\n);\n\nconst trendsPath = pages.groups.path;\nconst groupedPages = groupBy(\n  page => (page.path.startsWith(trendsPath) ? \"trendPages\" : \"otherPages\")\n)(values(pages));\n\nconst PageContent = props => {\n  if (!props.budget) {\n    return null;\n  }\n\n  const {\n    excludeFirstMonth,\n    excludeLastMonth,\n    months,\n    onSetExclusion\n  } = useMonthExclusions(props.budget);\n\n  return (\n    <Switch>\n      <Route\n        path={trendsPath}\n        render={({ match }) => {\n          const filteredTransactions = getFilteredSpendingTransactions(\n            props.budget,\n            props.investmentAccounts,\n            excludeFirstMonth,\n            excludeLastMonth\n          );\n\n          return (\n            <CategoriesState\n              key={match.params.categoryGroupId}\n              action={props.historyAction}\n              location={props.location}\n            >\n              {({\n                selectedMonth,\n                selectedGroupId,\n                selectedCategoryId,\n                selectedPayeeId,\n                onSelectMonth,\n                onSelectGroup,\n                onSelectCategory,\n                onSelectPayee\n              }) => (\n                <Switch>\n                  {groupedPages.trendPages.map(\n                    ({ path, props: propsList, paramProps, Component }) => (\n                      <Route\n                        key={path}\n                        path={path}\n                        exact\n                        render={({ match }) => (\n                          <Component\n                            {...pick(propsList)(props)}\n                            {...pick(paramProps || [])(match.params)}\n                            excludeFirstMonth={excludeFirstMonth}\n                            excludeLastMonth={excludeLastMonth}\n                            months={months}\n                            selectedMonth={selectedMonth}\n                            selectedGroupId={selectedGroupId}\n                            selectedCategoryId={selectedCategoryId}\n                            selectedPayeeId={selectedPayeeId}\n                            transactions={filteredTransactions}\n                            onSelectMonth={onSelectMonth}\n                            onSelectGroup={onSelectGroup}\n                            onSelectCategory={onSelectCategory}\n                            onSelectPayee={onSelectPayee}\n                            onSetExclusion={onSetExclusion}\n                          />\n                        )}\n                      />\n                    )\n                  )}\n                </Switch>\n              )}\n            </CategoriesState>\n          );\n        }}\n      />\n      <Route\n        path={pages.income.path}\n        exact\n        render={() => {\n          const { Component, props: propsList } = pages.income;\n          const filteredTransactions = getFilteredIncomeTransactions(\n            props.budget,\n            props.investmentAccounts,\n            excludeFirstMonth,\n            excludeLastMonth\n          );\n          return (\n            <Component\n              {...pick(propsList)(props)}\n              excludeFirstMonth={excludeFirstMonth}\n              excludeLastMonth={excludeLastMonth}\n              months={months}\n              transactions={filteredTransactions}\n              onSetExclusion={onSetExclusion}\n            />\n          );\n        }}\n      />\n      <Route\n        path={pages.incomeVsExpenses.path}\n        exact\n        render={() => {\n          const { Component, props: propsList } = pages.incomeVsExpenses;\n          const filteredTransactions = getFilteredTransactions(\n            props.budget,\n            props.investmentAccounts,\n            excludeFirstMonth,\n            excludeLastMonth\n          );\n          return (\n            <Component\n              {...pick(propsList)(props)}\n              excludeFirstMonth={excludeFirstMonth}\n              excludeLastMonth={excludeLastMonth}\n              transactions={filteredTransactions}\n              onSetExclusion={onSetExclusion}\n            />\n          );\n        }}\n      />\n      {groupedPages.otherPages.map(\n        ({ path, props: propsList, paramProps, Component }) => (\n          <Route\n            key={path}\n            path={path}\n            exact\n            render={({ match }) => (\n              <Component\n                {...pick(propsList)(props)}\n                {...pick(paramProps || [])(match.params)}\n              />\n            )}\n          />\n        )\n      )}\n      <Route\n        render={() => (\n          <div style={{ padding: 20 }}>\n            <Link\n              to={makeLink(pages.currentMonth.path, {\n                budgetId: props.budget.id\n              })}\n            >\n              Return to {pages.currentMonth.title}\n            </Link>\n          </div>\n        )}\n      />\n    </Switch>\n  );\n};\n\nPageContent.propTypes = {\n  currentMonth: PropTypes.string.isRequired,\n  historyAction: PropTypes.oneOf([\"PUSH\", \"POP\", \"REPLACE\"]).isRequired,\n  investmentAccounts: PropTypes.object.isRequired,\n  location: PropTypes.string.isRequired,\n  mortgageAccounts: PropTypes.object.isRequired,\n  onUpdateAccounts: PropTypes.func.isRequired,\n  budget: PropTypes.object\n};\n\nexport default PageContent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Section from \"./Section\";\nimport { PageTitle, StrongText, SecondaryText } from \"./typeComponents\";\nimport { PrimaryButton } from \"./Button\";\n\nconst Unauthorized = ({ onAuthorize }) => (\n  <Section>\n    <PageTitle>Budget Reports</PageTitle>\n    <div style={{ marginBottom: 10 }}>Get various insights from your YNAB account.</div>\n    <PrimaryButton onClick={onAuthorize}>\n      Authorize YNAB\n    </PrimaryButton>\n    <StrongText style={{ marginTop: 30 }}>Privacy Policy</StrongText>\n    <SecondaryText>\n      This website does not store any information from you or your YNAB account\n      on it's server. All data retrieved from the YNAB API is stored only in\n      your browser's local storage and is never transmitted to any other location or\n      third-party.\n    </SecondaryText>\n  </Section>\n);\n\nUnauthorized.propTypes = {\n  onAuthorize: PropTypes.func.isRequired\n};\n\nexport default Unauthorized;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 10px 20px;\n`;\n\n\nconst ErrorPage = ({ message }) => (\n  <Container>\n    <h3>{message}</h3>\n    <div>\n      <Link to=\"/\">Home</Link>\n    </div>\n  </Container>\n);\n\nErrorPage.propTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default ErrorPage;\n","import React from \"react\";\nimport ErrorPage from \"./ErrorPage\";\n\nconst NotFound = () => <ErrorPage message=\"Page not found\" />;\n\nexport default NotFound;\n","/* global Rollbar */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ErrorPage from \"./ErrorPage\";\n\nclass ErrorBoundary extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    message: PropTypes.string\n  };\n\n  static defaultProps = {\n    message: \"Something went wrong\"\n  };\n\n  state = { hasError: false };\n\n  componentDidCatch(error) {\n    Rollbar.error(error);\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorPage message={this.props.message} />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport pages, { makeLink } from \"../pages\";\nimport { StrongText } from \"./typeComponents\";\nimport Section from \"./Section\";\nimport Loading from \"./Loading\";\n\nclass Budgets extends Component {\n  static propTypes = {\n    budgets: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    budgetsLoaded: PropTypes.bool.isRequired,\n    onRequestBudgets: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    if (!this.props.budgetsLoaded) {\n      this.props.onRequestBudgets();\n    }\n  }\n\n  render() {\n    const { budgets, budgetsLoaded } = this.props;\n\n    if (!budgetsLoaded) {\n      return <Loading />;\n    }\n\n    return (\n      <Section>\n        <StrongText>Select a budget:</StrongText>\n        {budgets.map(({ id, name }) => (\n          <div key={id}>\n            <Link to={makeLink(pages.currentMonth.path, { budgetId: id })}>\n              {name}\n            </Link>\n          </div>\n        ))}\n      </Section>\n    );\n  }\n}\n\nexport default Budgets;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Switch } from \"react-router-dom\";\nimport moment from \"moment\";\nimport get from \"lodash/fp/get\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport {\n  getBudgets,\n  getUpdatedBudget,\n  AUTHORIZE_URL,\n  setLastLocation\n} from \"../ynabRepo\";\nimport { setSetting, getSetting } from \"../uiRepo\";\nimport PageWrapper from \"./PageWrapper\";\nimport PageTitle from \"./PageTitle\";\nimport PageBreadcrumbs from \"./PageBreadcrumbs\";\nimport PageActions from \"./PageActions\";\nimport PageContent from \"./PageContent\";\nimport Unauthorized from \"./Unauthorized\";\nimport NotFound from \"./NotFound\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport Budgets from \"./Budgets\";\nimport CurrencyContext from \"./CurrencyContext\";\n\nclass App extends Component {\n  static propTypes = {\n    hasToken: PropTypes.bool.isRequired\n  };\n\n  state = {\n    authorized: true,\n    budgetsLoaded: false,\n    budgetIds: [],\n    budgets: {},\n    budgetDetails: {},\n    currentMonth: moment().format(\"YYYY-MM\")\n  };\n\n  handleRequestBudgets = callback => {\n    getBudgets().then(({ budgets }) => {\n      this.setState(\n        {\n          budgetsLoaded: true,\n          budgetIds: budgets.map(b => b.id),\n          budgets: keyBy(\"id\")(budgets)\n        },\n        callback\n      );\n    });\n  };\n\n  handleRequestBudget = id => {\n    getUpdatedBudget(id).then(({ budget, authorized }) => {\n      this.setState(state => ({\n        ...state,\n        authorized,\n        budgetDetails: {\n          ...state.budgetDetails,\n          [id]: budget\n        }\n      }));\n    });\n  };\n\n  handleAuthorize = () => {\n    setLastLocation();\n    window.location.replace(AUTHORIZE_URL);\n  };\n\n  render() {\n    const { hasToken } = this.props;\n    const {\n      authorized,\n      budgetsLoaded,\n      budgetIds,\n      budgets,\n      budgetDetails,\n      currentMonth\n    } = this.state;\n\n    if (!hasToken) {\n      return <Unauthorized onAuthorize={this.handleAuthorize} />;\n    }\n\n    return (\n      <ErrorBoundary>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <Budgets\n                budgets={budgetIds.map(id => budgets[id])}\n                budgetsLoaded={budgetsLoaded}\n                onRequestBudgets={this.handleRequestBudgets}\n              />\n            )}\n          />\n          <Route\n            path=\"/budgets/:budgetId\"\n            render={props => {\n              const { budgetId } = props.match.params;\n              const budget = budgetDetails[budgetId];\n\n              return (\n                <CurrencyContext.Provider value={get(\"currencyFormat\")(budget)}>\n                  <PageWrapper\n                    authorized={authorized}\n                    budgetId={budgetId}\n                    budgetLoaded={!!budget}\n                    hasMultipleBudgets={budgetIds.length > 1}\n                    historyAction={props.history.action}\n                    location={props.location.pathname}\n                    onAuthorize={this.handleAuthorize}\n                    onRequestBudget={this.handleRequestBudget}\n                    title={<PageTitle budget={budget} />}\n                    breadcrumbs={<PageBreadcrumbs budget={budget} />}\n                    actions={<PageActions />}\n                    content={\n                      <PageContent\n                        budget={budget}\n                        currentMonth={currentMonth}\n                        investmentAccounts={getSetting(\n                          \"investmentAccounts\",\n                          budgetId\n                        )}\n                        mortgageAccounts={getSetting(\n                          \"mortgageAccounts\",\n                          budgetId\n                        )}\n                        historyAction={props.history.action}\n                        location={props.location.pathname}\n                        onUpdateAccounts={({ type, value }) => {\n                          if (type === \"investment\") {\n                            setSetting(\"investmentAccounts\", budgetId, value);\n                          }\n                          if (type === \"mortgage\") {\n                            setSetting(\"mortgageAccounts\", budgetId, value);\n                          }\n                          this.forceUpdate();\n                        }}\n                      />\n                    }\n                  />\n                </CurrencyContext.Provider>\n              );\n            }}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { getAuthorizeToken, initializeYnabApi } from \"./ynabRepo\";\nimport App from \"./components/App\";\n\nconst token = getAuthorizeToken();\n\nif (token) {\n  initializeYnabApi(token);\n}\n\nReactDOM.render(\n  <HashRouter>\n    <App hasToken={!!token} />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}