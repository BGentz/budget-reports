{"version":3,"sources":["localstorageUtils.js","uiRepo.js","dataUtils.js","repoUtils.js","localBudgetCache.js","ynabRepo.js","components/typeComponents.js","components/Loading.js","components/EnsureBudgetLoaded.js","styleVariables.js","components/Button.js","components/Icon.js","pages.js","components/SidebarMenuContent.js","components/SidebarMenu.js","components/PageWrapper.js","budgetUtils.js","commonHooks.js","components/Scroller.js","components/PageBreadcrumbs.js","components/PageActions.js","components/PageLayout.js","components/CollapsibleSection.js","components/Chart.js","components/CurrencyContext.js","components/Amount.js","components/ChartNumbers.js","components/SpendingChart.js","components/Modal.js","components/ChartSettingsModal.js","components/DayByDaySection.js","components/ListItem.js","components/EmptyText.js","components/NoTransactions.js","components/LabelWithMinorText.js","components/LabelWithTransactionCount.js","components/AmountWithPercentage.js","components/SeeAll.js","components/GenericEntitiesSection.js","components/DateSummaryTransaction.js","components/ToggleNode.js","components/DateSummary.js","components/RecentSpending.js","components/CurrentMonthPage.js","components/MonthlyChart.js","components/Toggle.js","components/ToggleWithLabel.js","components/MonthByMonthSettingsModal.js","components/MonthByMonthSection.js","components/IncomePage.js","components/Transaction.js","components/TransactionsSection.js","components/CurrentMonthGroupPage.js","components/CurrentMonthCategoryPage.js","components/GroupsPage.js","components/TransactionsByMonthSection.js","components/GroupPage.js","components/CategoriesState.js","components/CategoryPage.js","components/CategoryPayeePage.js","components/IncomeVsExpensesChart.js","components/BreakdownNode.js","components/Breakdown.js","components/ExpensesBreakdown.js","components/IncomeBreakdown.js","components/Breakdowns.js","components/IncomeVsExpensesPage.js","components/NetWorthChart.js","components/NetWorthAccounts.js","components/NetWorthPage.js","components/InvestmentsPage.js","components/ProjectionsChart.js","components/ClickOff.js","components/ProjectionsSlider.js","components/ProjectionsPage.js","projectionUtils.js","components/Section.js","components/AccountsSelectionForm.js","components/SettingsInvestmentAccounts.js","components/SettingsMortgageAccounts.js","components/SettingsPage.js","components/PageContent.js","components/Unauthorized.js","components/ErrorPage.js","components/NotFound.js","components/ErrorBoundary.js","components/Budgets.js","components/App.js","index.js"],"names":["cache","getStorage","key","raw","localStorage","getItem","parsed","JSON","parse","setStorage","obj","setItem","stringify","e","SETTINGS","excludeFirstMonth","localStorageKey","default","excludeLastMonth","investmentAccounts","lastUpdated","mortgageAccounts","netWorthHiddenAccounts","spendingMonthsToCompare","trendsShowAverage","getSetting","settingsKey","budgetId","setting","Error","get","setSetting","value","previousSetting","Object","objectSpread","defineProperty","groupBy","func","arr","grouped","forEach","push","groupByProp","keyByProp","reduce","acc","curr","sumByProp","simpleMemoize","lastArgs","lastResult","_len","arguments","length","args","Array","_key","every","index","apply","notAny","predicates","arg","predicate","formatCurrency","utils","convertMilliUnitsToCurrencyAmount","GROUPS_TO_HIDE","sanitizeBudget","budget","transactionIdsFromSub","uniq","subtransactions","map","transaction","transaction_id","categoryGroups","category_groups","filter","group","includes","name","categories","category","deleted","activity","balance","budgeted","categoriesById","earliestDate","moment","subtract","MAX_MONTHS_TO_SHOW","format","currencyFormat","symbol","currency_format","currency_symbol","omit","accountsById","accounts","categoryGroupsById","payeesById","payees","months","sortBy","transactions","compose","amount","category_id","flatMap","id","subs","sub","matchesProperty","reverse","dropWhile","date","applyDeltas","deltas","undefined","updater","prev","exists","newArr","item","concat","upsertBy","arraysToUpdate","cachedDetails","getAllBudgetDetails","setBudgetDetails","_ref","server_knowledge","details","newDetails","AUTHORIZE_URL","api","getBudgets","budgets","then","data","catch","matches","error","message","removeItem","getBudget","getBudgetById","_ref2","valueOf","authorized","getUpdatedBudget","budgetDetails","getBudgetDetails","_ref3","mergeBudgets","setLastLocation","window","location","hash","PageTitle","styled","div","_templateObject","LargeNumber","_templateObject2","StrongText","_templateObject3","SecondaryText","_templateObject4","MinorText","_templateObject5","Loading","react_default","a","createElement","style","height","display","flexDirection","alignItems","justifyContent","EnsureBudgetLoaded","_this$props","this","props","budgetLoaded","onRequestBudget","children","components_Loading","Component","selectedPlotBandColor","tinyColor","lighten","desaturate","toHexString","lighterPrimaryColor","lightPrimaryColor","negativeChartColor","Button","Button_templateObject","PrimaryButton","Button_templateObject2","library","add","faArrowLeft","faBars","faCaretDown","faChevronRight","faCog","faEllipsisV","faEye","faEyeSlash","faPencilAlt","faTimes","ICONS","arrow-left","bars","caret-down","chevron-right","cog","pencil","ellipsis-v","eye","eye-slash","times","PRESET_STYLES","faded","fontWeight","color","fontSize","Icon","icon","other","objectWithoutProperties","react_fontawesome_index_es","assign","makeLink","path","params","replace","_","part","pages","currentMonth","title","currentMonthGroup","categoryGroupId","paramProps","breadcrumbs","currentMonthCategory","categoryId","groups","categoryPayee","payeeId","income","incomeVsExpenses","netWorth","investments","projections","settings","Header","SidebarMenuContent_templateObject","IconWrapper","SidebarMenuContent_templateObject2","StyledLink","NavLink","SidebarMenuContent_templateObject3","active","SidebarMenuContent","hasMultipleBudgets","onCloseSidebar","react","SidebarMenuContent_PureHeader","page","_pages$page","SidebarMenuContent_PureStyledLink","to","matchPath","onClick","PureComponent","PureHeader","_this$props2","components_Icon","react_router_dom","PureStyledLink","SidebarMenu","state","open","handleSetOpen","_this","setState","handleTriggerClick","handleCloseSidebar","react_sidebar_esm","sidebar","components_SidebarMenuContent","onSetOpen","styles","backgroundColor","width","pointerEvents","sidebarTrigger","SidebarMenu_Trigger","Trigger","alignSelf","Container","PageWrapper_templateObject","PageWrapper","onAuthorize","components_EnsureBudgetLoaded","components_SidebarMenu","PageWrapper_Container","padding","flexShrink","borderTop","mapRaw","convert","cap","isStartingBalanceOrReconciliation","startingBalancePayeeId","find","payee","reconciliationPayeeId","payee_id","isIncome","toBeBudgetedId","isTransfer","transfer_account_id","getTransactionMonth","slice","getFirstMonth","getPayeeNodes","divideBy","pick","sanitizeName","trim","useSelectedMonth","_useState","useState","_useState2","slicedToArray","selectedMonth","setSelectedMonth","selectedMonthRef","useRef","current","month","useSelectedEntityId","_useState3","_useState4","selectedEntityId","setSelectedEntityId","entityId","useTrendsShowAverage","_useState5","_useState6","showAverage","setShowAverage","useMonthExclusions","_useState7","_useState8","setExcludeFirstMonth","_useState9","_useState10","setExcludeLastMonth","firstBudgetMonth","firstMonth","lastMonth","m","getMonths","onSetExclusion","exclude","useFlagState","initial","_useState13","_useState14","flag","setFlag","Scroller","toBeScrolled","raf","scrollPositions","scrollTop","prevProps","prevState","snapshot","_this2","action","requestAnimationFrame","cancelAnimationFrame","_this3","ref","el","routes","values","pageKey","PageBreadcrumbs","react_router","exact","render","lineHeight","whiteSpace","match","paddingBottom","PageActions","_ref4","_ref5","_ref6","PageLayout_templateObject","Body","PageLayout_templateObject2","PageLayout","historyAction","fixedContent","content","PageLayout_Header","flexGrow","components_PageBreadcrumbs","components_PageActions","components_Scroller","CollapsibleSection_templateObject","fullWidth","CollapsibleSection_templateObject2","SettingsContainer","CollapsibleSection_templateObject3","CollapsibleSection_templateObject4","CollapsibleSection","actions","hasSettings","noPadding","onClickSettings","expanded","setExpanded","CollapsibleSection_Container","CollapsibleSection_Header","transform","rotate","marginLeft","es","isExpanded","CollapsibleSection_Body","CHART_DEFAULTS","chart","spacing","credits","enabled","legend","text","subtitle","tooltip","xAxis","tickLength","Chart","options","highcharts_react_min_default","highcharts","Highcharts","CurrencyContext","React","createContext","Amount","amountAfterDecimal","positiveIsRed","showCurrencySymbol","components_CurrencyContext","Consumer","nStr","x","split","x1","x2","rgx","test","addCommas","Math","abs","toFixed","defaultProps","ChartNumbers","numbers","alwaysRound","smallNumbers","some","textAlign","marginBottom","label","_ref3$isMoney","isMoney","decimalsToRound","components_Amount","isNumber","DateLabels","SpendingChart_templateObject","getData","transactionsByDate","today","cumulative","range","daysInMonth","numDays","padCharsStart","sumBy","SpendingChart","total","highlightFunction","monthsToCompare","highlightedTransactions","highlightSeries","type","enableMouseTracking","marker","animation","lineWidth","fillOpacity","firstDate","lastDate","lineData","day","firstDayOfWeek","parseInt","plotBands","num","from","comparisonSeries","numMonths","mix","toHex","spent","takeWhile","chartNumbers","components_ChartNumbers","components_Chart","labels","yAxis","visible","endOnTick","startOnTick","series","dashStyle","toConsumableArray","Modal_templateObject","Overlay","Modal_templateObject2","ModalContent","Modal_templateObject3","ensureNextTick","callback","Modal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleTransitionEnd","animationState","document","body","appendChild","removeChild","onClose","shouldShow","createPortal","Modal_Container","opacity","onTransitionEnd","marginTop","ChartSettingsModal","onDecrementMonths","onIncrementMonths","components_Modal","marginRight","components_Button","DayByDaySection","_useFlagState","_useFlagState2","modalOpen","onCloseModal","onOpenModal","_useMonthsToCompare","_useState11","_useState12","setMonthsToCompare","newMonths","max","min","useMonthsToCompare","components_CollapsibleSection","components_SpendingChart","components_ChartSettingsModal","ListItem","ListItem_templateObject","isContinuing","EmptyText","EmptyText_templateObject","NoTransactions","components_EmptyText","LabelWithMinorText","minorText","inLink","bold","overflow","textOverflow","LabelWithTransactionCount","count","selected","showCount","components_LabelWithMinorText","AmountWithPercentage","SeeAll","pluralizedName","showAll","onToggle","mapWithKeys","keyToPluralizedName","category_group_id","GenericEntitiesSection","allMounted","handleToggleShowAll","_this$state","emptyName","entityKey","entityFunction","entitiesById","linkFunction","limitShowingProp","limitShowing","showAverageToggle","showTransactionCount","onClickEntity","onToggleAverage","_this$state2","entities","LIMIT","topEntities","otherEntities","components_NoTransactions","GenericEntitiesSection_GenericItemLink","components_SeeAll","MaybeLink","GenericItemLink","components_ListItem","components_LabelWithTransactionCount","GenericEntitiesSection_MaybeLink","evt","stopPropagation","components_AmountWithPercentage","StyledListItem","DateSummaryTransaction_templateObject","DateSummaryTransaction","memo","NodeWrapper","ToggleNode_templateObject","isCompact","ToggleNode_templateObject2","ToggleNode","valueRenderer","ToggleNode_IconWrapper","DateSummary_templateObject","DateSummary","onToggleExpanded","DateSummary_Container","components_ToggleNode","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","paddingLeft","components_DateSummaryTransaction","margin","RecentSpending","recentDays","n","startsWith","components_DateSummary","CurrentMonthPage","_useSelectedEntityId","_useSelectedEntityId2","selectedGroupId","onSelectGroupId","selectedGroup","transactionsThisMonth","components_PageLayout","components_DayByDaySection","components_RecentSpending","components_GenericEntitiesSection","groupId","MonthlyChart","average","stacked","onSelectMonth","yearLines","d","highlights","zIndex","findIndex","events","click","event","round","plotLines","gridLineColor","plotOptions","stacking","s","valueFunction","borderWidth","states","hover","brightness","Track","Toggle_templateObject","HEIGHT","on","Handle","Toggle_templateObject2","WIDTH","Toggle","ToggleWithLabel_templateObject","Label","ToggleWithLabel_templateObject2","ToggleWithLabel","checked","onChange","ToggleWithLabel_Container","target","components_Toggle","MonthByMonthSettingsModal","components_ToggleWithLabel","MonthByMonthSection","settingsModalOpen","setSettingsModalOpen","selectedMonthTotal","transactionsByMonth","false","highlighted","true","components_MonthlyChart","components_MonthByMonthSettingsModal","getFilteredTransactions","getFilteredIncomeTransactions","IncomePage","_useMonthExclusions","_useSelectedMonth","_useSelectedMonth2","selectedPayeeId","onSelectPayeeId","onToggleShowAverage","filteredTransactions","transactionsInSelectedMonth","components_MonthByMonthSection","Transaction","TransactionsSection","components_Transaction","CurrentMonthGroupPage","selectedCategoryId","onSelectCategoryId","allCategories","allTransactions","selectedCategory","categoryIds","transactionsInGroup","transactionsInGroupForMonth","available","components_TransactionsSection","CurrentMonthCategoryPage","transactionsInCategory","transactionsInCategoryForMonth","GroupsPage","onSelectGroup","_useTrendsShowAverage","_useTrendsShowAverage2","transactionsForMonth","TransactionsByMonthSection","selectedPayee","topTransactions","otherTransactions","GroupPage","onSelectCategory","categoryGroup","components_TransactionsByMonthSection","INITIAL_STATE","CategoriesState","cachedStates","handleSelectMonth","handleSelectGroup","handleSelectCategory","handleSelectPayee","onSelectPayee","handleSetExclusion","CategoryPage","transactionsForCategory","CategoryPayeePage","transactionsForCategoryAndPayee","IncomeVsExpensesChart","expenses","BreakdownNode","childrenMounted","handleToggleExpand","nodes","isTopLevel","hasChildNodes","BreakdownNode_Container","BreakdownNode_LeafNode","BreakdownNode_Nodes","Nodes","node","BreakdownNode_BreakdownNode","BreakdownNode_templateObject","LeafNode","BreakdownNode_NodeWrapper","Breakdown","components_BreakdownNode","ExpensesBreakdown","totalIncome","categoryNodes","payeeNodes","groupNodes","rootPayeeNodes","components_Breakdown","IncomeBreakdown","Breakdowns","expenseTransactions","incomeTransactions","components_ExpensesBreakdown","components_IncomeBreakdown","getSummaries","IncomeVsExpensesPage","showTotals","setShowTotals","allSummaries","summaries","summary","totalExpenses","denominator","components_IncomeVsExpensesChart","components_Breakdowns","CREDIT_ACCOUNTS","NetWorthChart","groupedData","getStack","monthlyData","assets","asset","liabilities","liability","getNodes","accountsByGroup","account","startCase","AccountBreakdown","hiddenAccounts","onToggleAccounts","propEq","ids","NetWorthAccounts","keyBy","visibleNodes","reject","hiddenNodes","NetWorthAccounts_AccountBreakdown","last","groupByMonthAndAccount","mapValues","identity","keys","getSummaryByAccount","groupedTransactions","getSelectedBalances","selectedMonthIndex","eq","accountSummaries","NetWorthPage","_useHiddenAccounts","setHiddenAccounts","onToggleHiddenAccounts","shouldHide","newHiddenAccounts","useHiddenAccounts","selectedBalances","filterHidden","omitBy","selectedLiabilities","sum","b","selectedAssets","components_NetWorthChart","constant","components_NetWorthAccounts","isContribution","account_id","isCapitalGainOrLoss","InvestmentsPage","selectedBreakdown","onSelectBreakdown","investmentTransactions","isInvestmentTransaction","transactionsInMonth","contribution","capitalGain","ProjectionsChart","investmentsProjection","mortgageProjection","amountNeededToRetire","yearsUntilRetirement","floor","isDescendant","parent","child","parentNode","ClickOff","handleBodyClick","onClickOff","addEventListener","removeEventListener","bodyEl","getElementsByTagName","ProjectionsSlider_templateObject","ProjectionsSlider","formatter","onBlur","onReset","rangeOptions","components_ClickOff","ProjectionsSlider_Container","ProjectionsSlider_Range","val","Range","adjustableEntries","adjustableEntriesByName","getInitialState","mortgageAccount","t","lastMonthTransactions","takeRightWhile","P","P1","c","prop","r","N","log","rate","paymentsLeft","projection","pow","mortgagePayment","principalProjection","getMortgageRate","remainingMortgagePayments","returnOnInvestments","investmentAccountIds","tr","startForMonth","returnRates","trs","contributions","gains","returns","totalReturn","multiply","getReturnOnInvestments","averageContribution","transferAccountId","_ref7","accountId","diff","head","getAverageContribution","currentInvestments","getCurrentInvestments","averageExpenses","_ref8","startingBalanceId","mortgageAccountIds","getAverageExpensesWithoutMortgage","retirementReturns","retirementTaxRate","maxAverageExpenses","ceil","maxAverageContribution","ProjectionsPage","handleChange","parseFloat","handleSelectAdjusting","adjustingName","handleClearSelection","handleResetCalculation","calculation","_ref9","monthlyRate","getProjection","YEARS_TO_PROJECT","monthlyRetirementReturn","remainingMortgage","projectionWithRetirement","_ref10","monthsBeforeRetirement","monthlyExpenses","getProjectionWithRetirement","hasMortgage","projectionByYear","chunk","mortgageProjectionByYear","nameToRangeOptions","step","components_ProjectionsChart","ProjectionsPage_AdjustableEntry","isAdjusting","onSelect","ProjectionsPage_Entry","components_ProjectionsSlider","AdjustableEntry","highlightValue","isAdjustable","Entry","_ref4$formatter","borderRadius","Section","Section_templateObject","top","AccountsSelectionForm","_evt$target","SectionHeader","SettingsInvestmentAccounts_templateObject","SettingsInvestmentAccounts","onUpdateAccounts","investmentModalOpen","closeInvestmentModal","openInvestmentModal","potentialInvestmentAccounts","on_budget","investmentAccountsList","components_AccountsSelectionForm","accountsObject","SettingsMortgageAccounts_templateObject","SettingsMortgageAccounts","mortgageModalOpen","closeMortgageModal","openMortgageModal","potentialMortageAccounts","mortgageAccountList","SettingsMortgageAccounts_SectionHeader","Space","SettingsPage_templateObject","SettingsPage","components_Section","components_SettingsInvestmentAccounts","components_SettingsMortgageAccounts","getFilteredSpendingTransactions","components_CurrentMonthPage","components_CurrentMonthGroupPage","components_CurrentMonthCategoryPage","components_IncomePage","components_IncomeVsExpensesPage","components_NetWorthPage","components_InvestmentsPage","components_ProjectionsPage","components_SettingsPage","components_CategoriesState","components_GroupsPage","components_GroupPage","components_CategoryPage","components_CategoryPayeePage","nextProps","Unauthorized","ErrorPage_templateObject","ErrorPage","ErrorPage_Container","NotFound","components_ErrorPage","ErrorBoundary","hasError","Rollbar","token","Budgets","budgetsLoaded","onRequestBudgets","App","budgetIds","handleRequestBudgets","handleRequestBudget","handleAuthorize","hasToken","components_ErrorBoundary","components_Budgets","history","components_PageWrapper","pathname","Provider","components_PageContent","forceUpdate","component","components_Unauthorized","search","substring","decodeURIComponent","getAuthorizeToken","ynab","ReactDOM","components_App","getElementById"],"mappings":"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","file":"static/js/main.903c4b54.chunk.js","sourcesContent":["const cache = {};\n\nexport const getStorage = key => {\n  if (cache[key]) {\n    return cache[key];\n  }\n  const raw = localStorage.getItem(key);\n  if (raw) {\n    const parsed = JSON.parse(raw);\n    cache[key] = parsed;\n    return parsed;\n  }\n  return null;\n};\n\nexport const setStorage = (key, obj) => {\n  delete cache[key];\n\n  try {\n    localStorage.setItem(key, JSON.stringify(obj));\n  } catch (e) {\n    // Most likely exceeds storage quota\n  }\n};\n","import { getStorage, setStorage } from \"./localstorageUtils\";\nimport get from \"lodash/get\";\n\nconst SETTINGS = {\n  excludeFirstMonth: {\n    localStorageKey: \"budget-reports-exclude-first-month\",\n    default: false\n  },\n  excludeLastMonth: {\n    localStorageKey: \"budget-reports-exclude-last-month\",\n    default: false\n  },\n  investmentAccounts: {\n    localStorageKey: \"budget-reports-investment-accounts\",\n    default: {}\n  },\n  lastUpdated: {\n    localStorageKey: \"budget-reports-last-updated\",\n    default: null\n  },\n  mortgageAccounts: {\n    localStorageKey: \"budget-reports-mortgage-accounts\",\n    default: {}\n  },\n  netWorthHiddenAccounts: {\n    localStorageKey: \"budget-reports-networth-hidden-accounts\",\n    default: {}\n  },\n  spendingMonthsToCompare: {\n    localStorageKey: \"budget-reports-spending-months-to-compare\",\n    default: 3\n  },\n  trendsShowAverage: {\n    localStorageKey: \"budget-reports-trends-show-average\",\n    default: true\n  }\n};\n\nexport const getSetting = (settingsKey, budgetId) => {\n  const setting = SETTINGS[settingsKey];\n\n  if (!setting) {\n    throw new Error(\"not a valid settings key\");\n  }\n\n  return get(getStorage(setting.localStorageKey), budgetId, setting.default);\n};\n\nexport const setSetting = (settingsKey, budgetId, value) => {\n  const setting = SETTINGS[settingsKey];\n\n  if (!setting) {\n    throw new Error(\"not a valid settings key\");\n  }\n\n  const previousSetting = getStorage(setting.localStorageKey);\n\n  setStorage(setting.localStorageKey, {\n    ...previousSetting,\n    [budgetId]: value\n  });\n};\n","export const groupBy = func => arr => {\n  const grouped = {};\n  arr.forEach(obj => {\n    const key = func(obj);\n    if (!grouped[key]) {\n      grouped[key] = [];\n    }\n    grouped[key].push(obj);\n  });\n  return grouped;\n};\n\nexport const groupByProp = key => arr => {\n  const grouped = {};\n  arr.forEach(obj => {\n    if (!grouped[obj[key]]) {\n      grouped[obj[key]] = [];\n    }\n    grouped[obj[key]].push(obj);\n  });\n  return grouped;\n};\n\nexport const keyByProp = key => arr =>\n  arr.reduce((acc, curr) => ({ ...acc, [curr[key]]: curr }), {});\n\nexport const sumBy = func => arr =>\n  arr.reduce((acc, curr) => acc + func(curr), 0);\n\nexport const sumByProp = key => arr =>\n  arr.reduce((acc, curr) => acc + curr[key], 0);\n\nexport const simpleMemoize = func => {\n  let lastArgs = null;\n  let lastResult = null;\n  return (...args) => {\n    if (\n      lastArgs !== null &&\n      lastArgs.length === args.length &&\n      args.every((value, index) => value === lastArgs[index])\n    ) {\n      return lastResult;\n    }\n    lastArgs = args;\n    lastResult = func(...args);\n    return lastResult;\n  };\n};\n\nexport const notAny = predicates => arg =>\n  predicates.every(predicate => !predicate(arg));\n\nexport const upsertBy = (arr, key, obj, updater = (prev, curr) => curr) => {\n  let exists = false;\n  const newArr = arr.map(item => {\n    if (item[key] === obj[key]) {\n      exists = true;\n      return updater(item, obj);\n    }\n    return item;\n  });\n  return exists ? newArr : newArr.concat(obj);\n};\n","import { utils } from \"ynab\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport flatMap from \"lodash/fp/flatMap\";\nimport dropWhile from \"lodash/fp/dropWhile\";\nimport matchesProperty from \"lodash/fp/matchesProperty\";\nimport omit from \"lodash/fp/omit\";\nimport reverse from \"lodash/fp/reverse\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport uniq from \"lodash/fp/uniq\";\nimport { upsertBy, keyByProp } from \"./dataUtils\";\n\nconst formatCurrency = utils.convertMilliUnitsToCurrencyAmount;\n\nconst GROUPS_TO_HIDE = [\"Internal Master Category\", \"Credit Card Payments\"];\n\nconst MAX_MONTHS_TO_SHOW = 24;\n\nexport const sanitizeBudget = budget => {\n  const transactionIdsFromSub = uniq(\n    budget.subtransactions.map(transaction => transaction.transaction_id)\n  );\n  const categoryGroups = budget.category_groups.filter(\n    group => !GROUPS_TO_HIDE.includes(group.name)\n  );\n  const categories = budget.categories\n    .filter(category => !category.deleted)\n    .map(category => ({\n      ...category,\n      activity: formatCurrency(category.activity),\n      balance: formatCurrency(category.balance),\n      budgeted: formatCurrency(category.budgeted)\n    }));\n  const categoriesById = keyByProp(\"id\")(categories);\n  const earliestDate = moment()\n    .subtract(MAX_MONTHS_TO_SHOW - 1, \"months\")\n    .format(\"YYYY-MM-01\");\n  const currencyFormat = {\n    symbol: budget.currency_format.currency_symbol\n  };\n\n  return {\n    ...omit([\"category_groups\", \"currency_format\"])(budget),\n    accountsById: keyByProp(\"id\")(budget.accounts),\n    categoryGroups,\n    categoryGroupsById: keyByProp(\"id\")(categoryGroups),\n    categories,\n    categoriesById,\n    currencyFormat,\n    payeesById: keyByProp(\"id\")(budget.payees),\n    months: sortBy(\"month\")(budget.months),\n    transactions: compose([\n      transactions =>\n        transactions.map(transaction => ({\n          ...transaction,\n          amount: formatCurrency(transaction.amount)\n        })),\n      // Not sure how this would happen, but seeing it in production\n      transactions =>\n        transactions.filter(\n          transaction =>\n            !transaction.category_id ||\n            !!categoriesById[transaction.category_id]\n        ),\n      flatMap(\n        transaction =>\n          transactionIdsFromSub.includes(transaction.id)\n            ? compose([\n                subs =>\n                  subs.map(sub =>\n                    omit(\"transaction_id\")({ ...transaction, ...sub })\n                  ),\n                subs =>\n                  subs.filter(matchesProperty(\"transaction_id\", transaction.id))\n              ])(budget.subtransactions)\n            : transaction\n      ),\n      reverse,\n      dropWhile(transaction => transaction.date < earliestDate),\n      sortBy(\"date\"),\n      transactions =>\n        transactions.filter(transaction => transaction.amount !== 0)\n    ])(budget.transactions)\n  };\n};\n\nconst applyDeltas = (arr, deltas, key = \"id\", updater) =>\n  deltas.reduce((acc, curr) => upsertBy(acc, key, curr, updater), arr);\n\nconst arraysToUpdate = [\n  \"accounts\",\n  \"categories\",\n  \"category_groups\",\n  \"payee_locations\",\n  \"payees\",\n  \"scheduled_subtransactions\",\n  \"scheduled_transactions\",\n  \"subtransactions\",\n  \"transactions\"\n];\n\nexport const mergeBudgets = (budget, deltas) => ({\n  ...budget,\n  ...deltas,\n  ...arraysToUpdate.reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr]: applyDeltas(budget[curr], deltas[curr])\n    }),\n    {}\n  ),\n  months: applyDeltas(budget.months, deltas.months, \"month\", (prev, curr) => ({\n    ...prev,\n    ...curr,\n    categories: applyDeltas(prev.categories, curr.categories)\n  }))\n});\n","import get from \"lodash/fp/get\";\nimport { getStorage, setStorage } from \"./localstorageUtils\";\n\nconst BUDGET_DETAILS_STORAGE_KEY = \"ynab_budget_details\";\n\nlet cachedDetails = null;\n\nconst getAllBudgetDetails = () => {\n  if (cachedDetails) {\n    return cachedDetails;\n  }\n  cachedDetails = getStorage(BUDGET_DETAILS_STORAGE_KEY);\n  return cachedDetails;\n};\n\nexport const getBudgetDetails = id => get(id)(getAllBudgetDetails());\n\nexport const setBudgetDetails = ({ id, budget, server_knowledge }) => {\n  const details = getAllBudgetDetails();\n  const newDetails = {\n    ...details,\n    [id]: { budget, server_knowledge }\n  };\n  setStorage(BUDGET_DETAILS_STORAGE_KEY, newDetails);\n  cachedDetails = newDetails;\n};\n","import * as ynab from \"ynab\";\nimport moment from \"moment\";\nimport get from \"lodash/fp/get\";\nimport matches from \"lodash/fp/matches\";\nimport { getStorage, setStorage } from \"./localstorageUtils\";\nimport { setSetting, getSetting } from \"./uiRepo\";\nimport { sanitizeBudget, mergeBudgets } from \"./repoUtils\";\nimport { getBudgetDetails, setBudgetDetails } from \"./localBudgetCache\";\nimport { clientId, redirectUri } from \"./ynabConfig\";\n\nconst TOKEN_STORAGE_KEY = \"ynab_access_token\";\nconst BUDGETS_STORAGE_KEY = \"ynab_budgets\";\nconst LAST_LOCATION_KEY = \"budget-reports-last-location\";\n\nconst TIME_LIMIT_FOR_FULL_REFRESH = 8 * 1000;\n\nexport const AUTHORIZE_URL =\n  \"https://api.youneedabudget.com/oauth/authorize?client_id=\" +\n  clientId +\n  \"&redirect_uri=\" +\n  redirectUri +\n  \"&response_type=token\";\n\nexport const getAuthorizeToken = () => {\n  // check for hash route\n  if (window.location.hash[1] === \"/\") {\n    return localStorage.getItem(TOKEN_STORAGE_KEY);\n  }\n\n  const search = window.location.hash\n    .substring(1)\n    .replace(/&/g, '\",\"')\n    .replace(/=/g, '\":\"');\n\n  if (!search) {\n    return localStorage.getItem(TOKEN_STORAGE_KEY);\n  }\n\n  const token = get(\"access_token\")(\n    JSON.parse(\n      '{\"' + search + '\"}',\n      (key, value) => (key === \"\" ? value : decodeURIComponent(value))\n    )\n  );\n  localStorage.setItem(TOKEN_STORAGE_KEY, token);\n  window.location.hash = localStorage.getItem(LAST_LOCATION_KEY) || \"\";\n  localStorage.removeItem(LAST_LOCATION_KEY);\n\n  return token;\n};\n\nlet api = null;\n\nexport const initializeYnabApi = token => {\n  api = new ynab.api(token);\n};\n\nexport const getBudgets = () =>\n  api.budgets\n    .getBudgets()\n    .then(({ data }) => {\n      setStorage(BUDGETS_STORAGE_KEY, data);\n      return data;\n    })\n    .catch(e => {\n      if (\n        matches({\n          id: \"401\",\n          name: \"unauthorized\"\n        })(e.error) ||\n        e.message === \"Failed to fetch\"\n      ) {\n        localStorage.removeItem(TOKEN_STORAGE_KEY);\n        return getStorage(BUDGETS_STORAGE_KEY) || { budgets: [] };\n      }\n\n      throw e;\n    });\n\nconst getBudget = id =>\n  api.budgets\n    .getBudgetById(id)\n    .then(({ data }) => {\n      const { budget, server_knowledge } = data;\n\n      setBudgetDetails({ id, budget, server_knowledge });\n      setSetting(\"lastUpdated\", id, moment().valueOf());\n\n      return { budget: sanitizeBudget(budget), authorized: true };\n    })\n    .catch(e => {\n      if (\n        matches({ id: \"401\", name: \"unauthorized\" })(e.error) ||\n        e.message === \"Failed to fetch\"\n      ) {\n        localStorage.removeItem(TOKEN_STORAGE_KEY);\n        return {\n          budget: { categories: [], transactions: [], payees: [] },\n          authorized: false\n        };\n      }\n\n      throw e;\n    });\n\nexport const getUpdatedBudget = id => {\n  const budgetDetails = getBudgetDetails(id);\n\n  if (!budgetDetails) {\n    return getBudget(id);\n  }\n\n  if (\n    moment().valueOf() - getSetting(\"lastUpdated\", id) <\n    TIME_LIMIT_FOR_FULL_REFRESH\n  ) {\n    return getBudget(id);\n  }\n\n  return api.budgets\n    .getBudgetById(id, budgetDetails.server_knowledge)\n    .then(({ data }) => {\n      const budget = mergeBudgets(budgetDetails.budget, data.budget);\n\n      setBudgetDetails({ id, budget, server_knowledge: data.server_knowledge });\n      setSetting(\"lastUpdated\", id, moment().valueOf());\n\n      return { budget: sanitizeBudget(budget), authorized: true };\n    })\n    .catch(e => {\n      if (\n        matches({ id: \"401\", name: \"unauthorized\" })(e.error) ||\n        e.message === \"Failed to fetch\"\n      ) {\n        return {\n          budget: sanitizeBudget(budgetDetails.budget),\n          authorized: false\n        };\n      }\n\n      throw e;\n    });\n};\n\nexport const setLastLocation = () => {\n  localStorage.setItem(LAST_LOCATION_KEY, window.location.hash);\n};\n","import styled from \"styled-components\";\n\nexport const PageTitle = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: #222;\n`;\n\nexport const LargeNumber = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: #222;\n`;\n\nexport const StrongText = styled.div`\n  font-size: 14px;\n  line-height: 22px;\n  font-weight: 500;\n  color: #222;\n`;\n\nexport const SecondaryText = styled.div`\n  font-size: 13px;\n  line-height: 21px;\n  font-weight: 400;\n  color: #666;\n`;\n\nexport const MinorText = styled.div`\n  font-size: 11px;\n  line-height: 16px;\n  font-weight: 400;\n  color: #999;\n`;\n","import React from \"react\";\nimport { StrongText, SecondaryText } from \"./typeComponents\";\n\nconst Loading = () => (\n  <div\n    style={{\n      height: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }}\n  >\n    <StrongText>Loading&hellip;</StrongText>\n    <SecondaryText>beep, beep, boop</SecondaryText>\n  </div>\n);\n\nLoading.propTypes = {};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loading from \"./Loading\";\n\nclass EnsureBudgetLoaded extends Component {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    budgetLoaded: PropTypes.bool.isRequired,\n    children: PropTypes.node.isRequired,\n    onRequestBudget: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    const { budgetId, budgetLoaded, onRequestBudget } = this.props;\n\n    if (!budgetLoaded) {\n      onRequestBudget(budgetId);\n    }\n  }\n\n  render() {\n    if (!this.props.budgetLoaded) {\n      return <Loading />\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default EnsureBudgetLoaded;\n","import tinyColor from \"tinycolor2\";\n\nexport const primaryColor = \"#4399ff\";\nexport const positiveColor = \"#2cbc2f\";\nexport const plotBandColor = \"#f2f2f2\";\nexport const negativeColor = \"red\";\nexport const selectedPlotBandColor = tinyColor(primaryColor)\n  .lighten(32)\n  .desaturate()\n  .toHexString();\nexport const lighterPrimaryColor = tinyColor(primaryColor)\n  .lighten(5)\n  .desaturate()\n  .toHexString();\nexport const lightPrimaryColor = tinyColor(primaryColor)\n  .lighten(25)\n  .desaturate()\n  .toHexString();\nexport const negativeChartColor = tinyColor(negativeColor)\n  .lighten(30)\n  .desaturate(60)\n  .toHexString();\n\nexport const iconWidth = 60;\n","import styled from \"styled-components\";\nimport { SecondaryText } from \"./typeComponents\";\nimport { primaryColor } from \"../styleVariables\";\n\nconst Button = styled(SecondaryText)`\n  display: inline-block;\n  user-select: none;\n  border: 1px solid #ccc;\n  padding: 4px 12px;\n  border-radius: 2px;\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nexport const PrimaryButton = styled(Button)`\n  background-color: ${primaryColor};\n  border-color: ${primaryColor};\n  color: #fff;\n`;\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/fp/keys\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons/faArrowLeft\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons/faBars\";\nimport { faCaretDown } from \"@fortawesome/free-solid-svg-icons/faCaretDown\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons/faChevronRight\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons/faCog\";\nimport { faEllipsisV } from \"@fortawesome/free-solid-svg-icons/faEllipsisV\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons/faEye\";\nimport { faEyeSlash } from \"@fortawesome/free-solid-svg-icons/faEyeSlash\";\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons/faPencilAlt\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons/faTimes\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nlibrary.add(\n  faArrowLeft,\n  faBars,\n  faCaretDown,\n  faChevronRight,\n  faCog,\n  faEllipsisV,\n  faEye,\n  faEyeSlash,\n  faPencilAlt,\n  faTimes\n);\n\nconst ICONS = {\n  \"arrow-left\": faArrowLeft,\n  bars: faBars,\n  \"caret-down\": faCaretDown,\n  \"chevron-right\": faChevronRight,\n  cog: faCog,\n  pencil: faPencilAlt,\n  \"ellipsis-v\": faEllipsisV,\n  eye: faEye,\n  \"eye-slash\": faEyeSlash,\n  times: faTimes\n};\n\nconst PRESET_STYLES = {\n  faded: {\n    fontWeight: 400,\n    color: \"#aaa\",\n    fontSize: 10\n  }\n};\n\nconst Icon = ({ icon, style, faded, ...other }) => (\n  <FontAwesomeIcon\n    {...other}\n    icon={ICONS[icon]}\n    style={{ ...style, ...(faded && PRESET_STYLES.faded) }}\n  />\n);\n\nIcon.propTypes = {\n  icon: PropTypes.oneOf(keys(ICONS)).isRequired,\n  faded: PropTypes.bool\n};\n\nexport default Icon;\n","export const makeLink = (path, params) =>\n  path.replace(/:([a-zA-Z]*)/g, (_, part) => params[part]);\n\nconst pages = {\n  currentMonth: {\n    path: \"/budgets/:budgetId/current\",\n    title: \"Current Month Spending\",\n    props: [\"budget\", \"currentMonth\", \"investmentAccounts\"]\n  },\n  currentMonthGroup: {\n    path: \"/budgets/:budgetId/current/:categoryGroupId\",\n    title: (params, budget) =>\n      budget.categoryGroupsById[params.categoryGroupId].name,\n    props: [\"budget\", \"currentMonth\"],\n    paramProps: [\"categoryGroupId\"],\n    breadcrumbs: [\"currentMonth\"]\n  },\n  currentMonthCategory: {\n    path: \"/budgets/:budgetId/current/:categoryGroupId/:categoryId\",\n    title: (params, budget) => budget.categoriesById[params.categoryId].name,\n    props: [\"budget\", \"currentMonth\"],\n    paramProps: [\"categoryId\", \"categoryGroupId\"],\n    breadcrumbs: [\"currentMonth\", \"currentMonthGroup\"]\n  },\n  groups: {\n    path: \"/budgets/:budgetId/groups\",\n    title: \"Spending Trends\",\n    props: [\"budget\"]\n  },\n  group: {\n    path: \"/budgets/:budgetId/groups/:categoryGroupId\",\n    title: (params, budget) =>\n      budget.categoryGroupsById[params.categoryGroupId].name,\n    props: [\"budget\"],\n    paramProps: [\"categoryGroupId\"],\n    breadcrumbs: [\"groups\"]\n  },\n  category: {\n    path: \"/budgets/:budgetId/groups/:categoryGroupId/categories/:categoryId\",\n    title: (params, budget) => budget.categoriesById[params.categoryId].name,\n    props: [\"budget\"],\n    paramProps: [\"categoryId\"],\n    breadcrumbs: [\"groups\", \"group\"]\n  },\n  categoryPayee: {\n    path:\n      \"/budgets/:budgetId/groups/:categoryGroupId/categories/:categoryId/payees/:payeeId\",\n    title: (params, budget) => budget.payeesById[params.payeeId].name,\n    props: [\"budget\"],\n    paramProps: [\"categoryId\", \"payeeId\"],\n    breadcrumbs: [\"groups\", \"group\", \"category\"]\n  },\n  income: {\n    path: \"/budgets/:budgetId/income\",\n    title: \"Income Trends\",\n    props: [\"budget\"]\n  },\n  incomeVsExpenses: {\n    path: \"/budgets/:budgetId/income-vs-expenses\",\n    title: \"Income vs Expenses\",\n    props: [\"budget\", \"investmentAccounts\"]\n  },\n  netWorth: {\n    path: \"/budgets/:budgetId/net-worth\",\n    title: \"Net Worth\",\n    props: [\"budget\", \"investmentAccounts\", \"mortgageAccounts\"]\n  },\n  investments: {\n    path: \"/budgets/:budgetId/investments\",\n    title: \"Investments\",\n    props: [\"budget\", \"investmentAccounts\"]\n  },\n  projections: {\n    path: \"/budgets/:budgetId/projections\",\n    title: \"Retirement Calculator\",\n    props: [\"budget\", \"investmentAccounts\", \"mortgageAccounts\"]\n  },\n  settings: {\n    path: \"/budgets/:budgetId/settings\",\n    title: \"Budget Settings\",\n    props: [\n      \"budget\",\n      \"investmentAccounts\",\n      \"mortgageAccounts\",\n      \"onUpdateAccounts\"\n    ]\n  }\n};\n\nexport default pages;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { matchPath } from \"react-router\";\nimport styled from \"styled-components\";\nimport pages, { makeLink } from \"../pages\";\nimport Icon from \"./Icon\";\nimport { selectedPlotBandColor, iconWidth } from \"../styleVariables\";\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n  height: 60px;\n`;\n\nconst IconWrapper = styled.div`\n  width: ${iconWidth}px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledLink = styled(NavLink)`\n  color: inherit;\n  display: flex;\n  align-items: center;\n  height: 60px;\n  padding: 0 20px;\n  background-color: ${props => props.active && selectedPlotBandColor};\n`;\n\nclass SidebarMenuContent extends PureComponent {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    hasMultipleBudgets: PropTypes.bool.isRequired,\n    location: PropTypes.string.isRequired,\n    onCloseSidebar: PropTypes.func.isRequired\n  };\n\n  render() {\n    const { budgetId, hasMultipleBudgets, location, onCloseSidebar } = this.props;\n\n    return (\n      <Fragment>\n        <PureHeader onCloseSidebar={onCloseSidebar} budgetId={budgetId} />\n        {[\n          \"currentMonth\",\n          \"groups\",\n          \"income\",\n          \"incomeVsExpenses\",\n          \"netWorth\",\n          \"investments\",\n          \"projections\"\n        ].map(page => {\n          const { path, title } = pages[page];\n\n          return (\n            <PureStyledLink\n              key={path}\n              to={makeLink(path, { budgetId })}\n              active={matchPath(location, { path })}\n              onClick={onCloseSidebar}\n            >\n              {title}\n            </PureStyledLink>\n          );\n        })}\n        {hasMultipleBudgets && (\n          <PureStyledLink to=\"/\">Switch Budgets</PureStyledLink>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nclass PureHeader extends PureComponent {\n  render() {\n    const { onCloseSidebar, budgetId } = this.props;\n    return (\n      <Header>\n        <IconWrapper onClick={onCloseSidebar}>\n          <Icon icon=\"times\" />\n        </IconWrapper>\n        <Link\n          to={makeLink(pages.settings.path, { budgetId })}\n          style={{ display: \"flex\", color: \"inherit\" }}\n          onClick={onCloseSidebar}\n        >\n          <IconWrapper>\n            <Icon icon=\"cog\" />\n          </IconWrapper>\n        </Link>\n      </Header>\n    );\n  }\n}\n\nclass PureStyledLink extends PureComponent {\n  render() {\n    return <StyledLink {...this.props} />;\n  }\n}\n\nexport default SidebarMenuContent;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Sidebar from \"react-sidebar\";\nimport { iconWidth } from \"../styleVariables\";\nimport Icon from \"./Icon\";\nimport SidebarMenuContent from \"./SidebarMenuContent\";\n\nclass SidebarMenu extends Component {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    children: PropTypes.func.isRequired,\n    hasMultipleBudgets: PropTypes.bool.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  state = { open: false };\n\n  handleSetOpen = open => {\n    this.setState({ open });\n  };\n\n  handleTriggerClick = () => {\n    this.setState({ open: true });\n  };\n\n  handleCloseSidebar = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { budgetId, children, hasMultipleBudgets, location } = this.props;\n    const { open } = this.state;\n\n    return (\n      <Sidebar\n        sidebar={\n          <SidebarMenuContent\n            budgetId={budgetId}\n            hasMultipleBudgets={hasMultipleBudgets}\n            location={location}\n            onCloseSidebar={this.handleCloseSidebar}\n          />\n        }\n        open={open}\n        onSetOpen={this.handleSetOpen}\n        styles={{\n          sidebar: {\n            backgroundColor: \"#fff\",\n            width: 280,\n            pointerEvents: !open && \"none\"\n          }\n        }}\n      >\n        {children({\n          sidebarTrigger: <Trigger onClick={this.handleTriggerClick} />\n        })}\n      </Sidebar>\n    );\n  }\n}\n\nconst Trigger = ({ onClick }) => (\n  <div\n    onClick={onClick}\n    style={{\n      alignSelf: \"stretch\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: iconWidth\n    }}\n  >\n    <Icon icon=\"bars\" />\n  </div>\n);\n\nexport default SidebarMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport EnsureBudgetLoaded from \"./EnsureBudgetLoaded\";\nimport { PrimaryButton } from \"./Button\";\nimport SidebarMenu from \"./SidebarMenu\";\n\nconst Container = styled.div`\n  height: 100%;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PageWrapper = ({\n  authorized,\n  budgetId,\n  budgetLoaded,\n  children,\n  hasMultipleBudgets,\n  location,\n  onAuthorize,\n  onRequestBudget\n}) => (\n  <EnsureBudgetLoaded\n    budgetId={budgetId}\n    budgetLoaded={budgetLoaded}\n    onRequestBudget={onRequestBudget}\n  >\n    <SidebarMenu\n      budgetId={budgetId}\n      location={location}\n      hasMultipleBudgets={hasMultipleBudgets}\n    >\n      {({ sidebarTrigger }) => (\n        <Container>\n          {children({ sidebarTrigger })}\n          {!authorized && (\n            <div\n              style={{\n                padding: \"15px 20px\",\n                backgroundColor: \"#fff\",\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                flexShrink: 0,\n                borderTop: \"1px solid #ccc\"\n              }}\n            >\n              Your authorization expired.\n              <PrimaryButton onClick={onAuthorize}>Reauthorize</PrimaryButton>\n            </div>\n          )}\n        </Container>\n      )}\n    </SidebarMenu>\n  </EnsureBudgetLoaded>\n);\n\nPageWrapper.propTypes = {\n  authorized: PropTypes.bool.isRequired,\n  budgetId: PropTypes.string.isRequired,\n  budgetLoaded: PropTypes.bool.isRequired,\n  children: PropTypes.func.isRequired,\n  hasMultipleBudgets: PropTypes.bool.isRequired,\n  location: PropTypes.string.isRequired,\n  onAuthorize: PropTypes.func.isRequired,\n  onRequestBudget: PropTypes.func.isRequired\n};\n\nexport default PageWrapper;\n","import compose from \"lodash/fp/compose\";\nimport pick from \"lodash/fp/pick\";\nimport mapRaw from \"lodash/fp/map\";\nimport get from \"lodash/fp/get\";\nimport { groupByProp, simpleMemoize, sumByProp } from \"./dataUtils\";\n\nconst map = mapRaw.convert({ cap: false });\n\nexport const isStartingBalanceOrReconciliation = simpleMemoize(budget => {\n  const startingBalancePayeeId = get(\"id\")(\n    budget.payees.find(payee => payee.name === \"Starting Balance\")\n  );\n  const reconciliationPayeeId = get(\"id\")(\n    budget.payees.find(\n      payee => payee.name === \"Reconciliation Balance Adjustment\"\n    )\n  );\n\n  return transaction =>\n    transaction.payee_id === startingBalancePayeeId ||\n    transaction.payee_id === reconciliationPayeeId;\n});\n\nexport const isIncome = simpleMemoize(budget => {\n  const toBeBudgetedId = get(\"id\")(\n    budget.categories.find(category => category.name === \"To be Budgeted\")\n  );\n  return transaction => transaction.category_id === toBeBudgetedId;\n});\n\nexport const isTransfer = (investmentAccounts = {}) => transaction =>\n  !transaction.category_id ||\n  !!investmentAccounts[transaction.transfer_account_id];\n\nexport const getTransactionMonth = transaction => transaction.date.slice(0, 7);\n\nexport const getFirstMonth = budget =>\n  budget.transactions.length\n    ? getTransactionMonth(budget.transactions[budget.transactions.length - 1])\n    : undefined;\n\nexport const getPayeeNodes = ({ payeesById, transactions }, divideBy = 1) =>\n  compose([\n    map((transactions, payeeId) => ({\n      ...(payeesById[payeeId]\n        ? pick([\"id\", \"name\"])(payeesById[payeeId])\n        : { id: \"no-payee\", name: \"(no payee)\" }),\n      amount: sumByProp(\"amount\")(transactions) / divideBy\n    })),\n    groupByProp(\"payee_id\")\n  ])(transactions);\n\nexport const sanitizeName = name => name.replace(/[^a-zA-Z0-9 ]/g, \"\").trim();\n","import { useRef, useState } from \"react\";\nimport moment from \"moment\";\nimport { getSetting, setSetting } from \"./uiRepo\";\nimport { getFirstMonth } from \"./budgetUtils\";\n\nconst MAX_MONTHS_TO_COMPARE = 12;\n\nexport const useSelectedMonth = () => {\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const selectedMonthRef = useRef(selectedMonth);\n  selectedMonthRef.current = selectedMonth;\n\n  const onSelectMonth = month => {\n    setSelectedMonth(month === selectedMonthRef.current ? null : month);\n  };\n\n  return [selectedMonth, onSelectMonth];\n};\n\nexport const useSelectedEntityId = () => {\n  const [selectedEntityId, setSelectedEntityId] = useState(null);\n  const onSelectEntityId = entityId => {\n    setSelectedEntityId(entityId === selectedEntityId ? null : entityId);\n  };\n\n  return [selectedEntityId, onSelectEntityId];\n};\n\nexport const useTrendsShowAverage = budgetId => {\n  const [showAverage, setShowAverage] = useState(\n    getSetting(\"trendsShowAverage\", budgetId)\n  );\n  const onToggleShowAverage = () => {\n    setShowAverage(!showAverage);\n    setSetting(\"trendsShowAverage\", budgetId, !showAverage);\n  };\n\n  return [showAverage, onToggleShowAverage];\n};\n\nconst getMonths = (firstMonth, lastMonth) => {\n  const months = [firstMonth];\n  let m = firstMonth;\n\n  while (m !== lastMonth) {\n    m = moment(m)\n      .add(1, \"months\")\n      .format(\"YYYY-MM\");\n    months.push(m);\n  }\n\n  return months;\n};\n\nexport const useMonthExclusions = budget => {\n  const [excludeFirstMonth, setExcludeFirstMonth] = useState(\n    getSetting(\"excludeFirstMonth\", budget.id)\n  );\n  const [excludeLastMonth, setExcludeLastMonth] = useState(\n    getSetting(\"excludeLastMonth\", budget.id)\n  );\n\n  const firstBudgetMonth = getFirstMonth(budget);\n  const firstMonth = excludeFirstMonth\n    ? moment(firstBudgetMonth)\n        .add(1, \"months\")\n        .format(\"YYYY-MM\")\n    : firstBudgetMonth;\n  const lastMonth = excludeLastMonth\n    ? moment()\n        .subtract(1, \"months\")\n        .format(\"YYYY-MM\")\n    : moment().format(\"YYYY-MM\");\n  const months = getMonths(firstMonth, lastMonth);\n\n  const onSetExclusion = ({ month, exclude }) => {\n    if (month === \"first\") {\n      setExcludeFirstMonth(exclude);\n      setSetting(\"excludeFirstMonth\", budget.id, exclude);\n    } else {\n      setExcludeLastMonth(exclude);\n      setSetting(\"excludeLastMonth\", budget.id, exclude);\n    }\n  };\n\n  return { excludeFirstMonth, excludeLastMonth, months, onSetExclusion };\n};\n\nexport const useMonthsToCompare = budgetId => {\n  const [monthsToCompare, setMonthsToCompare] = useState(\n    getSetting(\"spendingMonthsToCompare\", budgetId)\n  );\n\n  const onDecrementMonths = () => {\n    const newMonths = Math.max(monthsToCompare - 1, 0);\n    setMonthsToCompare(newMonths);\n    setSetting(\"spendingMonthsToCompare\", budgetId, newMonths);\n  };\n\n  const onIncrementMonths = () => {\n    const newMonths = Math.min(monthsToCompare + 1, MAX_MONTHS_TO_COMPARE);\n    setMonthsToCompare(newMonths);\n    setSetting(\"spendingMonthsToCompare\", budgetId, newMonths);\n  };\n\n  return { monthsToCompare, onDecrementMonths, onIncrementMonths };\n};\n\nexport const useFlagState = initial => {\n  const [flag, setFlag] = useState(initial);\n\n  return [\n    flag,\n    () => {\n      setFlag(false);\n    },\n    () => {\n      setFlag(true);\n    },\n    () => {\n      setFlag(!flag);\n    }\n  ];\n};\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Scroller extends Component {\n  static propTypes = {\n    action: PropTypes.string.isRequired,\n    children: PropTypes.func.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  toBeScrolled = null;\n\n  raf = null;\n\n  scrollPositions = {};\n\n  getSnapshotBeforeUpdate() {\n    return { scrollTop: this.toBeScrolled.scrollTop };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { action, location } = this.props;\n\n    if (location === prevProps.location) {\n      return;\n    }\n\n    if (action === \"POP\") {\n      this.scrollPositions[prevProps.location] = snapshot.scrollTop;\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = this.scrollPositions[location] || 0;\n      });\n    }\n\n    if (action === \"PUSH\") {\n      this.scrollPositions[prevProps.location] = snapshot.scrollTop;\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = 0;\n      });\n    }\n\n    if (action === \"REPLACE\") {\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = 0;\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.raf);\n  }\n\n  render() {\n    return this.props.children({\n      ref: el => {\n        this.toBeScrolled = el;\n      }\n    });\n  }\n}\n\nexport default Scroller;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport values from \"lodash/fp/values\";\nimport pages, { makeLink } from \"../pages\";\nimport { MinorText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\n\nconst routes = values(pages)\n  .filter(page => !!page.breadcrumbs)\n  .map(page => ({\n    path: page.path,\n    breadcrumbs: page.breadcrumbs.map(pageKey => ({\n      title: pages[pageKey].title,\n      path: pages[pageKey].path\n    }))\n  }));\n\nconst PageBreadcrumbs = ({ budget }) =>\n  budget ? (\n    <Switch>\n      {routes.map(({ path, breadcrumbs }) => (\n        <Route\n          key={path}\n          path={path}\n          exact\n          render={props => (\n            <MinorText style={{ lineHeight: 1, whiteSpace: \"normal\" }}>\n              {breadcrumbs.map(({ title, path }, index) => (\n                <Fragment key={path}>\n                  <Link\n                    to={makeLink(path, props.match.params)}\n                    style={{\n                      paddingBottom: 8,\n                      display: \"inline-block\"\n                    }}\n                  >\n                    {typeof title === \"function\"\n                      ? title(props.match.params, budget)\n                      : title}\n                  </Link>\n                  {index !== breadcrumbs.length - 1 && (\n                    <Icon\n                      icon=\"chevron-right\"\n                      style={{ padding: \"0 5px\", fontSize: 8 }}\n                    />\n                  )}\n                </Fragment>\n              ))}\n            </MinorText>\n          )}\n        />\n      ))}\n    </Switch>\n  ) : null;\n\nPageBreadcrumbs.propTypes = {\n  budget: PropTypes.object\n};\n\nexport default PageBreadcrumbs;\n","import React from \"react\";\nimport pages, { makeLink } from \"../pages\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { SecondaryText } from \"./typeComponents\";\n\nconst PageActions = () => (\n  <Switch>\n    <Route\n      path={pages.currentMonth.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.groups.path, match.params)}>\n            Past Months\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.currentMonthGroup.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.group.path, match.params)}>Past Months</Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.currentMonthCategory.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.category.path, match.params)}>\n            Past Months\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.groups.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonth.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.group.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonthGroup.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.category.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonthCategory.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n  </Switch>\n);\n\nPageActions.propTypes = {};\n\nexport default PageActions;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { PageTitle } from \"./typeComponents\";\nimport Scroller from \"./Scroller\";\nimport PageBreadcrumbs from \"./PageBreadcrumbs\";\nimport PageActions from \"./PageActions\";\n\nconst Header = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  height: 60px;\n  padding-left: 0;\n  padding-right: 20px;\n  background-color: #fff;\n  background-clip: padding-box;\n  border-bottom: 2px solid rgba(0, 0, 0, 0.1);\n  white-space: pre;\n  user-select: none;\n`;\n\nconst Body = styled.div`\n  flex-grow: 1;\n  overflow-y: auto;\n`;\n\nconst PageLayout = ({\n  sidebarTrigger, // from PageWrapper\n  historyAction, // from PageWrapper\n  location, // from PageWrapper\n  budget,\n  title,\n  breadcrumbs,\n  fixedContent,\n  content\n}) => (\n  <Fragment>\n    <Header>\n      {sidebarTrigger}\n      <div style={{ flexGrow: 1 }}>\n        <PageBreadcrumbs budget={budget} />\n        <PageTitle style={{ lineHeight: 1 }}>{title}</PageTitle>\n      </div>\n      <PageActions />\n    </Header>\n    {fixedContent}\n    <Scroller action={historyAction} location={location}>\n      {({ ref }) => <Body ref={ref}>{content}</Body>}\n    </Scroller>\n  </Fragment>\n);\n\nPageLayout.propTypes = {\n  sidebarTrigger: PropTypes.node.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  budget: PropTypes.object,\n  breadcrumbs: PropTypes.node,\n  fixedContent: PropTypes.node,\n  content: PropTypes.node\n};\n\nexport default PageLayout;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { StrongText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\n\nconst Container = styled.div`\n  margin: ${props => (props.fullWidth ? \"0\" : \"2px\")};\n  background-color: #fff;\n  background-clip: padding-box;\n  border: ${props => (props.fullWidth ? \"0\" : \"1px\")} solid rgba(0, 0, 0, 0.05);\n  border-bottom-width: 1px;\n  border-radius: 2px;\n`;\n\nconst Header = styled(StrongText)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px 20px;\n  user-select: none;\n`;\n\nconst SettingsContainer = styled.div`\n  padding: 0 10px;\n  margin-right: -10px;\n  align-self: stretch;\n  display: flex;\n  align-items: center;\n  margin-left: 5px;\n`;\n\nconst Body = styled.div`\n  padding: 0 ${props => (props.fullWidth ? \"22px\" : \"20px\")} 15px;\n`;\n\nconst CollapsibleSection = ({\n  actions,\n  children,\n  fullWidth,\n  hasSettings,\n  noPadding,\n  title,\n  onClickSettings\n}) => {\n  const [expanded, setExpanded] = useState(true);\n\n  return (\n    <Container fullWidth={fullWidth}>\n      <Header>\n        <div\n          style={{ display: \"flex\", alignItems: \"center\" }}\n          onClick={() => {\n            setExpanded(!expanded);\n          }}\n        >\n          {title}\n          <Icon\n            icon=\"chevron-right\"\n            transform={{ rotate: expanded ? 90 : 0 }}\n            style={{ marginLeft: 10 }}\n            faded\n          />\n        </div>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          {expanded && actions}\n          {hasSettings &&\n            expanded && (\n              <SettingsContainer onClick={onClickSettings}>\n                <Icon icon=\"cog\" faded />\n              </SettingsContainer>\n            )}\n        </div>\n      </Header>\n      <AnimateHeight isExpanded={expanded}>\n        <Body style={{ padding: noPadding && 0 }}>{children}</Body>\n      </AnimateHeight>\n    </Container>\n  );\n};\n\nCollapsibleSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  actions: PropTypes.node,\n  fullWidth: PropTypes.bool,\n  hasSettings: PropTypes.bool,\n  noPadding: PropTypes.bool,\n  onClickSettings: PropTypes.func\n};\n\nexport default CollapsibleSection;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst CHART_DEFAULTS = {\n  chart: { height: 240, spacing: [0, 0, 0, 0] },\n  credits: { enabled: false },\n  legend: { enabled: false },\n  title: { text: \"\" },\n  subtitle: { text: \"\" },\n  tooltip: { enabled: false },\n  xAxis: { tickLength: 0 }\n};\n\nconst Chart = ({ options }) => (\n  <HighchartsReact\n    highcharts={Highcharts}\n    options={{\n      ...CHART_DEFAULTS,\n      ...options,\n      chart: { ...CHART_DEFAULTS.chart, ...options.chart },\n      xAxis: { ...CHART_DEFAULTS.xAxis, ...options.xAxis }\n    }}\n  />\n);\n\nChart.propTypes = {\n  options: PropTypes.object\n};\n\nexport default Chart;\n","import React from \"react\";\n\nconst CurrencyContext = React.createContext();\n\nexport default CurrencyContext;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport get from \"lodash/fp/get\";\nimport { positiveColor, negativeColor } from \"../styleVariables\";\nimport CurrencyContext from \"./CurrencyContext\";\n\nexport const addCommas = nStr => {\n  nStr += \"\";\n\n  const x = nStr.split(\".\");\n  let x1 = x[0];\n  const x2 = x.length > 1 ? \".\" + x[1] : \"\";\n  const rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, \"$1,$2\");\n  }\n  return x1 + x2;\n};\n\nconst Amount = ({\n  amount,\n  amountAfterDecimal,\n  positiveIsRed,\n  showCurrencySymbol,\n  style\n}) => (\n  <CurrencyContext.Consumer>\n    {currencyFormat => (\n      <span\n        style={{\n          ...style,\n          color: amount > 0 && (positiveIsRed ? negativeColor : positiveColor)\n        }}\n      >\n        {amount > 0 && (positiveIsRed ? \"-\" : \"+\")}\n        {showCurrencySymbol && (get(\"symbol\")(currencyFormat) || \"$\")}\n        {addCommas(Math.abs(amount).toFixed(amountAfterDecimal))}\n      </span>\n    )}\n  </CurrencyContext.Consumer>\n);\n\nAmount.propTypes = {\n  amount: PropTypes.number.isRequired,\n  amountAfterDecimal: PropTypes.number,\n  positiveIsRed: PropTypes.bool,\n  showCurrencySymbol: PropTypes.bool,\n  style: PropTypes.object\n};\n\nAmount.defaultProps = {\n  amountAfterDecimal: 2\n};\n\nexport default Amount;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport isNumber from \"lodash/fp/isNumber\";\nimport { MinorText, LargeNumber } from \"./typeComponents\";\nimport Amount from \"./Amount\";\n\nconst ChartNumbers = ({ numbers, alwaysRound }) => {\n  const smallNumbers = numbers.some(({ amount }) => Math.abs(amount) < 100);\n  return (\n    <div\n      style={{\n        textAlign: \"right\",\n        lineHeight: \"16px\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        flexDirection: \"row-reverse\",\n        marginBottom: 8\n      }}\n    >\n      {numbers.map(({ amount, label, isMoney = true, decimalsToRound }) => (\n        <div key={label} style={{ marginLeft: 20 }}>\n          <LargeNumber style={{ lineHeight: \"16px\" }}>\n            <Amount\n              amount={amount}\n              amountAfterDecimal={\n                isNumber(decimalsToRound)\n                  ? decimalsToRound\n                  : smallNumbers && !alwaysRound\n                    ? 2\n                    : 0\n              }\n              showCurrencySymbol={isMoney}\n              positiveIsRed\n            />\n          </LargeNumber>\n          <MinorText>{label}</MinorText>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nChartNumbers.propTypes = {\n  numbers: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      label: PropTypes.string.isRequired,\n      alwaysRound: PropTypes.bool,\n      decimalsToRound: PropTypes.number,\n      isMoney: PropTypes.bool\n    })\n  ).isRequired,\n  alwaysRound: PropTypes.bool\n};\n\nexport default ChartNumbers;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport tinyColor from \"tinycolor2\";\nimport compose from \"lodash/fp/compose\";\nimport isNumber from \"lodash/fp/isNumber\";\nimport padCharsStart from \"lodash/fp/padCharsStart\";\nimport range from \"lodash/fp/range\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport { groupByProp, sumByProp } from \"../dataUtils\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport { primaryColor, plotBandColor } from \"../styleVariables\";\nimport { MinorText } from \"./typeComponents\";\nimport Chart from \"./Chart\";\nimport ChartNumbers from \"./ChartNumbers\";\n\nconst DateLabels = styled.div`\n  border-top: 1px solid #ddd;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst getData = ({ month, transactionsByDate }) => {\n  const today = moment().format(\"YYYY-MM-DD\");\n  let cumulative = 0;\n  return range(-1, moment(month).daysInMonth()).map(numDays => {\n    const date =\n      numDays === -1\n        ? moment(month).add(-1, \"days\")\n        : `${month}-${padCharsStart(\"0\")(2)(numDays + 1)}`;\n\n    if (date > today) {\n      return null;\n    }\n\n    cumulative += -sumBy(\"amount\")(transactionsByDate[date] || []);\n\n    return cumulative;\n  });\n};\n\nclass SpendingChart extends PureComponent {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    currentMonth: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        date: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    total: PropTypes.number\n  };\n\n  render() {\n    const {\n      total,\n      transactions,\n      highlightFunction,\n      currentMonth,\n      monthsToCompare\n    } = this.props;\n\n    const highlightedTransactions = highlightFunction\n      ? transactions.filter(highlightFunction)\n      : [];\n    const highlightData = getData({\n      month: currentMonth,\n      transactionsByDate: groupByProp(\"date\")(highlightedTransactions)\n    });\n    const highlightSeries = {\n      type: \"areaspline\",\n      data: highlightData,\n      enableMouseTracking: false,\n      marker: { enabled: false },\n      animation: false,\n      color: primaryColor,\n      lineWidth: 0,\n      fillOpacity: 0.8\n    };\n    const daysInMonth = moment(currentMonth).daysInMonth();\n    const firstDate = moment(currentMonth).add(-1, \"days\");\n    const lastDate = moment(currentMonth).add(daysInMonth - 1, \"days\");\n\n    const transactionsByDate = groupByProp(\"date\")(transactions);\n    const data = getData({ month: currentMonth, transactionsByDate });\n    const lineData = range(0, daysInMonth + 1).map(\n      day => (day / daysInMonth) * total\n    );\n    const firstDayOfWeek = parseInt(firstDate.format(\"d\"), 10);\n    const plotBands = range(0, 6).map(num => ({\n      color: plotBandColor,\n      from: num * 7 - 1.5 - firstDayOfWeek,\n      to: num * 7 + 0.5 - firstDayOfWeek\n    }));\n\n    const comparisonSeries = range(monthsToCompare, 0).map(numMonths => ({\n      type: \"spline\",\n      data: getData({\n        month: moment(currentMonth)\n          .subtract(numMonths, \"months\")\n          .format(\"YYYY-MM\"),\n        transactionsByDate\n      }),\n      enableMouseTracking: false,\n      color:\n        \"#\" +\n        tinyColor\n          .mix(\n            primaryColor,\n            \"#f2f2f2\",\n            30 + ((numMonths - 1) * 70) / monthsToCompare\n          )\n          .toHex(),\n      lineWidth: 1,\n      marker: { enabled: false },\n      animation: false\n    }));\n\n    const spent = compose([\n      sumByProp(\"amount\"),\n      takeWhile(\n        transaction => getTransactionMonth(transaction) === currentMonth\n      )\n    ])(transactions);\n    const chartNumbers = [{ amount: spent, label: \"spent\" }];\n    if (isNumber(total)) {\n      chartNumbers.push({ amount: -(total + spent), label: \"available\" });\n    }\n\n    return (\n      <Fragment>\n        <ChartNumbers numbers={chartNumbers} />\n        <Chart\n          key={monthsToCompare}\n          options={{\n            chart: { spacing: [0, 0, 0, 0], height: 140, animation: false },\n            xAxis: {\n              labels: { enabled: false },\n              plotBands\n            },\n            yAxis: { visible: false, endOnTick: false, startOnTick: false },\n            series: [\n              {\n                type: \"line\",\n                color: \"#aaa\",\n                dashStyle: \"Dot\",\n                lineWidth: 1,\n                data: lineData,\n                enableMouseTracking: false,\n                marker: { enabled: false },\n                animation: false\n              },\n              ...comparisonSeries,\n              {\n                type: \"spline\",\n                data,\n                enableMouseTracking: false,\n                color: primaryColor,\n                marker: { enabled: false },\n                animation: false,\n                ...(highlightFunction && {\n                  type: \"areaspline\",\n                  fillOpacity: 0.2\n                })\n              },\n              highlightSeries\n            ]\n          }}\n        />\n        <DateLabels>\n          <MinorText>{firstDate.format(\"MMM D\")}</MinorText>\n          <MinorText>{lastDate.format(\"MMM D\")}</MinorText>\n        </DateLabels>\n      </Fragment>\n    );\n  }\n}\n\nexport default SpendingChart;\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { StrongText } from \"./typeComponents\";\nimport { PrimaryButton } from \"./Button\";\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  opacity: 0;\n  transition: opacity 0.2s ease-in-out;\n`;\n\nconst ModalContent = styled.div`\n  position: relative;\n  min-width: 200px;\n  padding: 15px 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  background-color: #fff;\n  border-radius: 2px;\n  transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out;\n`;\n\nconst ensureNextTick = callback =>\n  requestAnimationFrame(() => {\n    requestAnimationFrame(callback);\n  });\n\nclass Modal extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    width: PropTypes.number\n  };\n\n  constructor() {\n    super();\n    this.el = document.createElement(\"div\");\n    this.state = { animationState: \"left\" };\n  }\n\n  componentDidMount() {\n    document.body.appendChild(this.el);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.open && this.props.open) {\n      ensureNextTick(() => {\n        this.setState({ animationState: \"entering\" });\n      });\n    }\n    if (prevProps.open && !this.props.open) {\n      ensureNextTick(() => {\n        this.setState({ animationState: \"leaving\" });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.el);\n  }\n\n  handleTransitionEnd = () => {\n    const { animationState } = this.state;\n\n    if (animationState === \"entering\") {\n      this.setState({ animationState: \"entered\" });\n    } else if (animationState === \"leaving\") {\n      this.setState({ animationState: \"left\" });\n    }\n  };\n\n  render() {\n    const { open, children, title, onClose, width } = this.props;\n    const { animationState } = this.state;\n\n    if (!open && animationState === \"left\") {\n      return null;\n    }\n\n    const shouldShow = [\"entering\", \"entered\"].includes(animationState);\n\n    return createPortal(\n      <Container>\n        <Overlay\n          onClick={onClose}\n          style={{ opacity: shouldShow ? 1 : 0 }}\n          onTransitionEnd={this.handleTransitionEnd}\n        />\n        <ModalContent\n          style={{\n            opacity: shouldShow ? 1 : 0,\n            transform: `translate3d(0, ${shouldShow ? \"0\" : \"20px\"}, 0)`,\n            width\n          }}\n        >\n          {title && (\n            <StrongText style={{ marginBottom: 10 }}>{title}</StrongText>\n          )}\n          {children}\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              marginTop: 20\n            }}\n          >\n            <PrimaryButton onClick={onClose}>Done</PrimaryButton>\n          </div>\n        </ModalContent>\n      </Container>,\n      this.el\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"./Modal\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Button from \"./Button\";\n\nconst ChartSettingsModal = ({\n  open,\n  monthsToCompare,\n  onClose,\n  onDecrementMonths,\n  onIncrementMonths\n}) => (\n  <Modal open={open} title=\"Chart Settings\" onClose={onClose}>\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <div style={{ marginRight: 10 }}>\n        <Button onClick={onDecrementMonths}>-</Button>\n        <Button onClick={onIncrementMonths}>+</Button>\n      </div>\n      <SecondaryText>\n        Compare with the last {monthsToCompare} month\n        {monthsToCompare === 1 ? \"\" : \"s\"}\n      </SecondaryText>\n    </div>\n  </Modal>\n);\n\nChartSettingsModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  monthsToCompare: PropTypes.number.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onDecrementMonths: PropTypes.func.isRequired,\n  onIncrementMonths: PropTypes.func.isRequired\n};\n\nexport default ChartSettingsModal;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useMonthsToCompare, useFlagState } from \"../commonHooks\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport SpendingChart from \"./SpendingChart\";\nimport ChartSettingsModal from \"./ChartSettingsModal\";\n\nconst DayByDaySection = ({\n  actions,\n  budgetId,\n  currentMonth,\n  highlightFunction,\n  title,\n  total,\n  transactions\n}) => {\n  const [modalOpen, onCloseModal, onOpenModal] = useFlagState(false);\n  const {\n    monthsToCompare,\n    onIncrementMonths,\n    onDecrementMonths\n  } = useMonthsToCompare(budgetId);\n\n  return (\n    <Fragment>\n      <CollapsibleSection\n        actions={actions}\n        title={title}\n        hasSettings\n        onClickSettings={onOpenModal}\n      >\n        <SpendingChart\n          budgetId={budgetId}\n          currentMonth={currentMonth}\n          highlightFunction={highlightFunction}\n          monthsToCompare={monthsToCompare}\n          total={total}\n          transactions={transactions}\n        />\n      </CollapsibleSection>\n      <ChartSettingsModal\n        open={modalOpen}\n        monthsToCompare={monthsToCompare}\n        onClose={onCloseModal}\n        onDecrementMonths={onDecrementMonths}\n        onIncrementMonths={onIncrementMonths}\n      />\n    </Fragment>\n  );\n};\n\nDayByDaySection.propTypes = {\n  budgetId: PropTypes.string.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  transactions: PropTypes.array.isRequired,\n  actions: PropTypes.node,\n  highlightFunction: PropTypes.func,\n  title: PropTypes.string,\n  total: PropTypes.number\n};\n\nDayByDaySection.defaultProps = { title: \"Day by Day\" };\n\nexport default DayByDaySection;\n","import styled from \"styled-components\";\n\nconst ListItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 0;\n  user-select: none;\n\n  &:first-child {\n    padding-top: ${props => !props.isContinuing && 0};\n  }\n`;\n\nexport default ListItem;\n","import styled from \"styled-components\";\nimport { SecondaryText } from \"./typeComponents\";\n\nconst EmptyText = styled(SecondaryText)`\n  text-align: center;\n  margin: 10px;\n  opacity: 0.5;\n`;\n\nexport default EmptyText;\n","import React from \"react\";\nimport EmptyText from \"./EmptyText\";\n\nconst NoTransactions = () => <EmptyText>No transactions this month</EmptyText>;\n\nexport default NoTransactions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\n\nconst LabelWithMinorText = ({ label, minorText, inLink, to, bold }) => (\n  <SecondaryText\n    style={{\n      fontWeight: bold && 700,\n      display: \"flex\",\n      alignItems: \"baseline\",\n      whiteSpace: \"pre\",\n      overflow: \"hidden\",\n      color: inLink && \"inherit\"\n    }}\n  >\n    {to ? <Link to={to}>{label}</Link> : label}\n    {minorText && (\n      <MinorText\n        style={{\n          fontWeight: bold && 700,\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\"\n        }}\n      >\n        &nbsp;&ndash; {minorText}\n      </MinorText>\n    )}\n  </SecondaryText>\n);\n\nLabelWithMinorText.propTypes = {\n  label: PropTypes.string.isRequired,\n  bold: PropTypes.bool,\n  inLink: PropTypes.bool,\n  minorText: PropTypes.string,\n  to: PropTypes.string\n};\n\nexport default LabelWithMinorText;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LabelWithMinorText from \"./LabelWithMinorText\";\n\nconst LabelWithTransactionCount = ({\n  label,\n  count,\n  inLink,\n  selected,\n  showCount,\n  to\n}) => (\n  <LabelWithMinorText\n    bold={selected}\n    label={label}\n    minorText={showCount && `${count} transaction${count === 1 ? \"\" : \"s\"}`}\n    inLink={inLink}\n    to={to}\n  />\n);\n\nLabelWithTransactionCount.propTypes = {\n  count: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n  inLink: PropTypes.bool,\n  selected: PropTypes.bool,\n  showCount: PropTypes.bool,\n  to: PropTypes.string\n};\n\nLabelWithTransactionCount.defaultProps = { showCount: true };\n\nexport default LabelWithTransactionCount;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\n\nconst AmountWithPercentage = ({\n  amount,\n  positiveIsRed,\n  total,\n  faded,\n  selected\n}) => (\n  <SecondaryText\n    style={{\n      display: \"flex\",\n      alignItems: \"baseline\",\n      opacity: faded ? 0.3 : 1,\n      fontWeight: selected && 700\n    }}\n  >\n    <Amount amount={amount} positiveIsRed={positiveIsRed} />\n    <MinorText\n      style={{ width: 44, textAlign: \"right\", fontWeight: selected && 700 }}\n    >\n      {total ? `${((amount / total) * 100).toFixed(1)}%` : `–`}\n    </MinorText>\n  </SecondaryText>\n);\n\nAmountWithPercentage.propTypes = {\n  amount: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveIsRed: PropTypes.bool,\n  faded: PropTypes.bool,\n  selected: PropTypes.bool\n};\n\nexport default AmountWithPercentage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MinorText } from \"./typeComponents\";\n\nconst SeeAll = ({ count, pluralizedName, showAll, onToggle }) => (\n  <MinorText style={{ textAlign: \"center\", marginTop: 5 }} onClick={onToggle}>\n    {showAll ? \"see less\" : `see all ${count} ${pluralizedName}`}\n  </MinorText>\n);\n\nSeeAll.propTypes = {\n  count: PropTypes.number.isRequired,\n  pluralizedName: PropTypes.string.isRequired,\n  showAll: PropTypes.bool.isRequired,\n  onToggle: PropTypes.func.isRequired\n};\n\nexport default SeeAll;\n","import React, { Component, PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport get from \"lodash/fp/get\";\nimport map from \"lodash/fp/map\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { groupBy, groupByProp, sumByProp } from \"../dataUtils\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { Link } from \"react-router-dom\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport { SecondaryText } from \"./typeComponents\";\nimport ListItem from \"./ListItem\";\nimport NoTransactions from \"./NoTransactions\";\nimport LabelWithTransactionCount from \"./LabelWithTransactionCount\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\nimport SeeAll from \"./SeeAll\";\n\nconst mapWithKeys = map.convert({ cap: false });\nconst LIMIT = 5;\n\nconst keyToPluralizedName = {\n  category_group_id: \"category groups\",\n  category_id: \"categories\",\n  payee_id: \"payees\"\n};\n\nclass GenericEntitiesSection extends Component {\n  static propTypes = {\n    entitiesById: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    entityKey: PropTypes.oneOf([\n      \"category_id\",\n      \"category_group_id\",\n      \"payee_id\"\n    ]),\n    emptyName: PropTypes.string,\n    entityFunction: PropTypes.func,\n    positiveIsRed: PropTypes.bool,\n    linkFunction: PropTypes.func,\n    limitShowing: PropTypes.bool,\n    numMonths: PropTypes.number,\n    selectedEntityId: PropTypes.string,\n    showAverage: PropTypes.bool,\n    showAverageToggle: PropTypes.bool,\n    showTransactionCount: PropTypes.bool,\n    onClickEntity: PropTypes.func,\n    onToggleAverage: PropTypes.func\n  };\n\n  static defaultProps = { emptyName: \"(none)\" };\n\n  state = { showAll: false, allMounted: false };\n\n  handleToggleShowAll = () => {\n    const { allMounted, showAll } = this.state;\n    if (allMounted) {\n      this.setState({ showAll: !showAll });\n    } else {\n      this.setState({ allMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ showAll: true });\n      });\n    }\n  };\n\n  render() {\n    const {\n      emptyName,\n      entityKey,\n      entityFunction,\n      entitiesById,\n      positiveIsRed,\n      linkFunction,\n      limitShowing: limitShowingProp,\n      numMonths,\n      selectedEntityId,\n      showAverage,\n      showAverageToggle,\n      showTransactionCount,\n      title,\n      transactions,\n      onClickEntity,\n      onToggleAverage\n    } = this.props;\n    const { allMounted, showAll } = this.state;\n    let total = 0;\n    const entities = compose([\n      sortBy(\"amount\"),\n      mapWithKeys((transactions, entityId) => {\n        const amount = sumByProp(\"amount\")(transactions);\n        total += amount;\n\n        return {\n          entityId,\n          transactions: transactions.length,\n          amount\n        };\n      }),\n      entityFunction ? groupBy(entityFunction) : groupByProp(entityKey)\n    ])(transactions);\n\n    const limitShowing = limitShowingProp && entities.length > LIMIT + 1;\n    const topEntities = entities.slice(0, LIMIT);\n    const otherEntities = entities.slice(LIMIT);\n\n    return (\n      <CollapsibleSection\n        title={title}\n        actions={\n          showAverageToggle && (\n            <SecondaryText onClick={onToggleAverage}>\n              {showAverage ? \"average\" : \"total\"}\n            </SecondaryText>\n          )\n        }\n      >\n        {entities.length === 0 && <NoTransactions />}\n        {(limitShowing ? topEntities : entities).map(\n          ({ entityId, transactions, amount }) => (\n            <GenericItemLink\n              key={entityId}\n              showTransactionCount={showTransactionCount}\n              to={\n                linkFunction && !!entitiesById[entityId]\n                  ? linkFunction(entityId)\n                  : null\n              }\n              transactions={transactions}\n              name={get(\"name\")(entitiesById[entityId]) || emptyName}\n              amount={showAverage ? amount / numMonths : amount}\n              positiveIsRed={positiveIsRed}\n              selected={entityId === selectedEntityId}\n              total={showAverage ? total / numMonths : total}\n              id={entityId}\n              onClick={onClickEntity}\n            />\n          )\n        )}\n        {allMounted && (\n          <AnimateHeight isExpanded={showAll}>\n            <Fragment>\n              {otherEntities.map(({ entityId, transactions, amount }) => (\n                <GenericItemLink\n                  key={entityId}\n                  showTransactionCount={showTransactionCount}\n                  to={\n                    linkFunction && !!entitiesById[entityId]\n                      ? linkFunction(entityId)\n                      : null\n                  }\n                  transactions={transactions}\n                  name={get(\"name\")(entitiesById[entityId]) || emptyName}\n                  amount={showAverage ? amount / numMonths : amount}\n                  positiveIsRed={positiveIsRed}\n                  selected={entityId === selectedEntityId}\n                  total={total}\n                  id={entityId}\n                  onClick={onClickEntity}\n                  isContinuing\n                />\n              ))}\n            </Fragment>\n          </AnimateHeight>\n        )}\n        {!!otherEntities.length &&\n          limitShowing && (\n            <SeeAll\n              count={entities.length}\n              pluralizedName={keyToPluralizedName[entityKey]}\n              showAll={showAll}\n              onToggle={this.handleToggleShowAll}\n            />\n          )}\n      </CollapsibleSection>\n    );\n  }\n}\n\nconst MaybeLink = ({ to, children, ...other }) =>\n  to ? (\n    <Link {...other} to={to}>\n      {children}\n    </Link>\n  ) : (\n    <span {...other}>{children}</span>\n  );\n\nclass GenericItemLink extends PureComponent {\n  render() {\n    const {\n      showTransactionCount,\n      to,\n      transactions,\n      name,\n      amount,\n      positiveIsRed,\n      total,\n      selected,\n      id,\n      onClick,\n      isContinuing\n    } = this.props;\n    return (\n      <ListItem\n        isContinuing={isContinuing}\n        onClick={onClick && (() => onClick(id))}\n      >\n        {showTransactionCount ? (\n          <LabelWithTransactionCount\n            count={transactions}\n            label={name}\n            selected={selected}\n            to={to}\n          />\n        ) : (\n          <MaybeLink\n            to={to}\n            onClick={\n              to &&\n              (evt => {\n                evt.stopPropagation();\n              })\n            }\n          >\n            <SecondaryText\n              style={{\n                whiteSpace: \"pre\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                color: \"inherit\",\n                fontWeight: selected && 700\n              }}\n            >\n              {name}\n            </SecondaryText>\n          </MaybeLink>\n        )}\n        <AmountWithPercentage\n          amount={amount}\n          positiveIsRed={positiveIsRed}\n          selected={selected}\n          total={total}\n        />\n      </ListItem>\n    );\n  }\n}\n\nGenericItemLink.propTypes = {\n  amount: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  total: PropTypes.number.isRequired,\n  transactions: PropTypes.number.isRequired,\n  id: PropTypes.string,\n  isContinuing: PropTypes.bool,\n  selected: PropTypes.bool,\n  showTransactionCount: PropTypes.bool,\n  to: PropTypes.string\n};\n\nexport default GenericEntitiesSection;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport get from \"lodash/fp/get\";\nimport { SecondaryText } from \"./typeComponents\";\nimport ListItem from \"./ListItem\";\nimport Amount from \"./Amount\";\nimport LabelWithMinorText from \"./LabelWithMinorText\";\n\nconst StyledListItem = styled(ListItem)`\n  border-top: 0;\n  padding-bottom: 0;\n`;\n\nconst DateSummaryTransaction = ({ category, payee, memo, amount }) => (\n  <StyledListItem isContinuing>\n    <div style={{ overflow: \"hidden\" }}>\n      <LabelWithMinorText\n        label={get(\"name\")(payee) || \"(no payee)\"}\n        minorText={\n          get(\"name\")(category) || \"(no category)\" + (memo ? ` (${memo})` : \"\")\n        }\n      />\n    </div>\n    <SecondaryText>\n      <Amount amount={amount} />\n    </SecondaryText>\n  </StyledListItem>\n);\n\nDateSummaryTransaction.propTypes = {\n  amount: PropTypes.number.isRequired,\n  category: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  }),\n  isContinuing: PropTypes.bool,\n  memo: PropTypes.string,\n  payee: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })\n};\n\nexport default DateSummaryTransaction;\n","import React from \"react\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\nimport Amount from \"./Amount\";\nimport styled from \"styled-components\";\nimport ListItem from \"./ListItem\";\n\nconst INDENTATION = 18;\n\nconst NodeWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${props => (props.isCompact ? \"0\" : \"8px 0\")};\n  user-select: none;\n\n  ${ListItem}:first-child > & {\n    padding-top: 0;\n  }\n`;\n\nconst IconWrapper = styled.div`\n  box-sizing: border-box;\n  padding-left: 3px;\n  width: ${INDENTATION}px;\n  font-weight: 400;\n  color: #888;\n  font-size: 10px;\n`;\n\nconst ToggleNode = ({\n  expanded,\n  name,\n  id,\n  amount,\n  valueRenderer,\n  onToggle,\n  isCompact\n}) => (\n  <NodeWrapper onClick={onToggle} isCompact={isCompact}>\n    <SecondaryText\n      style={{ whiteSpace: \"pre\", display: \"flex\", alignItems: \"center\" }}\n    >\n      <IconWrapper>\n        <Icon icon=\"chevron-right\" transform={{ rotate: expanded ? 90 : 0 }} />\n      </IconWrapper>\n      {typeof name === \"function\" ? name({ expanded }) : name}\n    </SecondaryText>\n    {valueRenderer ? (\n      valueRenderer({ amount, id, faded: expanded })\n    ) : (\n      <SecondaryText style={{ opacity: expanded ? 0.3 : 1 }}>\n        <Amount amount={amount} />\n      </SecondaryText>\n    )}\n  </NodeWrapper>\n);\n\nexport default ToggleNode;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport ListItem from \"./ListItem\";\nimport moment from \"moment\";\nimport { MinorText } from \"./typeComponents\";\nimport { sumByProp } from \"../dataUtils\";\nimport EmptyText from \"./EmptyText\";\nimport DateSummaryTransaction from \"./DateSummaryTransaction\";\nimport ToggleNode from \"./ToggleNode\";\n\nconst Container = styled(ListItem)`\n  display: block;\n`;\n\nconst DateSummary = ({\n  categoriesById,\n  date,\n  expanded,\n  payeesById,\n  transactions,\n  onToggleExpanded\n}) => (\n  <Container>\n    <ToggleNode\n      amount={sumByProp(\"amount\")(transactions)}\n      expanded={expanded}\n      name={\n        <div style={{ display: \"flex\", alignItems: \"baseline\" }}>\n          {moment(date).calendar(null, {\n            sameDay: \"[Today]\",\n            nextDay: \"[Tomorrow]\",\n            nextWeek: \"dddd\",\n            lastDay: \"[Yesterday]\",\n            lastWeek: \"dddd\",\n            sameElse: \"DD/MM/YYYY\"\n          })}\n          {!expanded && (\n            <MinorText> &ndash; {transactions.length} transactions</MinorText>\n          )}\n        </div>\n      }\n      onToggle={onToggleExpanded}\n      isCompact\n    />\n    <AnimateHeight isExpanded={expanded}>\n      <div style={{ paddingLeft: 18 }}>\n        {transactions.length ? (\n          transactions.map(transaction => (\n            <DateSummaryTransaction\n              key={transaction.id}\n              amount={transaction.amount}\n              payee={payeesById[transaction.payee_id]}\n              category={categoriesById[transaction.category_id]}\n              memo={transaction.memo}\n            />\n          ))\n        ) : (\n          <EmptyText style={{ margin: 0 }}>no transactions</EmptyText>\n        )}\n      </div>\n    </AnimateHeight>\n  </Container>\n);\n\nDateSummary.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  date: PropTypes.string.isRequired,\n  expanded: PropTypes.bool.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      category_id: PropTypes.string,\n      payee_id: PropTypes.string\n    })\n  ).isRequired,\n  onToggleExpanded: PropTypes.func.isRequired\n};\n\nexport default DateSummary;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { groupByProp } from \"../dataUtils\";\nimport moment from \"moment\";\nimport range from \"lodash/fp/range\";\nimport values from \"lodash/fp/values\";\nimport { SecondaryText } from \"./typeComponents\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport DateSummary from \"./DateSummary\";\n\nconst NUM_DAYS = 5;\n\nconst RecentSpending = ({\n  categoriesById,\n  currentMonth,\n  payeesById,\n  transactions\n}) => {\n  const transactionsByDate = groupByProp(\"date\")(transactions);\n  const recentDays = range(0, NUM_DAYS)\n    .map(n =>\n      moment()\n        .subtract(n, \"days\")\n        .format(\"YYYY-MM-DD\")\n    )\n    .filter(date => date.startsWith(currentMonth));\n\n  const [expanded, setExpanded] = useState(\n    recentDays.reduce((acc, date) => ({ ...acc, [date]: false }), {})\n  );\n\n  return (\n    <CollapsibleSection title=\"Recent Spending\">\n      {recentDays.map(date => (\n        <DateSummary\n          key={date}\n          categoriesById={categoriesById}\n          date={date}\n          expanded={!!expanded[date]}\n          onToggleExpanded={() => {\n            setExpanded({ ...expanded, [date]: !expanded[date] });\n          }}\n          payeesById={payeesById}\n          transactions={transactionsByDate[date] || []}\n        />\n      ))}\n    </CollapsibleSection>\n  );\n};\n\nRecentSpending.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      date: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nexport default RecentSpending;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport {\n  getTransactionMonth,\n  isTransfer,\n  isStartingBalanceOrReconciliation,\n  isIncome,\n  sanitizeName\n} from \"../budgetUtils\";\nimport { notAny } from \"../dataUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport { useSelectedEntityId } from \"../commonHooks\";\nimport PageLayout from \"./PageLayout\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport RecentSpending from \"./RecentSpending\";\n\nconst CurrentMonthPage = ({\n  budget,\n  currentMonth,\n  historyAction,\n  investmentAccounts,\n  location,\n  sidebarTrigger,\n  title\n}) => {\n  const [selectedGroupId, onSelectGroupId] = useSelectedEntityId();\n\n  const {\n    categoryGroupsById,\n    categoriesById,\n    payeesById,\n    id: budgetId\n  } = budget;\n  const selectedGroup = selectedGroupId && categoryGroupsById[selectedGroupId];\n  const transactions = budget.transactions.filter(\n    notAny([\n      isIncome(budget),\n      isTransfer(investmentAccounts),\n      isStartingBalanceOrReconciliation(budget)\n    ])\n  );\n  const transactionsThisMonth = takeWhile(\n    transaction => getTransactionMonth(transaction) === currentMonth\n  )(transactions);\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <DayByDaySection\n            budgetId={budget.id}\n            currentMonth={currentMonth}\n            transactions={transactions}\n            highlightFunction={\n              selectedGroupId &&\n              (transaction =>\n                categoriesById[transaction.category_id].category_group_id ===\n                selectedGroupId)\n            }\n            title={\n              selectedGroup\n                ? `Day by Day: ${sanitizeName(selectedGroup.name)}`\n                : \"Day by Day\"\n            }\n          />\n          <RecentSpending\n            categoriesById={categoriesById}\n            currentMonth={currentMonth}\n            payeesById={payeesById}\n            transactions={transactionsThisMonth}\n          />\n          <GenericEntitiesSection\n            entitiesById={categoryGroupsById}\n            entityFunction={transaction =>\n              categoriesById[transaction.category_id].category_group_id\n            }\n            entityKey=\"category_group_id\"\n            linkFunction={groupId =>\n              makeLink(pages.currentMonthGroup.path, {\n                budgetId,\n                categoryGroupId: groupId\n              })\n            }\n            selectedEntityId={selectedGroupId}\n            title=\"Category Groups\"\n            transactions={transactionsThisMonth}\n            showTransactionCount\n            onClickEntity={onSelectGroupId}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nCurrentMonthPage.propTypes = {\n  budget: PropTypes.object.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.object.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default CurrentMonthPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport findIndex from \"lodash/fp/findIndex\";\nimport { selectedPlotBandColor } from \"../styleVariables\";\nimport Chart from \"./Chart\";\n\nconst MonthlyChart = ({\n  average,\n  data,\n  height,\n  series,\n  selectedMonth,\n  stacked,\n  onSelectMonth\n}) => {\n  const yearLines = [];\n  const plotBands = [];\n  const categories = data.map(d => moment(d.month).format(\"MMM\"));\n  let highlights = null;\n\n  if (selectedMonth) {\n    highlights = { months: [selectedMonth], color: selectedPlotBandColor };\n  }\n\n  data.forEach(({ month }, index) => {\n    if (moment(month).format(\"MMM\") === \"Jan\") {\n      yearLines.push({\n        color: \"#ccc\",\n        width: 1,\n        value: index - 0.5,\n        zIndex: 3\n      });\n    }\n  });\n\n  if (highlights) {\n    highlights.months.forEach(month => {\n      const index = findIndex(d => d.month === month)(data);\n      plotBands.push({\n        color: highlights.color,\n        from: index - 0.5,\n        to: index + 0.5\n      });\n    });\n  }\n\n  return (\n    <Chart\n      key={data.length}\n      options={{\n        chart: {\n          animation: false,\n          height,\n          type: \"column\",\n          events: {\n            click: event => {\n              onSelectMonth &&\n                onSelectMonth(data[Math.round(event.xAxis[0].value)].month);\n            }\n          }\n        },\n        xAxis: {\n          categories,\n          plotBands,\n          plotLines: yearLines\n        },\n        yAxis: {\n          endOnTick: false,\n          startOnTick: false,\n          gridLineColor: \"transparent\",\n          labels: { enabled: false },\n          title: { text: null },\n          plotLines: average && [\n            {\n              color: \"#aaa\",\n              dashStyle: \"Dot\",\n              width: 1,\n              value: -average,\n              zIndex: 2\n            }\n          ]\n        },\n        plotOptions: {\n          series: { animation: false, stacking: stacked ? \"normal\" : null }\n        },\n        series: series.map(s => {\n          if (s.type === \"line\") {\n            return {\n              color: s.color,\n              data: data.map(s.valueFunction),\n              enableMouseTracking: false,\n              type: \"line\"\n            };\n          }\n\n          return {\n            borderWidth: 0,\n            color: s.color,\n            data: data.map(s.valueFunction),\n            enableMouseTracking: false,\n            states: { hover: { brightness: 0 } }\n          };\n        })\n      }}\n    />\n  );\n};\n\nMonthlyChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      month: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  series: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string.isRequired,\n      valueFunction: PropTypes.func.isRequired,\n      type: PropTypes.oneOf([\"line\"])\n    })\n  ).isRequired,\n  average: PropTypes.number,\n  height: PropTypes.number,\n  selectedMonth: PropTypes.string,\n  stacked: PropTypes.bool,\n  onSelectMonth: PropTypes.func\n};\n\nMonthlyChart.defaultProps = { height: 140, stacked: true };\n\nexport default MonthlyChart;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { primaryColor } from \"../styleVariables\";\n\nconst PADDING = 2;\nconst WIDTH = 32;\nconst HEIGHT = 18;\n\nconst Track = styled.div`\n  box-sizing: border-box;\n  padding: ${PADDING}px;\n  display: inline-block;\n  width: ${WIDTH}px;\n  height: ${HEIGHT}px;\n  border-radius: ${HEIGHT / 2}px;\n  background-color: ${props => (props.on ? primaryColor : \"#ddd\")};\n  transition: background-color 0.15s ease-in-out;\n`;\n\nconst Handle = styled.div`\n  box-sizing: border-box;\n  height: ${HEIGHT - 2 * PADDING}px;\n  width: ${HEIGHT - 2 * PADDING}px;\n  border-radius: 50%;\n  background-color: #fff;\n  transform: translate3d(${props => (props.on ? WIDTH - HEIGHT : 0)}px, 0, 0);\n  transition: transform 0.15s ease-in-out;\n`;\n\nconst Toggle = ({ on, onClick }) => (\n  <Track on={on} onClick={onClick}>\n    <Handle on={on} />\n  </Track>\n);\n\nToggle.propTypes = {\n  on: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Toggle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Toggle from \"./Toggle\";\n\nconst Container = styled.div`\n  user-select: none;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px 0;\n`;\n\nconst Label = styled.div``;\n\nconst ToggleWithLabel = ({ label, name, checked, onChange }) => (\n  <Container\n    onClick={() => {\n      onChange({ target: { name, checked: !checked } });\n    }}\n  >\n    <Label>{label}</Label>\n    <Toggle\n      on={checked}\n      onClick={() => {\n        onChange({ target: { name, checked: !checked } });\n      }}\n    />\n  </Container>\n);\n\nToggleWithLabel.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default ToggleWithLabel;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"./Modal\";\nimport ToggleWithLabel from \"./ToggleWithLabel\";\nimport { MinorText } from \"./typeComponents\";\n\nconst MonthByMonthSettingsModal = ({\n  excludeFirstMonth,\n  excludeLastMonth,\n  open,\n  onClose,\n  onSetExclusion\n}) => (\n  <Modal open={open} onClose={onClose} title=\"Chart Settings\" width={240}>\n    <ToggleWithLabel\n      checked={excludeFirstMonth}\n      label=\"Exclude first month\"\n      name=\"excludeFirstMonth\"\n      onChange={() => {\n        onSetExclusion({ month: \"first\", exclude: !excludeFirstMonth });\n      }}\n    />\n    <ToggleWithLabel\n      checked={excludeLastMonth}\n      label=\"Exclude last month\"\n      name=\"excludeLastMonth\"\n      onChange={() => {\n        onSetExclusion({ month: \"last\", exclude: !excludeLastMonth });\n      }}\n    />\n    <MinorText style={{ marginTop: 5 }}>\n      Excluding incomplete months may lead to more representative averages\n    </MinorText>\n  </Modal>\n);\n\nMonthByMonthSettingsModal.propTypes = {\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired\n};\n\nexport default MonthByMonthSettingsModal;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport { groupBy, sumByProp } from \"../dataUtils\";\nimport { lightPrimaryColor, lighterPrimaryColor } from \"../styleVariables\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport MonthlyChart from \"./MonthlyChart\";\nimport MonthByMonthSettingsModal from \"./MonthByMonthSettingsModal\";\n\nconst MonthByMonthSection = ({\n  excludeFirstMonth,\n  excludeLastMonth,\n  highlightFunction,\n  months,\n  selectedMonth,\n  title,\n  transactions,\n  onSelectMonth,\n  onSetExclusion\n}) => {\n  const [settingsModalOpen, setSettingsModalOpen] = useState(false);\n\n  let total = 0;\n  let selectedMonthTotal = 0;\n\n  const transactionsByMonth = groupBy(getTransactionMonth)(transactions);\n  const data = months.map(month => {\n    const grouped = groupBy(highlightFunction || (() => false))(\n      transactionsByMonth[month] || []\n    );\n    const amount = sumByProp(\"amount\")(grouped.false || []);\n    const highlighted = sumByProp(\"amount\")(grouped.true || []);\n    total += highlightFunction ? highlighted : amount;\n    if (month === selectedMonth) {\n      selectedMonthTotal = highlightFunction ? highlighted : amount;\n    }\n\n    return { month, amount: -amount, highlighted: -highlighted };\n  });\n\n  const chartNumbers = selectedMonth\n    ? [\n        { amount: total / months.length, label: \"average\" },\n        {\n          amount: selectedMonthTotal,\n          label: moment(selectedMonth).format(\"MMM YYYY\")\n        }\n      ]\n    : [\n        { amount: total / months.length, label: \"average\" },\n        {\n          amount: total,\n          label: \"total\"\n        }\n      ];\n  const series = [\n    {\n      color: highlightFunction ? lightPrimaryColor : lighterPrimaryColor,\n      valueFunction: d => d.amount\n    }\n  ];\n\n  if (highlightFunction) {\n    series.push({\n      color: lighterPrimaryColor,\n      valueFunction: d => d.highlighted\n    });\n  }\n\n  return (\n    <CollapsibleSection\n      title={title}\n      hasSettings\n      onClickSettings={() => {\n        setSettingsModalOpen(true);\n      }}\n    >\n      <ChartNumbers numbers={chartNumbers} />\n      <MonthlyChart\n        data={data}\n        average={total / months.length}\n        series={series}\n        selectedMonth={selectedMonth}\n        onSelectMonth={onSelectMonth}\n      />\n      <MonthByMonthSettingsModal\n        excludeFirstMonth={excludeFirstMonth}\n        excludeLastMonth={excludeLastMonth}\n        open={settingsModalOpen}\n        onClose={() => {\n          setSettingsModalOpen(false);\n        }}\n        onSetExclusion={onSetExclusion}\n      />\n    </CollapsibleSection>\n  );\n};\n\nMonthByMonthSection.propTypes = {\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  highlightFunction: PropTypes.func,\n  selectedMonth: PropTypes.string,\n  title: PropTypes.string\n};\n\nMonthByMonthSection.defaultProps = { title: \"Month by Month\" };\n\nexport default MonthByMonthSection;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport {\n  useFlagState,\n  useMonthExclusions,\n  useSelectedEntityId,\n  useSelectedMonth\n} from \"../commonHooks\";\nimport { notAny, simpleMemoize } from \"../dataUtils\";\nimport {\n  getFirstMonth,\n  getTransactionMonth,\n  isIncome,\n  isStartingBalanceOrReconciliation,\n  isTransfer,\n  sanitizeName\n} from \"../budgetUtils\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nconst getFilteredTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) => {\n    const firstMonth = getFirstMonth(budget);\n    const lastMonth = moment().format(\"YYYY-MM\");\n    return budget.transactions.filter(\n      notAny([\n        isStartingBalanceOrReconciliation(budget),\n        isTransfer(investmentAccounts),\n        transaction =>\n          excludeFirstMonth && getTransactionMonth(transaction) === firstMonth,\n        transaction =>\n          excludeLastMonth && getTransactionMonth(transaction) === lastMonth\n      ])\n    );\n  }\n);\n\nconst getFilteredIncomeTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) =>\n    getFilteredTransactions(\n      budget,\n      investmentAccounts,\n      excludeFirstMonth,\n      excludeLastMonth\n    )\n      .filter(transaction => isIncome(budget)(transaction))\n      .map(transaction => ({ ...transaction, amount: -transaction.amount }))\n);\n\nconst IncomePage = ({\n  budget,\n  historyAction,\n  investmentAccounts,\n  location,\n  sidebarTrigger,\n  title\n}) => {\n  const {\n    excludeFirstMonth,\n    excludeLastMonth,\n    months,\n    onSetExclusion\n  } = useMonthExclusions(budget);\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\n  const [selectedPayeeId, onSelectPayeeId] = useSelectedEntityId();\n  const [showAverage, _on, _off, onToggleShowAverage] = useFlagState(true);\n\n  const { payeesById } = budget;\n  const filteredTransactions = getFilteredIncomeTransactions(\n    budget,\n    investmentAccounts,\n    excludeFirstMonth,\n    excludeLastMonth\n  );\n  const transactionsInSelectedMonth =\n    selectedMonth &&\n    filteredTransactions.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            highlightFunction={\n              selectedPayeeId &&\n              (transaction => transaction.payee_id === selectedPayeeId)\n            }\n            months={months}\n            selectedMonth={selectedMonth}\n            title={\n              selectedPayeeId\n                ? `Month by Month: ${sanitizeName(\n                    budget.payeesById[selectedPayeeId].name\n                  )}`\n                : \"Month by Month\"\n            }\n            transactions={filteredTransactions}\n            onSelectMonth={onSelectMonth}\n            onSetExclusion={onSetExclusion}\n          />\n          <GenericEntitiesSection\n            key={`payee-${selectedMonth || \"all\"}`}\n            entityKey=\"payee_id\"\n            entitiesById={payeesById}\n            numMonths={months.length}\n            title={\n              selectedMonth\n                ? `Payees: ${moment(selectedMonth).format(\"MMMM\")}`\n                : \"Payees\"\n            }\n            transactions={transactionsInSelectedMonth || filteredTransactions}\n            selectedEntityId={selectedPayeeId}\n            showAverageToggle={!selectedMonth}\n            showAverage={showAverage}\n            onClickEntity={onSelectPayeeId}\n            onToggleAverage={onToggleShowAverage}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nIncomePage.propTypes = {\n  budget: PropTypes.object.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.object.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default IncomePage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport get from \"lodash/fp/get\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\nimport ListItem from \"./ListItem\";\nimport Amount from \"./Amount\";\nimport LabelWithMinorText from \"./LabelWithMinorText\";\n\nconst Transaction = ({ category, payee, memo, date, amount, isContinuing }) => (\n  <ListItem isContinuing={isContinuing}>\n    <div style={{ overflow: \"hidden\" }}>\n      <LabelWithMinorText\n        label={get(\"name\")(payee) || \"(no payee)\"}\n        minorText={(get(\"name\")(category) || \"\") + (memo ? ` (${memo})` : \"\")}\n      />\n      <MinorText>{moment(date).format(\"dddd, MMM D\")}</MinorText>\n    </div>\n    <SecondaryText>\n      <Amount amount={amount} />\n    </SecondaryText>\n  </ListItem>\n);\n\nTransaction.propTypes = {\n  amount: PropTypes.number.isRequired,\n  date: PropTypes.string.isRequired,\n  category: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  }),\n  isContinuing: PropTypes.bool,\n  memo: PropTypes.string,\n  payee: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })\n};\n\nexport default Transaction;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Transaction from \"./Transaction\";\nimport NoTransactions from \"./NoTransactions\";\n\nconst TransactionsSection = ({\n  transactions,\n  title,\n  categoriesById,\n  payeesById\n}) => (\n  <CollapsibleSection title={title}>\n    {transactions.length ? (\n      transactions.map(\n        ({\n          id,\n          category_id: categoryId,\n          payee_id: payeeId,\n          date,\n          memo,\n          amount\n        }) => (\n          <Transaction\n            key={id}\n            amount={amount}\n            category={categoriesById[categoryId]}\n            date={date}\n            memo={memo}\n            payee={payeesById[payeeId]}\n          />\n        )\n      )\n    ) : (\n      <NoTransactions />\n    )}\n  </CollapsibleSection>\n);\n\nTransactionsSection.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      category_id: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      payee_id: PropTypes.string\n    })\n  ).isRequired,\n  title: PropTypes.string\n};\n\nTransactionsSection.defaultProps = { title: \"Transactions\" };\n\nexport default TransactionsSection;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport { sumByProp } from \"../dataUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport PageLayout from \"./PageLayout\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport TransactionsSection from \"./TransactionsSection\";\nimport { useSelectedEntityId } from \"../commonHooks\";\n\nconst CurrentMonthGroupPage = ({\n  budget,\n  categoryGroupId,\n  currentMonth,\n  historyAction,\n  location,\n  sidebarTrigger,\n  title\n}) => {\n  const [selectedCategoryId, onSelectCategoryId] = useSelectedEntityId();\n  const {\n    id: budgetId,\n    payeesById,\n    categories: allCategories,\n    categoriesById,\n    transactions: allTransactions\n  } = budget;\n\n  const selectedCategory =\n    selectedCategoryId && categoriesById[selectedCategoryId];\n  const categories = allCategories.filter(\n    category => category.category_group_id === categoryGroupId\n  );\n  const categoryIds = categories.map(category => category.id);\n  const transactionsInGroup = allTransactions.filter(transaction =>\n    categoryIds.includes(transaction.category_id)\n  );\n  const transactionsInGroupForMonth = transactionsInGroup.filter(\n    transaction => getTransactionMonth(transaction) === currentMonth\n  );\n  const highlightedTransactions =\n    selectedCategoryId &&\n    transactionsInGroupForMonth.filter(\n      transaction => transaction.category_id === selectedCategoryId\n    );\n\n  const spent = -sumByProp(\"activity\")(categories);\n  const available = sumByProp(\"balance\")(categories);\n\n  return (\n    <PageLayout\n      location={location}\n      historyAction={historyAction}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <DayByDaySection\n            budgetId={budgetId}\n            currentMonth={currentMonth}\n            highlightFunction={\n              selectedCategoryId &&\n              (transaction => transaction.category_id === selectedCategoryId)\n            }\n            title={\n              selectedCategory\n                ? `Day by Day: ${sanitizeName(selectedCategory.name)}`\n                : \"Day by Day\"\n            }\n            transactions={transactionsInGroup}\n            total={spent + available}\n          />\n          <GenericEntitiesSection\n            entityKey=\"category_id\"\n            entitiesById={categoriesById}\n            linkFunction={categoryId =>\n              makeLink(pages.currentMonthCategory.path, {\n                budgetId,\n                categoryGroupId,\n                categoryId\n              })\n            }\n            selectedEntityId={selectedCategoryId}\n            title=\"Categories\"\n            transactions={transactionsInGroupForMonth}\n            showTransactionCount\n            onClickEntity={onSelectCategoryId}\n          />\n          <TransactionsSection\n            categoriesById={categoriesById}\n            payeesById={payeesById}\n            transactions={\n              highlightedTransactions || transactionsInGroupForMonth\n            }\n            title={\n              selectedCategory\n                ? `Transactions: ${sanitizeName(selectedCategory.name)}`\n                : \"Transactions\"\n            }\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nCurrentMonthGroupPage.propTypes = {\n  budget: PropTypes.shape({\n    categories: PropTypes.array.isRequired,\n    id: PropTypes.string.isRequired,\n    payeesById: PropTypes.object.isRequired,\n    transactions: PropTypes.array.isRequired\n  }).isRequired,\n  categoryGroupId: PropTypes.string.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default CurrentMonthGroupPage;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport PageLayout from \"./PageLayout\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport TransactionsSection from \"./TransactionsSection\";\n\nconst CurrentMonthCategoryPage = ({\n  budget,\n  currentMonth,\n  categoryId,\n  historyAction,\n  location,\n  sidebarTrigger,\n  title\n}) => {\n  const {\n    id: budgetId,\n    payeesById,\n    categoriesById,\n    transactions: allTransactions\n  } = budget;\n\n  const category = categoriesById[categoryId];\n  const transactionsInCategory = allTransactions.filter(\n    transaction => transaction.category_id === categoryId\n  );\n  const transactionsInCategoryForMonth = transactionsInCategory.filter(\n    transaction => getTransactionMonth(transaction) === currentMonth\n  );\n\n  const spent = -category.activity;\n  const available = category.balance;\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <DayByDaySection\n            key={category ? category.name : \"day-by-day\"}\n            budgetId={budgetId}\n            currentMonth={currentMonth}\n            title=\"Day by Day\"\n            transactions={transactionsInCategory}\n            total={spent + available}\n          />\n          <TransactionsSection\n            categoriesById={categoriesById}\n            payeesById={payeesById}\n            transactions={transactionsInCategoryForMonth}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nCurrentMonthCategoryPage.propTypes = {\n  budget: PropTypes.shape({\n    categories: PropTypes.array.isRequired,\n    id: PropTypes.string.isRequired,\n    payeesById: PropTypes.object.isRequired,\n    transactions: PropTypes.array.isRequired\n  }).isRequired,\n  categoryGroupId: PropTypes.string.isRequired,\n  categoryId: PropTypes.string.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default CurrentMonthCategoryPage;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport { useTrendsShowAverage } from \"../commonHooks\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nconst GroupsPage = ({\n  budget,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  location,\n  months,\n  sidebarTrigger,\n  title,\n  transactions,\n  selectedMonth,\n  selectedGroupId,\n  onSelectGroup,\n  onSelectMonth,\n  onSetExclusion\n}) => {\n  const [showAverage, onToggleShowAverage] = useTrendsShowAverage(budget.id);\n\n  const { categoryGroupsById, categoriesById, id: budgetId } = budget;\n  const selectedGroup = selectedGroupId && categoryGroupsById[selectedGroupId];\n\n  const transactionsForMonth =\n    selectedMonth &&\n    transactions.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            highlightFunction={\n              selectedGroupId &&\n              (transaction =>\n                categoriesById[transaction.category_id].category_group_id ===\n                selectedGroupId)\n            }\n            months={months}\n            selectedMonth={selectedMonth}\n            title={\n              selectedGroup\n                ? `Month by Month: ${sanitizeName(selectedGroup.name)}`\n                : \"Month by Month\"\n            }\n            transactions={transactions}\n            onSelectMonth={onSelectMonth}\n            onSetExclusion={onSetExclusion}\n          />\n          <GenericEntitiesSection\n            key={selectedMonth || \"all\"}\n            entityFunction={transaction =>\n              categoriesById[transaction.category_id].category_group_id\n            }\n            entityKey=\"category_group_id\"\n            entitiesById={categoryGroupsById}\n            linkFunction={categoryGroupId =>\n              makeLink(pages.group.path, { budgetId, categoryGroupId })\n            }\n            selectedEntityId={selectedGroupId}\n            title={\n              selectedMonth\n                ? `Category Groups: ${moment(selectedMonth).format(\"MMMM\")}`\n                : \"Category Groups\"\n            }\n            transactions={transactionsForMonth || transactions}\n            onClickEntity={onSelectGroup}\n            numMonths={months.length}\n            showAverageToggle={!selectedMonth}\n            showAverage={showAverage && !selectedMonth}\n            onToggleAverage={onToggleShowAverage}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nGroupsPage.propTypes = {\n  budget: PropTypes.object.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectGroup: PropTypes.func.isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedGroupId: PropTypes.string,\n  selectedMonth: PropTypes.string\n};\n\nexport default GroupsPage;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Transaction from \"./Transaction\";\nimport NoTransactions from \"./NoTransactions\";\nimport SeeAll from \"./SeeAll\";\n\nconst LIMIT = 3;\n\nclass TransactionsByMonthSection extends Component {\n  static propTypes = {\n    categoriesById: PropTypes.object.isRequired,\n    payeesById: PropTypes.object.isRequired,\n    selectedMonth: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    limitShowing: PropTypes.bool,\n    selectedCategoryId: PropTypes.string,\n    selectedPayeeId: PropTypes.string\n  };\n\n  static defaultProps = { limitShowing: true };\n\n  state = { allMounted: false, showAll: false };\n\n  handleToggleShowAll = () => {\n    const { allMounted, showAll } = this.state;\n\n    if (allMounted) {\n      this.setState({ showAll: !showAll });\n    } else {\n      this.setState({ allMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ showAll: true });\n      });\n    }\n  };\n\n  render() {\n    const {\n      categoriesById,\n      payeesById,\n      selectedCategoryId,\n      selectedPayeeId,\n      selectedMonth,\n      transactions,\n      limitShowing: limitShowingProp\n    } = this.props;\n    const { allMounted, showAll } = this.state;\n\n    const selectedCategory =\n      selectedCategoryId && categoriesById[selectedCategoryId];\n    const selectedPayee = selectedPayeeId && payeesById[selectedPayeeId];\n    const month = moment(selectedMonth).format(\"MMMM\");\n    const transactionsForMonth = compose([\n      limitShowingProp\n        ? sortBy(\"amount\")\n        : transactions => transactions.reverse(),\n      transactions =>\n        transactions.filter(\n          transaction =>\n            getTransactionMonth(transaction) === selectedMonth &&\n            (!selectedCategoryId ||\n              transaction.category_id === selectedCategoryId) &&\n            (!selectedPayeeId || transaction.payee_id === selectedPayeeId)\n        )\n    ])(transactions);\n    const limitShowing =\n      limitShowingProp && transactionsForMonth.length > LIMIT + 2;\n    const topTransactions = limitShowing\n      ? transactionsForMonth.slice(0, LIMIT)\n      : transactionsForMonth;\n    const otherTransactions = limitShowing\n      ? transactionsForMonth.slice(LIMIT)\n      : [];\n\n    return (\n      <CollapsibleSection\n        title={\n          selectedPayee\n            ? `Transactions: ${month}, ${selectedPayee.name}`\n            : selectedCategory\n              ? `Transactions: ${month}, ${selectedCategory.name}`\n              : `Transactions: ${month}`\n        }\n      >\n        {topTransactions.length ? (\n          topTransactions.map(\n            ({\n              id,\n              date,\n              amount,\n              memo,\n              payee_id: payeeId,\n              category_id: categoryId\n            }) => (\n              <Transaction\n                key={id}\n                amount={amount}\n                category={categoriesById[categoryId]}\n                date={date}\n                memo={memo}\n                payee={payeesById[payeeId]}\n              />\n            )\n          )\n        ) : (\n          <NoTransactions />\n        )}\n        {allMounted && (\n          <AnimateHeight isExpanded={showAll}>\n            <Fragment>\n              {otherTransactions.map(\n                ({\n                  id,\n                  date,\n                  amount,\n                  payee_id: payeeId,\n                  category_id: categoryId\n                }) => (\n                  <Transaction\n                    key={id}\n                    amount={amount}\n                    category={categoriesById[categoryId]}\n                    date={date}\n                    payee={payeesById[payeeId]}\n                    isContinuing\n                  />\n                )\n              )}\n            </Fragment>\n          </AnimateHeight>\n        )}\n        {!!otherTransactions.length && (\n          <SeeAll\n            count={transactionsForMonth.length}\n            pluralizedName=\"transactions\"\n            showAll={showAll}\n            onToggle={this.handleToggleShowAll}\n          />\n        )}\n      </CollapsibleSection>\n    );\n  }\n}\n\nexport default TransactionsByMonthSection;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport { useTrendsShowAverage } from \"../commonHooks\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nconst GroupPage = ({\n  budget,\n  categoryGroupId,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  location,\n  months,\n  selectedMonth,\n  selectedCategoryId,\n  sidebarTrigger,\n  title,\n  transactions,\n  onSelectMonth,\n  onSelectCategory,\n  onSetExclusion\n}) => {\n  const [showAverage, onToggleShowAverage] = useTrendsShowAverage(budget.id);\n\n  const {\n    categories,\n    categoriesById,\n    categoryGroupsById,\n    payeesById,\n    id: budgetId\n  } = budget;\n  const categoryGroup = categoryGroupsById[categoryGroupId];\n  const selectedCategory =\n    selectedCategoryId && categoriesById[selectedCategoryId];\n  const categoriesInGroup = categories.filter(\n    category => category.category_group_id === categoryGroup.id\n  );\n  const categoryIds = categoriesInGroup.map(category => category.id);\n  const transactionsInGroup = transactions.filter(transaction =>\n    categoryIds.includes(transaction.category_id)\n  );\n  const transactionsInSelectedMonth =\n    selectedMonth &&\n    compose([\n      sortBy(\"amount\"),\n      transactions =>\n        transactions.filter(\n          transaction => getTransactionMonth(transaction) === selectedMonth\n        )\n    ])(transactionsInGroup);\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            months={months}\n            highlightFunction={\n              selectedCategoryId &&\n              (transaction => transaction.category_id === selectedCategoryId)\n            }\n            selectedMonth={selectedMonth}\n            title={\n              selectedCategory\n                ? `Month by Month: ${sanitizeName(selectedCategory.name)}`\n                : \"Month by Month\"\n            }\n            transactions={transactionsInGroup}\n            onSelectMonth={onSelectMonth}\n            onSetExclusion={onSetExclusion}\n          />\n          <GenericEntitiesSection\n            key={`categories-${selectedMonth || \"all\"}`}\n            entityKey=\"category_id\"\n            entitiesById={categoriesById}\n            linkFunction={categoryId =>\n              makeLink(pages.category.path, {\n                budgetId,\n                categoryGroupId: categoryGroup.id,\n                categoryId\n              })\n            }\n            title={\n              selectedMonth\n                ? `Categories: ${moment(selectedMonth).format(\"MMMM\")}`\n                : \"Categories\"\n            }\n            transactions={transactionsInSelectedMonth || transactionsInGroup}\n            selectedEntityId={selectedCategoryId}\n            onClickEntity={onSelectCategory}\n            showAverageToggle={!selectedMonth}\n            showAverage={showAverage && !selectedMonth}\n            numMonths={months.length}\n            onToggleAverage={onToggleShowAverage}\n            limitShowing\n          />\n          {selectedMonth &&\n            transactionsInSelectedMonth.length > 0 && (\n              <TransactionsByMonthSection\n                key={`transactions-${selectedMonth ||\n                  \"all\"}-${selectedCategoryId || \"all\"}`}\n                categoriesById={categoriesById}\n                payeesById={payeesById}\n                selectedMonth={selectedMonth}\n                selectedCategoryId={selectedCategoryId}\n                transactions={transactionsInSelectedMonth}\n              />\n            )}\n        </Fragment>\n      }\n    />\n  );\n};\n\nGroupPage.propTypes = {\n  budget: PropTypes.shape({\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        categoryId: PropTypes.string\n      })\n    ).isRequired,\n    payeesById: PropTypes.object.isRequired,\n    categoryGroupsById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  categoryGroupId: PropTypes.string.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectCategory: PropTypes.func.isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedCategoryId: PropTypes.string,\n  selectedMonth: PropTypes.string\n};\n\nexport default GroupPage;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst INITIAL_STATE = {\n  selectedMonth: null,\n  selectedGroupId: null,\n  selectedCategoryId: null,\n  selectedPayeeId: null\n};\n\nclass CategoriesState extends Component {\n  static propTypes = {\n    action: PropTypes.oneOf([\"PUSH\", \"POP\", \"REPLACE\"]).isRequired,\n    children: PropTypes.func.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  state = INITIAL_STATE;\n\n  cachedStates = {};\n\n  getSnapshotBeforeUpdate() {\n    return this.state;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { location, action } = this.props;\n\n    if (location === prevProps.location) {\n      return;\n    }\n\n    if (action === \"POP\") {\n      this.cachedStates[prevProps.location] = snapshot;\n      this.setState(this.cachedStates[location]);\n    }\n\n    if (action === \"PUSH\") {\n      this.cachedStates[prevProps.location] = snapshot;\n      this.setState(INITIAL_STATE);\n    }\n\n    if (action === \"REPLACE\") {\n      this.setState(INITIAL_STATE);\n    }\n  }\n\n  handleSelectMonth = month => {\n    this.setState(state => ({\n      ...state,\n      selectedMonth: state.selectedMonth === month ? null : month\n    }));\n  };\n\n  handleSelectGroup = groupId => {\n    this.setState(state => ({\n      ...state,\n      selectedGroupId: state.selectedGroupId === groupId ? null : groupId\n    }));\n  };\n\n  handleSelectCategory = categoryId => {\n    this.setState(state => ({\n      ...state,\n      selectedCategoryId:\n        state.selectedCategoryId === categoryId ? null : categoryId\n    }));\n  };\n\n  handleSelectPayee = payeeId => {\n    this.setState(state => ({\n      ...state,\n      selectedPayeeId: state.selectedPayeeId === payeeId ? null : payeeId\n    }));\n  };\n\n  render() {\n    return this.props.children({\n      ...this.state,\n      onSelectMonth: this.handleSelectMonth,\n      onSelectGroup: this.handleSelectGroup,\n      onSelectCategory: this.handleSelectCategory,\n      onSelectPayee: this.handleSelectPayee,\n      onSetExclusion: this.handleSetExclusion\n    });\n  }\n}\n\nexport default CategoriesState;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\n\nconst CategoryPage = ({\n  categoryId,\n  budget,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  location,\n  months,\n  selectedMonth,\n  selectedPayeeId,\n  sidebarTrigger,\n  title,\n  transactions,\n  onSelectMonth,\n  onSelectPayee,\n  onSetExclusion\n}) => {\n  const { categoriesById, payeesById, id: budgetId } = budget;\n  const category = categoriesById[categoryId];\n  const selectedPayee = selectedPayeeId && payeesById[selectedPayeeId];\n  const transactionsForCategory = transactions.filter(\n    transaction => transaction.category_id === categoryId\n  );\n  const transactionsForMonth =\n    selectedMonth &&\n    transactionsForCategory.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            months={months}\n            onSetExclusion={onSetExclusion}\n            highlightFunction={\n              selectedPayeeId &&\n              (transaction => transaction.payee_id === selectedPayeeId)\n            }\n            selectedMonth={selectedMonth}\n            title={\n              selectedPayee\n                ? `Month by Month: ${sanitizeName(selectedPayee.name)}`\n                : \"Month by Month\"\n            }\n            transactions={transactionsForCategory}\n            onSelectMonth={onSelectMonth}\n          />\n          <GenericEntitiesSection\n            key={`payees-${selectedMonth || \"all\"}`}\n            emptyName=\"(no payee)\"\n            entitiesById={payeesById}\n            entityKey=\"payee_id\"\n            linkFunction={payeeId =>\n              makeLink(pages.categoryPayee.path, {\n                budgetId,\n                categoryGroupId: category.category_group_id,\n                categoryId: categoryId,\n                payeeId\n              })\n            }\n            title={\n              selectedMonth\n                ? `Payees: ${moment(selectedMonth).format(\"MMMM\")}`\n                : \"Payees\"\n            }\n            transactions={transactionsForMonth || transactionsForCategory}\n            selectedEntityId={selectedPayeeId}\n            onClickEntity={onSelectPayee}\n            limitShowing\n          />\n          {selectedMonth &&\n            transactionsForMonth.length > 0 && (\n              <TransactionsByMonthSection\n                key={`transactions-${selectedMonth ||\n                  \"all\"}-${selectedPayeeId || \"all\"}`}\n                categoriesById={categoriesById}\n                payeesById={payeesById}\n                transactions={transactionsForMonth}\n                selectedMonth={selectedMonth}\n                selectedPayeeId={selectedPayeeId}\n              />\n            )}\n        </Fragment>\n      }\n    />\n  );\n};\n\nCategoryPage.propTypes = {\n  budget: PropTypes.shape({\n    categoriesById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        payee_id: PropTypes.string\n      })\n    ).isRequired,\n    payeesById: PropTypes.object.isRequired\n  }).isRequired,\n  categoryId: PropTypes.string.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSelectPayee: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string,\n  selectedPayeeId: PropTypes.string\n};\n\nexport default CategoryPage;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\n\nconst CategoryPayeePage = ({\n  budget,\n  categoryId,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  location,\n  months,\n  payeeId,\n  selectedMonth,\n  sidebarTrigger,\n  title,\n  transactions,\n  onSelectMonth,\n  onSetExclusion\n}) => {\n  const { categoriesById, payeesById } = budget;\n  const transactionsForCategoryAndPayee = transactions.filter(\n    transaction =>\n      transaction.category_id === categoryId && transaction.payee_id === payeeId\n  );\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            months={months}\n            selectedMonth={selectedMonth}\n            transactions={transactionsForCategoryAndPayee}\n            onSelectMonth={onSelectMonth}\n            onSetExclusion={onSetExclusion}\n          />\n          {selectedMonth && (\n            <TransactionsByMonthSection\n              categoriesById={categoriesById}\n              payeesById={payeesById}\n              selectedMonth={selectedMonth}\n              transactions={transactionsForCategoryAndPayee}\n              limitShowing={false}\n            />\n          )}\n        </Fragment>\n      }\n    />\n  );\n};\n\nCategoryPayeePage.propTypes = {\n  budget: PropTypes.shape({\n    payeesById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    categoriesById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  categoryId: PropTypes.string.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  payeeId: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      payee_id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string\n};\n\nexport default CategoryPayeePage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  primaryColor,\n  lightPrimaryColor,\n  negativeChartColor\n} from \"../styleVariables\";\nimport MonthlyChart from \"./MonthlyChart\";\n\nconst IncomeVsExpensesChart = ({ data, onSelectMonth, selectedMonth }) => (\n  <MonthlyChart\n    data={data}\n    height={160}\n    selectedMonth={selectedMonth}\n    series={[\n      { color: lightPrimaryColor, valueFunction: d => d.income },\n      { color: negativeChartColor, valueFunction: d => d.expenses },\n      {\n        type: \"line\",\n        color: primaryColor,\n        valueFunction: d => d.income + d.expenses\n      }\n    ]}\n    onSelectMonth={onSelectMonth}\n  />\n);\n\nIncomeVsExpensesChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      expenses: PropTypes.number.isRequired,\n      income: PropTypes.number.isRequired,\n      month: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string\n};\n\nexport default IncomeVsExpensesChart;\n","import React, { Component, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\nimport ListItem from \"./ListItem\";\nimport ToggleNode from \"./ToggleNode\";\n\nconst INDENTATION = 18;\n\nclass BreakdownNode extends Component {\n  static propTypes = {\n    amount: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n    isTopLevel: PropTypes.bool.isRequired,\n    name: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n    nodes: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ),\n    valueRenderer: PropTypes.func\n  };\n\n  state = { expanded: false, childrenMounted: false };\n\n  handleToggleExpand = () => {\n    const { expanded, childrenMounted } = this.state;\n\n    if (childrenMounted) {\n      this.setState({ expanded: !expanded });\n    } else {\n      this.setState({ childrenMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ expanded: true });\n      });\n    }\n  };\n\n  render() {\n    const { name, id, amount, nodes, isTopLevel, valueRenderer } = this.props;\n    const { expanded, childrenMounted } = this.state;\n    const hasChildNodes = !!nodes && nodes.length > 0;\n\n    return (\n      <Container hasChildNodes={hasChildNodes} isTopLevel={isTopLevel}>\n        {hasChildNodes ? (\n          <ToggleNode\n            id={id}\n            name={name}\n            amount={amount}\n            expanded={expanded}\n            onToggle={this.handleToggleExpand}\n            valueRenderer={valueRenderer}\n          />\n        ) : (\n          <LeafNode\n            id={id}\n            name={name}\n            amount={amount}\n            valueRenderer={valueRenderer}\n          />\n        )}\n\n        {hasChildNodes &&\n          childrenMounted && (\n            <AnimateHeight isExpanded={expanded}>\n              <Nodes nodes={nodes} valueRenderer={valueRenderer} />\n            </AnimateHeight>\n          )}\n      </Container>\n    );\n  }\n}\n\nclass Nodes extends PureComponent {\n  render() {\n    const { nodes, valueRenderer } = this.props;\n    return (\n      <div style={{ paddingLeft: INDENTATION }}>\n        {nodes.map(node => (\n          <BreakdownNode\n            {...node}\n            key={node.id}\n            isTopLevel={false}\n            valueRenderer={valueRenderer}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst NodeWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n  user-select: none;\n\n  ${ListItem}:first-child > & {\n    padding-top: 0;\n  }\n`;\n\nconst LeafNode = ({ name, id, amount, valueRenderer }) => (\n  <NodeWrapper>\n    <SecondaryText>{name}</SecondaryText>\n    {valueRenderer ? (\n      valueRenderer({ amount, id })\n    ) : (\n      <SecondaryText>\n        <Amount amount={amount} />\n      </SecondaryText>\n    )}\n  </NodeWrapper>\n);\n\nconst Container = ({ isTopLevel, hasChildNodes, children }) =>\n  isTopLevel ? (\n    <ListItem style={{ display: \"block\", padding: 0 }}>{children}</ListItem>\n  ) : (\n    children\n  );\n\nexport default BreakdownNode;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BreakdownNode from \"./BreakdownNode\";\n\nconst Breakdown = ({ nodes, valueRenderer }) =>\n  nodes.map(({ id, name, amount, nodes }) => (\n    <BreakdownNode\n      key={id}\n      id={id}\n      name={name}\n      amount={amount}\n      nodes={nodes}\n      valueRenderer={valueRenderer}\n      isTopLevel\n    />\n  ));\n\nBreakdown.propTypes = {\n  nodes: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n      name: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n      nodes: PropTypes.array\n    })\n  ).isRequired,\n  valueRenderer: PropTypes.func\n};\n\nBreakdown.defaultProps = { reverse: false };\n\nexport default Breakdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport concat from \"lodash/fp/concat\";\nimport mapRaw from \"lodash/fp/map\";\nimport omit from \"lodash/fp/omit\";\nimport pick from \"lodash/fp/pick\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { sumByProp, groupByProp } from \"../dataUtils\";\nimport { getPayeeNodes } from \"../budgetUtils\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\n\nconst map = mapRaw.convert({ cap: false });\n\nconst ExpensesBreakdown = ({\n  categoriesById,\n  categoryGroupsById,\n  transactions,\n  totalIncome,\n  payeesById,\n  divideBy\n}) => {\n  const categoryNodes = compose([\n    map((transactions, categoryId) => {\n      const payeeNodes = getPayeeNodes({ payeesById, transactions }, divideBy);\n      return {\n        ...pick([\"id\", \"name\", \"category_group_id\"])(\n          categoriesById[categoryId]\n        ),\n        nodes: sortBy(\"amount\")(payeeNodes),\n        amount: sumByProp(\"amount\")(payeeNodes)\n      };\n    }),\n    groupByProp(\"category_id\")\n  ])(transactions);\n\n  const groupNodes = compose([\n    map((nodes, categoryGroupId) => {\n      const categoryNodes = map(omit(\"category_group_id\"))(nodes);\n      return {\n        ...pick([\"id\", \"name\"])(categoryGroupsById[categoryGroupId]),\n        nodes: sortBy(\"amount\")(categoryNodes),\n        amount: sumByProp(\"amount\")(categoryNodes)\n      };\n    }),\n    groupByProp(\"category_group_id\")\n  ])(categoryNodes);\n\n  const rootPayeeNodes = getPayeeNodes(\n    {\n      payeesById,\n      transactions: transactions.filter(transaction => !transaction.category_id)\n    },\n    divideBy\n  );\n\n  const nodes = compose([\n    nodes =>\n      concat(nodes)([\n        {\n          id: \"net\",\n          amount: -totalIncome - sumByProp(\"amount\")(nodes),\n          name: \"Net Income\"\n        }\n      ]),\n    sortBy(\"amount\"),\n    concat(rootPayeeNodes)\n  ])(groupNodes);\n\n  return (\n    <CollapsibleSection title=\"Expenses Breakdown\">\n      <Breakdown\n        nodes={nodes}\n        valueRenderer={node => (\n          <AmountWithPercentage {...node} positiveIsRed total={-totalIncome} />\n        )}\n      />\n    </CollapsibleSection>\n  );\n};\n\nExpensesBreakdown.propTypes = {\n  categoriesById: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      category_group_id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  categoryGroupsById: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  divideBy: PropTypes.number.isRequired,\n  payeesById: PropTypes.objectOf(PropTypes.object).isRequired,\n  totalIncome: PropTypes.number.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      category_id: PropTypes.string\n    })\n  ).isRequired\n};\n\nExpensesBreakdown.defaultProps = { divideBy: 1 };\n\nexport default ExpensesBreakdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport { getPayeeNodes } from \"../budgetUtils\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\n\nconst IncomeBreakdown = ({ transactions, payeesById, divideBy }) => {\n  const nodes = getPayeeNodes({ payeesById, transactions }, divideBy);\n  const total = sumBy(\"amount\")(nodes);\n  return (\n    <CollapsibleSection title=\"Income Breakdown\">\n      <Breakdown\n        nodes={sortBy(\"amount\")(nodes).reverse()}\n        total={total}\n        valueRenderer={node => <AmountWithPercentage {...node} total={total} />}\n      />\n    </CollapsibleSection>\n  );\n};\n\nIncomeBreakdown.propTypes = {\n  divideBy: PropTypes.number.isRequired,\n  payeesById: PropTypes.objectOf(PropTypes.object).isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      categoryId: PropTypes.string\n    })\n  ).isRequired\n};\n\nIncomeBreakdown.defaultProps = { divideBy: 1 };\n\nexport default IncomeBreakdown;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { sumByProp } from \"../dataUtils\";\nimport ExpensesBreakdown from \"./ExpensesBreakdown\";\nimport IncomeBreakdown from \"./IncomeBreakdown\";\n\nconst Breakdowns = ({\n  categoriesById,\n  categoryGroupsById,\n  payeesById,\n  expenseTransactions,\n  incomeTransactions,\n  divideBy\n}) => (\n  <Fragment>\n    <ExpensesBreakdown\n      categoriesById={categoriesById}\n      categoryGroupsById={categoryGroupsById}\n      payeesById={payeesById}\n      transactions={expenseTransactions}\n      totalIncome={sumByProp(\"amount\")(incomeTransactions) / divideBy}\n      divideBy={divideBy}\n    />\n    <IncomeBreakdown\n      payeesById={payeesById}\n      transactions={incomeTransactions}\n      divideBy={divideBy}\n    />\n  </Fragment>\n);\n\nBreakdowns.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  categoryGroupsById: PropTypes.object.isRequired,\n  expenseTransactions: PropTypes.array.isRequired,\n  incomeTransactions: PropTypes.array.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  divideBy: PropTypes.number.isRequired\n};\n\nexport default Breakdowns;\n","import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport find from \"lodash/fp/find\";\nimport flatMap from \"lodash/fp/flatMap\";\nimport mapRaw from \"lodash/fp/map\";\nimport matchesProperty from \"lodash/fp/matchesProperty\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { sumByProp, groupBy, simpleMemoize } from \"../dataUtils\";\nimport { getTransactionMonth, isIncome } from \"../budgetUtils\";\nimport { SecondaryText } from \"./typeComponents\";\nimport PageLayout from \"./PageLayout\";\nimport IncomeVsExpensesChart from \"./IncomeVsExpensesChart\";\nimport Breakdowns from \"./Breakdowns\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport MonthByMonthSettingsModal from \"./MonthByMonthSettingsModal\";\nimport { useSelectedMonth } from \"../commonHooks\";\n\nconst map = mapRaw.convert({ cap: false });\n\nconst getSummaries = simpleMemoize((transactions, investmentAccounts, budget) =>\n  compose([\n    sortBy(\"month\"),\n    map((transactions, month) => {\n      const grouped = groupBy(isIncome(budget))(transactions);\n\n      return {\n        month,\n        expenseTransactions: grouped.false || [],\n        incomeTransactions: grouped.true || [],\n        income: sumByProp(\"amount\")(grouped.true || []),\n        expenses: sumByProp(\"amount\")(grouped.false || [])\n      };\n    }),\n    groupBy(getTransactionMonth)\n  ])(transactions)\n);\n\nconst IncomeVsExpensesPage = ({\n  budget,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  investmentAccounts,\n  location,\n  sidebarTrigger,\n  title,\n  transactions,\n  onSetExclusion\n}) => {\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\n  const [settingsModalOpen, setSettingsModalOpen] = useState(false);\n  const [showTotals, setShowTotals] = useState(false);\n  const { categoriesById, categoryGroupsById, payeesById } = budget;\n\n  const allSummaries = getSummaries(transactions, investmentAccounts, budget);\n  const summaries = selectedMonth\n    ? [find(matchesProperty(\"month\", selectedMonth))(allSummaries)]\n    : allSummaries;\n\n  const incomeTransactions = flatMap(summary => summary.incomeTransactions)(\n    summaries\n  );\n  const expenseTransactions = flatMap(summary => summary.expenseTransactions)(\n    summaries\n  );\n\n  const totalExpenses = sumByProp(\"amount\")(expenseTransactions);\n  const totalIncome = sumByProp(\"amount\")(incomeTransactions);\n  const denominator = showTotals ? 1 : summaries.length;\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <CollapsibleSection\n            title=\"Monthly Trend\"\n            hasSettings\n            onClickSettings={() => {\n              setSettingsModalOpen(true);\n            }}\n            actions={\n              <SecondaryText\n                onClick={() => {\n                  setShowTotals(!showTotals);\n                }}\n              >\n                {showTotals ? \"show average\" : \"show total\"}\n              </SecondaryText>\n            }\n          >\n            <ChartNumbers\n              numbers={[\n                {\n                  label: \"net income\",\n                  amount: -(totalExpenses + totalIncome) / denominator\n                },\n                {\n                  label: \"expenses\",\n                  amount: totalExpenses / denominator\n                },\n                {\n                  label: \"income\",\n                  amount: -totalIncome / denominator\n                }\n              ]}\n            />\n            <IncomeVsExpensesChart\n              data={allSummaries}\n              selectedMonth={selectedMonth}\n              onSelectMonth={onSelectMonth}\n            />\n            <MonthByMonthSettingsModal\n              excludeFirstMonth={excludeFirstMonth}\n              excludeLastMonth={excludeLastMonth}\n              open={settingsModalOpen}\n              onClose={() => {\n                setSettingsModalOpen(false);\n              }}\n              onSetExclusion={onSetExclusion}\n            />\n          </CollapsibleSection>\n          <Breakdowns\n            categoriesById={categoriesById}\n            categoryGroupsById={categoryGroupsById}\n            payeesById={payeesById}\n            expenseTransactions={expenseTransactions}\n            incomeTransactions={incomeTransactions}\n            divideBy={showTotals ? 1 : summaries.length}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nIncomeVsExpensesPage.propTypes = {\n  budget: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    months: PropTypes.arrayOf(\n      PropTypes.shape({\n        month: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.object.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onSetExclusion: PropTypes.func.isRequired\n};\n\nexport default IncomeVsExpensesPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport includes from \"lodash/fp/includes\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport { groupBy } from \"../dataUtils\";\nimport {\n  primaryColor,\n  lightPrimaryColor,\n  negativeChartColor\n} from \"../styleVariables\";\nimport MonthlyChart from \"./MonthlyChart\";\n\nconst CREDIT_ACCOUNTS = [\"mortgage\", \"creditCard\"];\nconst getStack = ({ type, id, mortgageAccounts }) => {\n  if (mortgageAccounts[id]) {\n    return \"liability\";\n  }\n\n  return includes(type)(CREDIT_ACCOUNTS) ? \"liability\" : \"asset\";\n};\n\nconst NetWorthChart = ({\n  data,\n  months,\n  mortgageAccounts,\n  selectedMonth,\n  onSelectMonth\n}) => {\n  const groupedData = groupBy(d =>\n    getStack({ type: d.type, id: d.id, mortgageAccounts })\n  )(data);\n  const monthlyData = months.map((month, index) => ({\n    month,\n    assets: sumBy(d => d.data[index])(groupedData.asset),\n    liabilities: sumBy(d => d.data[index])(groupedData.liability)\n  }));\n\n  return (\n    <MonthlyChart\n      selectedMonth={selectedMonth}\n      onSelectMonth={onSelectMonth}\n      data={monthlyData}\n      height={160}\n      series={[\n        {\n          color: negativeChartColor,\n          valueFunction: d => Math.max(-d.liabilities, 0)\n        },\n        {\n          color: lightPrimaryColor,\n          valueFunction: d => Math.max(d.assets, 0)\n        },\n        {\n          color: primaryColor,\n          type: \"line\",\n          valueFunction: d => d.assets + d.liabilities\n        }\n      ]}\n      stacked={false}\n    />\n  );\n};\n\nNetWorthChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(PropTypes.number).isRequired,\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string\n};\n\nexport default NetWorthChart;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport every from \"lodash/fp/every\";\nimport filter from \"lodash/fp/filter\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport mapRaw from \"lodash/fp/map\";\nimport propEq from \"lodash/fp/propEq\";\nimport reject from \"lodash/fp/reject\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport startCase from \"lodash/fp/startCase\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport values from \"lodash/fp/values\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\nimport Icon from \"./Icon\";\n\nconst map = mapRaw.convert({ cap: false });\n\nconst getNodes = ({ accounts, investmentAccounts, mortgageAccounts }) => {\n  const accountsByGroup = groupBy(account => {\n    if (investmentAccounts[account.id]) {\n      return \"Investments\";\n    }\n\n    if (mortgageAccounts[account.id]) {\n      return \"Mortgages\";\n    }\n\n    return startCase(account.type);\n  })(accounts);\n\n  return compose([\n    accounts => accounts.reverse(),\n    sortBy(\"amount\"),\n    map((accounts, name) => ({\n      name,\n      accounts,\n      amount: sumBy(\"balance\")(accounts),\n      id: name,\n      nodes: compose([\n        sortBy(\"balance\"),\n        map(({ id, name, balance }) => ({\n          amount: balance,\n          id,\n          name\n        }))\n      ])(accounts)\n    }))\n  ])(accountsByGroup);\n};\n\nconst NetWorthAccounts = ({\n  accounts,\n  hiddenAccounts,\n  onToggleAccounts,\n  investmentAccounts,\n  mortgageAccounts\n}) => {\n  const accountsById = keyBy(\"id\")(accounts);\n  const visibleNodes = getNodes({\n    accounts: reject(account => hiddenAccounts[account.id])(accounts),\n    investmentAccounts,\n    mortgageAccounts\n  });\n  const hiddenNodes = getNodes({\n    accounts: filter(account => hiddenAccounts[account.id])(accounts),\n    investmentAccounts,\n    mortgageAccounts\n  });\n\n  return (\n    <Fragment>\n      <CollapsibleSection title=\"Accounts\">\n        <AccountBreakdown\n          accountsById={accountsById}\n          hiddenAccounts={hiddenAccounts}\n          nodes={visibleNodes}\n          onToggleAccounts={onToggleAccounts}\n        />\n      </CollapsibleSection>\n\n      {values(hiddenNodes).length > 0 && (\n        <CollapsibleSection title=\"Hidden Accounts\">\n          <AccountBreakdown\n            accountsById={accountsById}\n            hiddenAccounts={hiddenAccounts}\n            nodes={hiddenNodes}\n            onToggleAccounts={onToggleAccounts}\n          />\n        </CollapsibleSection>\n      )}\n    </Fragment>\n  );\n};\n\nNetWorthAccounts.propTypes = {\n  accounts: PropTypes.arrayOf(\n    PropTypes.shape({\n      balance: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  hiddenAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onToggleAccounts: PropTypes.func.isRequired\n};\n\nconst AccountBreakdown = ({\n  accountsById,\n  hiddenAccounts,\n  nodes,\n  onToggleAccounts\n}) => (\n  <Breakdown\n    nodes={nodes}\n    valueRenderer={({ id, amount }) => {\n      const node = nodes.find(propEq(\"id\", id));\n      const accounts = node ? node.accounts : [accountsById[id]];\n\n      return (\n        <SecondaryText style={{ display: \"flex\", alignItems: \"center\" }}>\n          <Amount amount={amount} />\n          <div\n            style={{ width: 36, textAlign: \"center\" }}\n            onClick={evt => {\n              evt.stopPropagation();\n              onToggleAccounts({ ids: map(\"id\")(accounts) });\n            }}\n          >\n            {every(account => hiddenAccounts[account.id])(accounts) ? (\n              <Icon icon=\"eye-slash\" />\n            ) : (\n              <Icon icon=\"eye\" />\n            )}\n          </div>\n        </SecondaryText>\n      );\n    }}\n  />\n);\n\nexport default NetWorthAccounts;\n","import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport constant from \"lodash/fp/constant\";\nimport eq from \"lodash/fp/eq\";\nimport filter from \"lodash/fp/filter\";\nimport findIndex from \"lodash/fp/findIndex\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport identity from \"lodash/fp/identity\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport keys from \"lodash/fp/keys\";\nimport last from \"lodash/fp/last\";\nimport map from \"lodash/fp/map\";\nimport mapValues from \"lodash/fp/mapValues\";\nimport omitBy from \"lodash/fp/omitBy\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sum from \"lodash/fp/sum\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport values from \"lodash/fp/values\";\nimport { simpleMemoize } from \"../dataUtils\";\nimport { useSelectedMonth } from \"../commonHooks\";\nimport { getSetting, setSetting } from \"../uiRepo\";\nimport PageLayout from \"./PageLayout\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport NetWorthChart from \"./NetWorthChart\";\nimport NetWorthAccounts from \"./NetWorthAccounts\";\n\nconst useHiddenAccounts = budget => {\n  const [hiddenAccounts, setHiddenAccounts] = useState(\n    getSetting(\"netWorthHiddenAccounts\", budget.id)\n  );\n\n  const onToggleHiddenAccounts = ({ ids }) => {\n    const shouldHide = ids.some(id => !hiddenAccounts[id]);\n    const newHiddenAccounts = ids.reduce(\n      (acc, id) => ({ ...acc, [id]: shouldHide }),\n      hiddenAccounts\n    );\n\n    setHiddenAccounts(newHiddenAccounts);\n    setSetting(\"netWorthHiddenAccounts\", budget.id, newHiddenAccounts);\n  };\n\n  return { hiddenAccounts, onToggleHiddenAccounts };\n};\n\nconst cumulative = arr =>\n  arr.reduce(\n    (acc, curr) => (acc.length === 0 ? [curr] : acc.concat(last(acc) + curr)),\n    []\n  );\n\nconst groupByMonthAndAccount = simpleMemoize(\n  compose([\n    mapValues(groupBy(\"account_id\")),\n    groupBy(({ date }) => date.slice(0, 7))\n  ])\n);\n\nconst getMonths = simpleMemoize(budget =>\n  compose([sortBy(identity), keys, groupByMonthAndAccount])(budget.transactions)\n);\n\nconst getSummaryByAccount = simpleMemoize(budget => {\n  const groupedTransactions = groupByMonthAndAccount(budget.transactions);\n  const months = getMonths(budget);\n  return map(({ id }) => ({\n    id,\n    data: compose([\n      cumulative,\n      map(month => sumBy(\"amount\")(groupedTransactions[month][id]))\n    ])(months)\n  }))(budget.accounts);\n});\n\nconst getSelectedBalances = simpleMemoize((selectedMonth, budget) => {\n  const months = getMonths(budget);\n  const selectedMonthIndex = findIndex(eq(selectedMonth))(months);\n  const accountSummaries = getSummaryByAccount(budget);\n\n  return compose([\n    mapValues(\n      ({ data }) =>\n        selectedMonthIndex > -1 ? data[selectedMonthIndex] : last(data)\n    ),\n    keyBy(\"id\")\n  ])(accountSummaries);\n});\n\nconst NetWorthPage = ({\n  budget,\n  historyAction,\n  investmentAccounts,\n  location,\n  mortgageAccounts,\n  sidebarTrigger,\n  title\n}) => {\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\n  const { hiddenAccounts, onToggleHiddenAccounts } = useHiddenAccounts(budget);\n  const months = getMonths(budget);\n  const accountSummaries = getSummaryByAccount(budget);\n  const selectedBalances = getSelectedBalances(selectedMonth, budget);\n  const filterHidden = omitBy((_, id) => hiddenAccounts[id]);\n  const selectedLiabilities = compose([\n    sum,\n    filter(b => b < 0),\n    values,\n    filterHidden\n  ])(selectedBalances);\n  const selectedAssets = compose([\n    sum,\n    filter(b => b > 0),\n    values,\n    filterHidden\n  ])(selectedBalances);\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <CollapsibleSection title=\"Monthly Trend\">\n            <ChartNumbers\n              numbers={[\n                {\n                  amount: -(selectedAssets + selectedLiabilities),\n                  label: \"Net Worth\"\n                },\n                { amount: -selectedAssets, label: \"Assets\" },\n                { amount: selectedLiabilities, label: \"Liabilities\" }\n              ]}\n              alwaysRound\n            />\n            <NetWorthChart\n              data={map(({ id, data }) => ({\n                data: hiddenAccounts[id] ? data.map(constant(0)) : data,\n                type: budget.accountsById[id].type,\n                id\n              }))(accountSummaries)}\n              months={months}\n              mortgageAccounts={mortgageAccounts}\n              selectedMonth={selectedMonth}\n              onSelectMonth={onSelectMonth}\n            />\n          </CollapsibleSection>\n          <NetWorthAccounts\n            accounts={map(account => ({\n              ...account,\n              balance: selectedBalances[account.id]\n            }))(budget.accounts)}\n            hiddenAccounts={hiddenAccounts}\n            investmentAccounts={investmentAccounts}\n            mortgageAccounts={mortgageAccounts}\n            onToggleAccounts={onToggleHiddenAccounts}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nNetWorthPage.propTypes = {\n  budget: PropTypes.shape({\n    accounts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    accountsById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        account_id: PropTypes.string.isRequired,\n        amount: PropTypes.number.isRequired,\n        date: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  location: PropTypes.string.isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default NetWorthPage;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/fp/keys\";\nimport get from \"lodash/fp/get\";\nimport EmptyText from \"./EmptyText\";\nimport { Link } from \"react-router-dom\";\nimport pages, { makeLink } from \"../pages\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport {\n  useMonthExclusions,\n  useSelectedEntityId,\n  useSelectedMonth\n} from \"../commonHooks\";\n\nconst isContribution = investmentAccounts => transaction =>\n  !!investmentAccounts[transaction.account_id] &&\n  !!transaction.transfer_account_id &&\n  !investmentAccounts[transaction.transfer_account_id];\n\nconst isCapitalGainOrLoss = (investmentAccounts, payeesById) => transaction =>\n  !!investmentAccounts[transaction.account_id] &&\n  !transaction.transfer_account_id &&\n  get([transaction.payee_id, \"name\"])(payeesById) !== \"Starting Balance\";\n\nconst isInvestmentTransaction = (\n  investmentAccounts,\n  payeesById\n) => transaction =>\n  isContribution(investmentAccounts)(transaction) ||\n  isCapitalGainOrLoss(investmentAccounts, payeesById)(transaction);\n\nconst InvestmentsPage = ({\n  budget,\n  historyAction,\n  investmentAccounts,\n  location,\n  sidebarTrigger,\n  title\n}) => {\n  const {\n    excludeFirstMonth,\n    excludeLastMonth,\n    months,\n    onSetExclusion\n  } = useMonthExclusions(budget);\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\n  const [selectedBreakdown, onSelectBreakdown] = useSelectedEntityId();\n\n  const { payeesById } = budget;\n\n  if (keys(investmentAccounts).length === 0) {\n    return (\n      <EmptyText>\n        You don't have any accounts marked as investment accounts.{\" \"}\n        <Link to={makeLink(pages.settings.path, { budgetId: budget.id })}>\n          Go to Settings\n        </Link>\n      </EmptyText>\n    );\n  }\n\n  const investmentTransactions = budget.transactions\n    .filter(isInvestmentTransaction(investmentAccounts, payeesById))\n    .map(transaction => ({ ...transaction, amount: -transaction.amount }));\n  const transactionsInMonth =\n    selectedMonth &&\n    investmentTransactions.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            highlightFunction={\n              selectedBreakdown &&\n              (transaction =>\n                selectedBreakdown === \"contribution\"\n                  ? isContribution(investmentAccounts)(transaction)\n                  : isCapitalGainOrLoss(investmentAccounts, payeesById)(\n                      transaction\n                    ))\n            }\n            months={months}\n            selectedMonth={selectedMonth}\n            transactions={investmentTransactions}\n            onSelectMonth={onSelectMonth}\n            onSetExclusion={onSetExclusion}\n          />\n          <GenericEntitiesSection\n            transactions={transactionsInMonth || investmentTransactions}\n            entitiesById={{\n              contribution: { name: \"Contributions\" },\n              capitalGain: { name: \"Capital Gains/Losses\" }\n            }}\n            title=\"Growth Breakdown\"\n            onClickEntity={onSelectBreakdown}\n            selectedEntityId={selectedBreakdown}\n            entityFunction={transaction =>\n              isContribution(investmentAccounts)(transaction)\n                ? \"contribution\"\n                : \"capitalGain\"\n            }\n            positiveIsRed\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nInvestmentsPage.propTypes = {\n  budget: PropTypes.object.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.object.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default InvestmentsPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  primaryColor,\n  negativeColor,\n  selectedPlotBandColor\n} from \"../styleVariables\";\nimport Chart from \"./Chart\";\n\nconst ProjectionsChart = ({\n  investmentsProjection,\n  mortgageProjection,\n  amountNeededToRetire,\n  yearsUntilRetirement\n}) => (\n  <Chart\n    options={{\n      chart: {\n        type: \"column\"\n      },\n      xAxis: {\n        type: \"category\",\n        plotBands: [\n          {\n            color: selectedPlotBandColor,\n            from: Math.floor(yearsUntilRetirement) - 0.5,\n            to: Math.floor(yearsUntilRetirement) + 0.5\n          }\n        ]\n      },\n      yAxis: {\n        title: { text: null },\n        endOnTick: false,\n        plotLines: [\n          {\n            value: amountNeededToRetire,\n            color: \"#ccc\",\n            width: 1\n          }\n        ]\n      },\n      legend: {\n        enabled: false\n      },\n      series: [\n        { data: investmentsProjection, color: primaryColor, borderWidth: 0 },\n        { data: mortgageProjection, color: negativeColor, borderWidth: 0 }\n      ]\n    }}\n  />\n);\n\nProjectionsChart.propTypes = {\n  amountNeededToRetire: PropTypes.number.isRequired,\n  investmentsProjection: PropTypes.arrayOf(PropTypes.number).isRequired,\n  mortgageProjection: PropTypes.arrayOf(PropTypes.number).isRequired,\n  yearsUntilRetirement: PropTypes.number.isRequired\n};\n\nexport default ProjectionsChart;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst isDescendant = (parent, child) => {\n  let node = child.parentNode;\n  while (node !== null) {\n    if (node === parent) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n  return false;\n};\n\nclass ClickOff extends Component {\n  static propTypes = {\n    children: PropTypes.func.isRequired,\n    onClickOff: PropTypes.func\n  };\n\n  parent = null;\n\n  componentDidMount() {\n    document.body.addEventListener(\"click\", this.handleBodyClick);\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener(\"click\", this.handleBodyClick);\n  }\n\n  handleBodyClick = evt => {\n    if (this.props.onClickOff && !isDescendant(this.parent, evt.target)) {\n      this.props.onClickOff();\n    }\n  };\n\n  render() {\n    return this.props.children({\n      ref: el => {\n        this.parent = el;\n      }\n    });\n  }\n}\n\nexport default ClickOff;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport ClickOff from \"./ClickOff\";\nimport Button from \"./Button\";\n\nconst bodyEl = document.getElementsByTagName(\"body\")[0];\n\nconst Container = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: #fff;\n`;\n\nconst ProjectionsSlider = ({\n  name,\n  formatter,\n  label,\n  value,\n  onBlur,\n  onChange,\n  onReset,\n  rangeOptions\n}) =>\n  createPortal(\n    <ClickOff onClickOff={name && onBlur}>\n      {({ ref }) => (\n        <Container ref={ref}>\n          <AnimateHeight isExpanded={!!name}>\n            <div style={{ borderTop: \"1px solid #bbb\", padding: \"15px 20px\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  marginBottom: 15\n                }}\n              >\n                {label}: {formatter(value || 0)}\n                <Button\n                  onClick={() => {\n                    onReset(name);\n                  }}\n                >\n                  reset\n                </Button>\n              </div>\n              <Range\n                {...rangeOptions}\n                name={name}\n                value={value || 0}\n                onChange={onChange}\n              />\n            </div>\n          </AnimateHeight>\n        </Container>\n      )}\n    </ClickOff>,\n    bodyEl\n  );\n\nProjectionsSlider.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n  formatter: PropTypes.func,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.number\n};\n\nProjectionsSlider.defaultProps = {\n  formatter: val => val\n};\n\nconst Range = ({ name, onReset, ...other }) => (\n  <input\n    {...other}\n    name={name}\n    type=\"range\"\n    style={{ display: \"block\", width: \"100%\" }}\n  />\n);\n\nexport default ProjectionsSlider;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport chunk from \"lodash/fp/chunk\";\nimport compose from \"lodash/fp/compose\";\nimport get from \"lodash/fp/get\";\nimport head from \"lodash/fp/head\";\nimport map from \"lodash/fp/map\";\nimport pick from \"lodash/fp/pick\";\nimport range from \"lodash/fp/range\";\nimport { simpleMemoize, keyByProp } from \"../dataUtils\";\nimport { selectedPlotBandColor } from \"../styleVariables\";\nimport {\n  getMortgageRate,\n  getReturnOnInvestments,\n  getAverageContribution,\n  getCurrentInvestments,\n  getAverageExpensesWithoutMortgage,\n  getProjection,\n  getProjectionWithRetirement\n} from \"../projectionUtils\";\nimport PageLayout from \"./PageLayout\";\nimport Icon from \"./Icon\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ProjectionsChart from \"./ProjectionsChart\";\nimport ProjectionsSlider from \"./ProjectionsSlider\";\nimport ChartNumbers from \"./ChartNumbers\";\n\nconst YEARS_TO_PROJECT = 50;\n\nconst adjustableEntries = [\n  {\n    label: \"Average monthly contribution\",\n    name: \"averageContribution\",\n    formatter: val => `$${Math.round(val)}`\n  },\n  {\n    label: \"Average return on investments\",\n    name: \"returnOnInvestments\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  },\n  {\n    label: \"Average expenses without mortgage\",\n    name: \"averageExpenses\",\n    formatter: val => `$${Math.round(val)}`\n  },\n  {\n    label: \"Return on investment after retirement\",\n    name: \"retirementReturns\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  },\n  {\n    label: \"Average tax rate after retirement\",\n    name: \"retirementTaxRate\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  }\n];\n\nconst adjustableEntriesByName = keyByProp(\"name\")(adjustableEntries);\n\nconst getInitialState = simpleMemoize(\n  (budget, investmentAccounts, mortgageAccounts) => {\n    const {\n      paymentsLeft: remainingMortgagePayments,\n      mortgagePayment,\n      principalProjection: mortgageProjection\n    } = getMortgageRate(budget, mortgageAccounts) || {};\n    const returnOnInvestments = getReturnOnInvestments(\n      budget,\n      investmentAccounts\n    );\n    const averageContribution = getAverageContribution(\n      budget,\n      investmentAccounts\n    );\n    const currentInvestments = getCurrentInvestments(\n      budget,\n      investmentAccounts\n    );\n    const averageExpenses = getAverageExpensesWithoutMortgage(\n      budget,\n      investmentAccounts,\n      mortgageAccounts\n    );\n\n    return {\n      mortgagePayment,\n      remainingMortgagePayments,\n      mortgageProjection,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      averageExpenses,\n      retirementReturns: 0.04,\n      retirementTaxRate: 0.15,\n      maxAverageExpenses: Math.ceil((averageExpenses * 2) / 1000) * 1000,\n      maxAverageContribution: Math.ceil((averageContribution * 2) / 1000) * 1000\n    };\n  }\n);\n\nclass ProjectionsPage extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      transactions: PropTypes.array.isRequired\n    }).isRequired,\n    historyAction: PropTypes.string.isRequired,\n    investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    location: PropTypes.string.isRequired,\n    mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    sidebarTrigger: PropTypes.node.isRequired,\n    title: PropTypes.string.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...getInitialState(\n        props.budget,\n        props.investmentAccounts,\n        props.mortgageAccounts\n      ),\n      adjustingName: null\n    };\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: parseFloat(e.target.value) });\n  };\n\n  handleSelectAdjusting = name => {\n    this.setState(state => ({\n      adjustingName: state.adjustingName === name ? null : name\n    }));\n  };\n\n  handleClearSelection = () => {\n    this.setState({ adjustingName: null });\n  };\n\n  handleResetCalculation = calculation => {\n    const { budget, investmentAccounts, mortgageAccounts } = this.props;\n    this.setState(\n      pick(calculation)(\n        getInitialState(budget, investmentAccounts, mortgageAccounts)\n      )\n    );\n  };\n\n  render() {\n    const { historyAction, location, sidebarTrigger, title } = this.props;\n    const {\n      mortgagePayment,\n      remainingMortgagePayments,\n      mortgageProjection,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      averageExpenses,\n      retirementReturns,\n      retirementTaxRate,\n      maxAverageExpenses,\n      maxAverageContribution,\n      adjustingName\n    } = this.state;\n\n    const projection = getProjection({\n      numMonths: YEARS_TO_PROJECT * 12,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments\n    });\n    const monthlyRetirementReturn = (1 + retirementReturns) ** (1 / 12) - 1;\n    const amountNeededToRetire =\n      averageExpenses / (monthlyRetirementReturn * (1 - retirementTaxRate));\n    let m = 0;\n\n    while (m < projection.length) {\n      if (m < remainingMortgagePayments) {\n        const remainingMortgage = range(\n          0,\n          remainingMortgagePayments - m\n        ).reduce(\n          (acc, curr) =>\n            acc +\n            mortgagePayment /\n              (1 + monthlyRetirementReturn * (1 - retirementTaxRate)) ** curr,\n          0\n        );\n        if (\n          (projection[m] - remainingMortgage) *\n            monthlyRetirementReturn *\n            (1 - retirementTaxRate) >\n          averageExpenses\n        ) {\n          break;\n        }\n      } else {\n        if (\n          projection[m] * monthlyRetirementReturn * (1 - retirementTaxRate) >\n          averageExpenses\n        ) {\n          break;\n        }\n      }\n      m += 1;\n    }\n\n    const projectionWithRetirement = getProjectionWithRetirement({\n      numMonths: YEARS_TO_PROJECT * 12,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      monthsBeforeRetirement: m,\n      monthlyExpenses: averageExpenses,\n      retirementReturns,\n      retirementTaxRate,\n      remainingMortgagePayments,\n      mortgagePayment\n    });\n    const hasMortgage = !!mortgagePayment;\n\n    const yearsUntilRetirement = m / 12;\n    const projectionByYear = compose([map(head), chunk(12)])(\n      projectionWithRetirement\n    );\n    const mortgageProjectionByYear = compose([map(head), chunk(12)])(\n      mortgageProjection\n    );\n\n    const nameToRangeOptions = {\n      averageContribution: { min: 0, max: maxAverageContribution, step: 50 },\n      returnOnInvestments: { min: 0, max: 0.2, step: 0.001 },\n      averageExpenses: { min: 0, max: maxAverageExpenses, step: 50 },\n      retirementReturns: { min: 0, max: 0.2, step: 0.001 },\n      retirementTaxRate: { min: 0, max: 0.5, step: 0.001 }\n    };\n\n    return (\n      <PageLayout\n        historyAction={historyAction}\n        location={location}\n        sidebarTrigger={sidebarTrigger}\n        title={title}\n        content={\n          <Fragment>\n            <CollapsibleSection title=\"Projection\">\n              <ChartNumbers\n                numbers={[\n                  {\n                    amount: -amountNeededToRetire,\n                    label: \"needed for retirement\",\n                    decimalsToRound: 0\n                  },\n                  {\n                    amount: -yearsUntilRetirement,\n                    label: \"years to retirement\",\n                    isMoney: false,\n                    decimalsToRound: 1\n                  }\n                ]}\n              />\n              <ProjectionsChart\n                investmentsProjection={projectionByYear}\n                mortgageProjection={mortgageProjectionByYear}\n                amountNeededToRetire={amountNeededToRetire}\n                yearsUntilRetirement={yearsUntilRetirement}\n              />\n            </CollapsibleSection>\n            <CollapsibleSection title=\"Assumptions\">\n              {adjustableEntries.map(({ label, name, formatter }) => (\n                <AdjustableEntry\n                  key={name}\n                  label={label}\n                  name={name}\n                  value={this.state[name]}\n                  formatter={formatter}\n                  isAdjusting={adjustingName === name}\n                  onSelect={this.handleSelectAdjusting}\n                  onReset={this.handleResetCalculation}\n                  onChange={this.handleChange}\n                />\n              ))}\n              {hasMortgage && (\n                <Fragment>\n                  <Entry\n                    label=\"Mortgage payment\"\n                    value={mortgagePayment}\n                    formatter={val => `$${val.toFixed(2)}`}\n                  />\n                  <Entry\n                    label=\"Time remaining on mortgage\"\n                    value={remainingMortgagePayments}\n                    formatter={val => `${(val / 12).toFixed(1)} years`}\n                  />\n                </Fragment>\n              )}\n            </CollapsibleSection>\n            <ProjectionsSlider\n              name={adjustingName}\n              label={get([adjustingName, \"label\"])(adjustableEntriesByName)}\n              onReset={this.handleResetCalculation}\n              onChange={this.handleChange}\n              onBlur={this.handleClearSelection}\n              formatter={get([adjustingName, \"formatter\"])(\n                adjustableEntriesByName\n              )}\n              value={this.state[adjustingName]}\n              rangeOptions={nameToRangeOptions[adjustingName]}\n            />\n          </Fragment>\n        }\n      />\n    );\n  }\n}\n\nconst AdjustableEntry = ({\n  label,\n  value,\n  formatter,\n  name,\n  onSelect,\n  isAdjusting\n}) => (\n  <Entry\n    label={label}\n    value={value}\n    formatter={formatter}\n    onClick={() => {\n      onSelect(name);\n    }}\n    highlightValue={isAdjusting}\n    isAdjustable\n  />\n);\n\nconst Entry = ({\n  label,\n  value,\n  onClick,\n  highlightValue,\n  isAdjustable,\n  formatter = a => a\n}) => (\n  <div\n    style={{\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      padding: \"2px 0\"\n    }}\n  >\n    {label}:\n    <div style={{ display: \"flex\", alignItems: \"center\" }} onClick={onClick}>\n      <strong\n        style={{\n          backgroundColor: highlightValue ? selectedPlotBandColor : null,\n          padding: isAdjustable && \"0 4px\",\n          borderRadius: 2\n        }}\n      >\n        {formatter(value)}\n      </strong>\n      {isAdjustable && <Icon icon=\"pencil\" faded style={{ marginLeft: 4 }} />}\n    </div>\n  </div>\n);\n\nexport default ProjectionsPage;\n","import moment from \"moment\";\nimport add from \"lodash/fp/add\";\nimport compose from \"lodash/fp/compose\";\nimport concat from \"lodash/fp/concat\";\nimport filter from \"lodash/fp/filter\";\nimport find from \"lodash/fp/find\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport head from \"lodash/fp/head\";\nimport identity from \"lodash/fp/identity\";\nimport includes from \"lodash/fp/includes\";\nimport keys from \"lodash/fp/keys\";\nimport last from \"lodash/fp/last\";\nimport map from \"lodash/fp/map\";\nimport matches from \"lodash/fp/matches\";\nimport multiply from \"lodash/fp/multiply\";\nimport prop from \"lodash/fp/prop\";\nimport range from \"lodash/fp/range\";\nimport reduce from \"lodash/fp/reduce\";\nimport reject from \"lodash/fp/reject\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport takeRightWhile from \"lodash/fp/takeRightWhile\";\nimport uniq from \"lodash/fp/uniq\";\nimport { getTransactionMonth } from \"./budgetUtils\";\n\nexport const getMortgageRate = (\n  { accounts, transactions: allTransactions },\n  mortgageAccounts\n) => {\n  const mortgageAccount = find(account => mortgageAccounts[account.id])(\n    accounts\n  );\n\n  if (!mortgageAccount) {\n    return null;\n  }\n\n  const transactions = compose([\n    sortBy(\"date\"),\n    filter(matches({ account_id: mortgageAccount.id }))\n  ])(allTransactions);\n  const lastMonth = compose([t => t.date.slice(0, 7), last])(transactions);\n  const lastMonthTransactions = takeRightWhile(\n    t => t.date.slice(0, 7) === lastMonth\n  )(transactions);\n\n  const P = -compose([\n    sumBy(\"amount\"),\n    takeWhile(t => t.date.slice(0, 7) !== lastMonth)\n  ])(transactions);\n  const P1 = P - sumBy(\"amount\")(lastMonthTransactions);\n  const c = compose([prop(\"amount\"), find(prop(\"transfer_account_id\"))])(\n    lastMonthTransactions\n  );\n  const r = (P1 + c) / P - 1;\n  const N = -Math.log(1 - (r * P) / c) / Math.log(1 + r);\n\n  const rate = r * 12;\n  const paymentsLeft = N - 1;\n\n  const projection = map(n => (1 + r) ** n * P - (((1 + r) ** n - 1) / r) * c)(\n    range(1, N)\n  );\n\n  return {\n    rate,\n    mortgagePayment: c,\n    paymentsLeft,\n    principalProjection: projection\n  };\n};\n\nexport const getCurrentInvestments = (\n  { accounts, transactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  return compose([\n    sumBy(\"amount\"),\n    filter(({ account_id: accountId }) =>\n      includes(accountId)(investmentAccountIds)\n    )\n  ])(transactions);\n};\n\nexport const getReturnOnInvestments = (\n  { accounts, payees, transactions: allTransactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const transactionsByMonth = compose([\n    groupBy(tr => tr.date.slice(0, 7)),\n    reject(t => includes(t.transfer_account_id)(investmentAccountIds)), // remove transfers between investment accounts\n    filter(t => includes(t.account_id)(investmentAccountIds))\n  ])(allTransactions);\n\n  let startForMonth = 0;\n  const returnRates = [];\n\n  const months = compose([sortBy(identity), keys])(transactionsByMonth);\n  map(month => transactionsByMonth[month])(months).forEach(trs => {\n    const contributions = compose([\n      sumBy(\"amount\"),\n      filter(prop(\"transfer_account_id\"))\n    ])(trs);\n    const gains = reject(prop(\"transfer_account_id\"))(trs);\n    const returns = sumBy(\"amount\")(gains);\n\n    if (startForMonth && gains.length) {\n      returnRates.push(returns / (startForMonth + 0.5 * contributions));\n    }\n\n    startForMonth += returns + contributions;\n  });\n\n  const totalReturn = compose([reduce(multiply, 1), map(add(1))])(returnRates);\n  const numMonths = returnRates.length;\n\n  return totalReturn ** (12 / numMonths) - 1;\n};\n\nexport const getAverageContribution = (\n  { accounts, transactions: allTransactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const contributions = compose([\n    filter(\n      ({ transfer_account_id: transferAccountId }) =>\n        transferAccountId && !includes(transferAccountId)(investmentAccountIds)\n    ),\n    filter(({ account_id: accountId }) =>\n      includes(accountId)(investmentAccountIds)\n    )\n  ])(allTransactions);\n\n  const months = compose([\n    sortBy(identity),\n    uniq,\n    map(d => d.slice(0, 7)),\n    map(\"date\")\n  ])(contributions);\n\n  const totalContributions = sumBy(\"amount\")(contributions);\n  const numMonths =\n    moment(last(months)).diff(moment(head(months)), \"months\") + 1;\n\n  return totalContributions / numMonths;\n};\n\nexport const getAverageExpensesWithoutMortgage = (\n  { transactions, accounts, payees, categoriesById, categoryGroupsById },\n  investmentAccounts,\n  mortgageAccounts\n) => {\n  const startingBalanceId = compose([\n    prop(\"id\"),\n    find(matches({ name: \"Starting Balance\" }))\n  ])(payees);\n  const months = compose([sortBy(identity), uniq, map(getTransactionMonth)])(\n    transactions\n  );\n\n  const mortgageAccountIds = compose([\n    filter(id => mortgageAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const totalExpenses = compose([\n    sumBy(\"amount\"),\n    reject(\n      tr =>\n        tr.amount > 0 &&\n        !tr.transfer_account_id &&\n        (!tr.category_id ||\n          !categoryGroupsById[categoriesById[tr.category_id].category_group_id])\n    ),\n    reject(tr =>\n      includes(tr.transfer_account_id)(\n        concat(mortgageAccountIds, investmentAccountIds)\n      )\n    ),\n    reject(tr =>\n      includes(tr.account_id)(concat(mortgageAccountIds, investmentAccountIds))\n    ),\n    reject(tr =>\n      includes(getTransactionMonth(tr))([head(months), last(months)])\n    ),\n    reject(matches({ payee_id: startingBalanceId }))\n  ])(transactions);\n\n  return -totalExpenses / (months.length - 2);\n};\n\nexport const getProjection = ({\n  numMonths,\n  returnOnInvestments,\n  averageContribution,\n  currentInvestments\n}) => {\n  const monthlyRate = (1 + returnOnInvestments) ** (1 / 12) - 1;\n  let amount = currentInvestments;\n  let projection = [];\n\n  do {\n    projection.push(amount);\n    amount +=\n      averageContribution + (amount + 0.5 * averageContribution) * monthlyRate;\n  } while (projection.length < numMonths);\n\n  return projection;\n};\n\nexport const getProjectionWithRetirement = ({\n  numMonths,\n  returnOnInvestments,\n  averageContribution,\n  currentInvestments,\n  monthsBeforeRetirement,\n  monthlyExpenses,\n  retirementReturns,\n  retirementTaxRate,\n  remainingMortgagePayments,\n  mortgagePayment\n}) => {\n  const monthlyRate = (1 + returnOnInvestments) ** (1 / 12) - 1;\n  const monthlyRetirementReturn = (1 + retirementReturns) ** (1 / 12) - 1;\n  let amount = currentInvestments;\n  let projection = [];\n\n  do {\n    projection.push(amount);\n    if (projection.length < monthsBeforeRetirement) {\n      amount +=\n        averageContribution +\n        (amount + 0.5 * averageContribution) * monthlyRate;\n    } else {\n      amount +=\n        amount * monthlyRetirementReturn * (1 - retirementTaxRate) -\n        monthlyExpenses;\n      if (projection.length < remainingMortgagePayments) {\n        amount -= mortgagePayment;\n      }\n    }\n  } while (projection.length < numMonths);\n\n  return projection;\n};\n","import styled from \"styled-components\";\n\nconst Section = styled.div`\n  margin: ${props => (props.top ? \"0\" : \"3px\")};\n  padding: ${props =>\n    props.noPadding ? \"0\" : props.top ? \"15px 23px\" : \"15px 20px\"};\n  background-color: #fff;\n  border: 1px solid #e5e5e5;\n  border-width: ${props => (props.top ? \"0 0 1px\" : \"1px\")};\n  border-radius: 2px;\n`;\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport omit from \"lodash/fp/omit\";\nimport ToggleWithLabel from \"./ToggleWithLabel\";\n\nconst AccountsSelectionForm = ({ accounts, value, onChange }) =>\n  accounts.map(({ id, name }) => (\n    <ToggleWithLabel\n      key={id}\n      checked={!!value[id]}\n      name={id}\n      onChange={evt => {\n        const { name, checked } = evt.target;\n\n        onChange(\n          checked\n            ? {\n                ...value,\n                [name]: true\n              }\n            : omit(name)(value)\n        );\n      }}\n      label={name}\n    />\n  ));\n\nAccountsSelectionForm.propTypes = {\n  accounts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  value: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default AccountsSelectionForm;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { MinorText, SecondaryText, StrongText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\nimport EmptyText from \"./EmptyText\";\nimport Modal from \"./Modal\";\nimport AccountsSelectionForm from \"./AccountsSelectionForm\";\nimport { useFlagState } from \"../commonHooks\";\n\nconst SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst SettingsInvestmentAccounts = ({ budget, investmentAccounts, onUpdateAccounts }) => {\n  const [\n    investmentModalOpen,\n    closeInvestmentModal,\n    openInvestmentModal\n  ] = useFlagState(false);\n\n  const potentialInvestmentAccounts = budget.accounts.filter(\n    account => account.type === \"otherAsset\" && !account.on_budget\n  );\n  const investmentAccountsList = budget.accounts.filter(\n    ({ id }) => investmentAccounts[id]\n  );\n\n  return (\n    <Fragment>\n      <SectionHeader>\n        <StrongText>Investment Accounts</StrongText>\n        <span onClick={openInvestmentModal}>\n          <Icon icon=\"pencil\" />\n        </span>\n      </SectionHeader>\n      {investmentAccountsList.length ? (\n        investmentAccountsList.map(({ id, name }) => (\n          <SecondaryText key={id}>{name}</SecondaryText>\n        ))\n      ) : (\n        <EmptyText>No accounts marked as investment</EmptyText>\n      )}\n      <MinorText style={{ marginTop: 10 }}>\n        Transfers to investment accounts are not counted as spending since it's\n        assumed it's for retirement or some other savings goal.\n      </MinorText>\n      <Modal\n        open={investmentModalOpen}\n        onClose={closeInvestmentModal}\n        title=\"Investment Accounts\"\n      >\n        <AccountsSelectionForm\n          accounts={potentialInvestmentAccounts}\n          value={investmentAccounts}\n          onChange={accountsObject => {\n            onUpdateAccounts({\n              type: \"investment\",\n              value: accountsObject\n            });\n          }}\n        />\n      </Modal>\n    </Fragment>\n  );\n};\n\nSettingsInvestmentAccounts.propTypes = {\n  budget: PropTypes.shape({\n    accounts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired,\n        on_budget: PropTypes.bool.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onUpdateAccounts: PropTypes.func.isRequired,\n};\n\nexport default SettingsInvestmentAccounts;\n","import React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { MinorText, SecondaryText, StrongText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\nimport EmptyText from \"./EmptyText\";\nimport Modal from \"./Modal\";\nimport AccountsSelectionForm from \"./AccountsSelectionForm\";\nimport { useFlagState } from \"../commonHooks\";\n\nconst SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst SettingsMortgageAccounts = ({\n  budget,\n  mortgageAccounts,\n  onUpdateAccounts\n}) => {\n  const [\n    mortgageModalOpen,\n    closeMortgageModal,\n    openMortgageModal\n  ] = useFlagState(false);\n\n  const potentialMortageAccounts = budget.accounts.filter(\n    account => account.type === \"otherLiability\" && !account.on_budget\n  );\n  const mortgageAccountList = budget.accounts.filter(\n    ({ id }) => mortgageAccounts[id]\n  );\n\n  return (\n    <Fragment>\n      <SectionHeader>\n        <StrongText>Mortgage Accounts</StrongText>\n        <span onClick={openMortgageModal}>\n          <Icon icon=\"pencil\" />\n        </span>\n      </SectionHeader>\n      {mortgageAccountList.length ? (\n        mortgageAccountList.map(({ id, name }) => (\n          <SecondaryText key={id}>{name}</SecondaryText>\n        ))\n      ) : (\n        <EmptyText>No accounts marked as mortgage</EmptyText>\n      )}\n      <MinorText style={{ marginTop: 10 }}>\n        Mortgage accounts are used in the retirement calculator since it's a\n        significant expense you won't have in your retirement presumably.\n      </MinorText>\n      <Modal\n        open={mortgageModalOpen}\n        onClose={closeMortgageModal}\n        title=\"Mortgage Account\"\n      >\n        <AccountsSelectionForm\n          accounts={potentialMortageAccounts}\n          value={mortgageAccounts}\n          onChange={accountsObject => {\n            onUpdateAccounts({\n              type: \"mortgage\",\n              value: accountsObject\n            });\n          }}\n        />\n      </Modal>\n    </Fragment>\n  );\n};\n\nSettingsMortgageAccounts.propTypes = {\n  budget: PropTypes.shape({\n    accounts: PropTypes.arrayOf(\n      PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        on_budget: PropTypes.bool.isRequired,\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onUpdateAccounts: PropTypes.func.isRequired\n};\n\nexport default SettingsMortgageAccounts;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"./Section\";\nimport PageLayout from \"./PageLayout\";\nimport SettingsInvestmentAccounts from \"./SettingsInvestmentAccounts\";\nimport SettingsMortgageAccounts from \"./SettingsMortgageAccounts\";\n\nconst Space = styled.div`\n  height: 20px;\n`;\n\nconst SettingsPage = ({\n  budget,\n  historyAction,\n  investmentAccounts,\n  location,\n  mortgageAccounts,\n  sidebarTrigger,\n  title,\n  onUpdateAccounts\n}) => {\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <Section>\n            <SettingsInvestmentAccounts\n              budget={budget}\n              investmentAccounts={investmentAccounts}\n              onUpdateAccounts={onUpdateAccounts}\n            />\n            <Space />\n            <SettingsMortgageAccounts\n              budget={budget}\n              mortgageAccounts={mortgageAccounts}\n              onUpdateAccounts={onUpdateAccounts}\n            />\n          </Section>\n        </Fragment>\n      }\n    />\n  );\n};\n\nSettingsPage.propTypes = {\n  budget: PropTypes.shape({\n    accounts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  location: PropTypes.string.isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  onUpdateAccounts: PropTypes.func.isRequired\n};\n\nexport default SettingsPage;\n","import React, { memo } from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport moment from \"moment\";\nimport pages, { makeLink } from \"../pages\";\nimport CurrentMonthPage from \"./CurrentMonthPage\";\nimport IncomePage from \"./IncomePage\";\nimport CurrentMonthGroupPage from \"./CurrentMonthGroupPage\";\nimport CurrentMonthCategoryPage from \"./CurrentMonthCategoryPage\";\nimport GroupsPage from \"./GroupsPage\";\nimport GroupPage from \"./GroupPage\";\nimport { Link } from \"react-router-dom\";\nimport CategoriesState from \"./CategoriesState\";\nimport { notAny, simpleMemoize } from \"../dataUtils\";\nimport {\n  getFirstMonth,\n  getTransactionMonth,\n  isIncome,\n  isStartingBalanceOrReconciliation,\n  isTransfer\n} from \"../budgetUtils\";\nimport { useMonthExclusions } from \"../commonHooks\";\nimport CategoryPage from \"./CategoryPage\";\nimport CategoryPayeePage from \"./CategoryPayeePage\";\nimport IncomeVsExpensesPage from \"./IncomeVsExpensesPage\";\nimport NetWorthPage from \"./NetWorthPage\";\nimport InvestmentsPage from \"./InvestmentsPage\";\nimport ProjectionsPage from \"./ProjectionsPage\";\nimport SettingsPage from \"./SettingsPage\";\n\nconst getFilteredTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) => {\n    const firstMonth = getFirstMonth(budget);\n    const lastMonth = moment().format(\"YYYY-MM\");\n    return budget.transactions.filter(\n      notAny([\n        isStartingBalanceOrReconciliation(budget),\n        isTransfer(investmentAccounts),\n        transaction =>\n          excludeFirstMonth && getTransactionMonth(transaction) === firstMonth,\n        transaction =>\n          excludeLastMonth && getTransactionMonth(transaction) === lastMonth\n      ])\n    );\n  }\n);\n\nconst getFilteredSpendingTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) =>\n    getFilteredTransactions(\n      budget,\n      investmentAccounts,\n      excludeFirstMonth,\n      excludeLastMonth\n    ).filter(transaction => !isIncome(budget)(transaction))\n);\n\nconst PageContent = props => {\n  const {\n    budget,\n    currentMonth,\n    historyAction,\n    investmentAccounts,\n    location,\n    mortgageAccounts,\n    sidebarTrigger,\n    onUpdateAccounts\n  } = props;\n  const {\n    excludeFirstMonth,\n    excludeLastMonth,\n    months,\n    onSetExclusion\n  } = useMonthExclusions(budget);\n\n  if (!budget) {\n    return null;\n  }\n\n  return (\n    <Switch>\n      <Route\n        path={pages.currentMonth.path}\n        exact\n        render={() => (\n          <CurrentMonthPage\n            budget={budget}\n            currentMonth={currentMonth}\n            investmentAccounts={investmentAccounts}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.currentMonth.title}\n          />\n        )}\n      />\n      <Route\n        path={pages.currentMonthGroup.path}\n        exact\n        render={({ match }) => (\n          <CurrentMonthGroupPage\n            budget={budget}\n            categoryGroupId={match.params.categoryGroupId}\n            currentMonth={currentMonth}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.currentMonthGroup.title(match.params, budget)}\n          />\n        )}\n      />\n      <Route\n        path={pages.currentMonthCategory.path}\n        exact\n        render={({ match }) => (\n          <CurrentMonthCategoryPage\n            categoryId={match.params.categoryId}\n            budget={budget}\n            currentMonth={currentMonth}\n            categoryGroupId={match.params.categoryGroupId}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.currentMonthCategory.title(match.params, budget)}\n          />\n        )}\n      />\n      <Route\n        path={pages.income.path}\n        exact\n        render={() => (\n          <IncomePage\n            investmentAccounts={investmentAccounts}\n            budget={budget}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.income.title}\n          />\n        )}\n      />\n      <Route\n        path={pages.incomeVsExpenses.path}\n        exact\n        render={() => {\n          const filteredTransactions = getFilteredTransactions(\n            props.budget,\n            props.investmentAccounts,\n            excludeFirstMonth,\n            excludeLastMonth\n          );\n\n          return (\n            <IncomeVsExpensesPage\n              budget={budget}\n              excludeFirstMonth={excludeFirstMonth}\n              excludeLastMonth={excludeLastMonth}\n              investmentAccounts={investmentAccounts}\n              historyAction={historyAction}\n              location={location}\n              sidebarTrigger={sidebarTrigger}\n              title={pages.incomeVsExpenses.title}\n              transactions={filteredTransactions}\n              onSetExclusion={onSetExclusion}\n            />\n          );\n        }}\n      />\n      <Route\n        path={pages.netWorth.path}\n        exact\n        render={() => (\n          <NetWorthPage\n            budget={budget}\n            historyAction={historyAction}\n            investmentAccounts={investmentAccounts}\n            location={location}\n            mortgageAccounts={mortgageAccounts}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.netWorth.title}\n          />\n        )}\n      />\n      <Route\n        path={pages.investments.path}\n        exact\n        render={() => (\n          <InvestmentsPage\n            budget={budget}\n            investmentAccounts={investmentAccounts}\n            title={pages.investments.title}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n          />\n        )}\n      />\n      <Route\n        path={pages.projections.path}\n        exact\n        render={() => (\n          <ProjectionsPage\n            budget={budget}\n            investmentAccounts={investmentAccounts}\n            mortgageAccounts={mortgageAccounts}\n            title={pages.projections.title}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n          />\n        )}\n      />\n      <Route\n        path={pages.settings.path}\n        exact\n        render={() => (\n          <SettingsPage\n            budget={budget}\n            historyAction={historyAction}\n            investmentAccounts={investmentAccounts}\n            location={location}\n            mortgageAccounts={mortgageAccounts}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.settings.title}\n            onUpdateAccounts={onUpdateAccounts}\n          />\n        )}\n      />\n      <Route\n        path={pages.groups.path}\n        render={() => {\n          const filteredTransactions = getFilteredSpendingTransactions(\n            budget,\n            investmentAccounts,\n            excludeFirstMonth,\n            excludeLastMonth\n          );\n\n          return (\n            <CategoriesState action={historyAction} location={location}>\n              {({\n                selectedMonth,\n                selectedGroupId,\n                selectedCategoryId,\n                selectedPayeeId,\n                onSelectMonth,\n                onSelectGroup,\n                onSelectCategory,\n                onSelectPayee\n              }) => (\n                <Switch>\n                  <Route\n                    path={pages.groups.path}\n                    exact\n                    render={() => (\n                      <GroupsPage\n                        budget={budget}\n                        excludeFirstMonth={excludeFirstMonth}\n                        excludeLastMonth={excludeLastMonth}\n                        historyAction={historyAction}\n                        location={location}\n                        months={months}\n                        selectedGroupId={selectedGroupId}\n                        selectedMonth={selectedMonth}\n                        sidebarTrigger={sidebarTrigger}\n                        title={pages.groups.title}\n                        transactions={filteredTransactions}\n                        onSelectGroup={onSelectGroup}\n                        onSetExclusion={onSetExclusion}\n                        onSelectMonth={onSelectMonth}\n                      />\n                    )}\n                  />\n                  <Route\n                    path={pages.group.path}\n                    exact\n                    render={({ match }) => (\n                      <GroupPage\n                        budget={budget}\n                        categoryGroupId={match.params.categoryGroupId}\n                        excludeFirstMonth={excludeFirstMonth}\n                        excludeLastMonth={excludeLastMonth}\n                        historyAction={historyAction}\n                        location={location}\n                        months={months}\n                        selectedMonth={selectedMonth}\n                        selectedCategoryId={selectedCategoryId}\n                        sidebarTrigger={sidebarTrigger}\n                        title={pages.group.title(match.params, budget)}\n                        transactions={filteredTransactions}\n                        onSelectCategory={onSelectCategory}\n                        onSelectMonth={onSelectMonth}\n                        onSetExclusion={onSetExclusion}\n                      />\n                    )}\n                  />\n                  <Route\n                    path={pages.category.path}\n                    exact\n                    render={({ match }) => (\n                      <CategoryPage\n                        budget={budget}\n                        categoryId={match.params.categoryId}\n                        excludeFirstMonth={excludeFirstMonth}\n                        excludeLastMonth={excludeLastMonth}\n                        historyAction={historyAction}\n                        location={location}\n                        months={months}\n                        selectedMonth={selectedMonth}\n                        selectedPayeeId={selectedPayeeId}\n                        sidebarTrigger={sidebarTrigger}\n                        title={pages.category.title(match.params, budget)}\n                        transactions={filteredTransactions}\n                        onSetExclusion={onSetExclusion}\n                        onSelectMonth={onSelectMonth}\n                        onSelectPayee={onSelectPayee}\n                      />\n                    )}\n                  />\n                  <Route\n                    path={pages.categoryPayee.path}\n                    exact\n                    render={({ match }) => (\n                      <CategoryPayeePage\n                        budget={budget}\n                        categoryId={match.params.categoryId}\n                        excludeFirstMonth={excludeFirstMonth}\n                        excludeLastMonth={excludeLastMonth}\n                        historyAction={historyAction}\n                        location={location}\n                        months={months}\n                        payeeId={match.params.payeeId}\n                        selectedMonth={selectedMonth}\n                        sidebarTrigger={sidebarTrigger}\n                        title={pages.categoryPayee.title(match.params, budget)}\n                        transactions={filteredTransactions}\n                        onSetExclusion={onSetExclusion}\n                        onSelectMonth={onSelectMonth}\n                      />\n                    )}\n                  />\n                </Switch>\n              )}\n            </CategoriesState>\n          );\n        }}\n      />\n      <Route\n        render={() => (\n          <div style={{ padding: 20 }}>\n            <Link\n              to={makeLink(pages.currentMonth.path, {\n                budgetId: budget.id\n              })}\n            >\n              Return to {pages.currentMonth.title}\n            </Link>\n          </div>\n        )}\n      />\n    </Switch>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) =>\n  [\n    \"budget\",\n    \"currentMonth\",\n    \"historyAction\",\n    \"investmentAccounts\",\n    \"location\",\n    \"mortgageAccounts\"\n  ].every(key => prevProps[key] === nextProps[key]);\n\nexport default memo(PageContent, areEqual);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Section from \"./Section\";\nimport { PageTitle, StrongText, SecondaryText } from \"./typeComponents\";\nimport { PrimaryButton } from \"./Button\";\n\nconst Unauthorized = ({ onAuthorize }) => (\n  <Section>\n    <PageTitle>Budget Reports</PageTitle>\n    <div style={{ marginBottom: 10 }}>Get various insights from your YNAB account.</div>\n    <PrimaryButton onClick={onAuthorize}>\n      Authorize YNAB\n    </PrimaryButton>\n    <StrongText style={{ marginTop: 30 }}>Privacy Policy</StrongText>\n    <SecondaryText>\n      This website does not store any information from you or your YNAB account\n      on it's server. All data retrieved from the YNAB API is stored only in\n      your browser's local storage and is never transmitted to any other location or\n      third-party.\n    </SecondaryText>\n  </Section>\n);\n\nUnauthorized.propTypes = {\n  onAuthorize: PropTypes.func.isRequired\n};\n\nexport default Unauthorized;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 10px 20px;\n`;\n\n\nconst ErrorPage = ({ message }) => (\n  <Container>\n    <h3>{message}</h3>\n    <div>\n      <Link to=\"/\">Home</Link>\n    </div>\n  </Container>\n);\n\nErrorPage.propTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default ErrorPage;\n","import React from \"react\";\nimport ErrorPage from \"./ErrorPage\";\n\nconst NotFound = () => <ErrorPage message=\"Page not found\" />;\n\nexport default NotFound;\n","/* global Rollbar */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ErrorPage from \"./ErrorPage\";\n\nclass ErrorBoundary extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    message: PropTypes.string\n  };\n\n  static defaultProps = {\n    message: \"Something went wrong\"\n  };\n\n  state = { hasError: false };\n\n  componentDidCatch(error) {\n    Rollbar.error(error);\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorPage message={this.props.message} />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport pages, { makeLink } from \"../pages\";\nimport { StrongText } from \"./typeComponents\";\nimport Section from \"./Section\";\nimport Loading from \"./Loading\";\n\nclass Budgets extends Component {\n  static propTypes = {\n    budgets: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    budgetsLoaded: PropTypes.bool.isRequired,\n    onRequestBudgets: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    if (!this.props.budgetsLoaded) {\n      this.props.onRequestBudgets();\n    }\n  }\n\n  render() {\n    const { budgets, budgetsLoaded } = this.props;\n\n    if (!budgetsLoaded) {\n      return <Loading />;\n    }\n\n    return (\n      <Section>\n        <StrongText>Select a budget:</StrongText>\n        {budgets.map(({ id, name }) => (\n          <div key={id}>\n            <Link to={makeLink(pages.currentMonth.path, { budgetId: id })}>\n              {name}\n            </Link>\n          </div>\n        ))}\n      </Section>\n    );\n  }\n}\n\nexport default Budgets;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Switch } from \"react-router-dom\";\nimport moment from \"moment\";\nimport get from \"lodash/fp/get\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport {\n  getBudgets,\n  getUpdatedBudget,\n  AUTHORIZE_URL,\n  setLastLocation\n} from \"../ynabRepo\";\nimport { setSetting, getSetting } from \"../uiRepo\";\nimport PageWrapper from \"./PageWrapper\";\nimport PageContent from \"./PageContent\";\nimport Unauthorized from \"./Unauthorized\";\nimport NotFound from \"./NotFound\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport Budgets from \"./Budgets\";\nimport CurrencyContext from \"./CurrencyContext\";\n\nclass App extends Component {\n  static propTypes = {\n    hasToken: PropTypes.bool.isRequired\n  };\n\n  state = {\n    authorized: true,\n    budgetsLoaded: false,\n    budgetIds: [],\n    budgets: {},\n    budgetDetails: {},\n    currentMonth: moment().format(\"YYYY-MM\")\n  };\n\n  handleRequestBudgets = callback => {\n    getBudgets().then(({ budgets }) => {\n      this.setState(\n        {\n          budgetsLoaded: true,\n          budgetIds: budgets.map(b => b.id),\n          budgets: keyBy(\"id\")(budgets)\n        },\n        callback\n      );\n    });\n  };\n\n  handleRequestBudget = id => {\n    getUpdatedBudget(id).then(({ budget, authorized }) => {\n      this.setState(state => ({\n        ...state,\n        authorized,\n        budgetDetails: {\n          ...state.budgetDetails,\n          [id]: budget\n        }\n      }));\n    });\n  };\n\n  handleAuthorize = () => {\n    setLastLocation();\n    window.location.replace(AUTHORIZE_URL);\n  };\n\n  render() {\n    const { hasToken } = this.props;\n    const {\n      authorized,\n      budgetsLoaded,\n      budgetIds,\n      budgets,\n      budgetDetails,\n      currentMonth\n    } = this.state;\n\n    if (!hasToken) {\n      return <Unauthorized onAuthorize={this.handleAuthorize} />;\n    }\n\n    return (\n      <ErrorBoundary>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <Budgets\n                budgets={budgetIds.map(id => budgets[id])}\n                budgetsLoaded={budgetsLoaded}\n                onRequestBudgets={this.handleRequestBudgets}\n              />\n            )}\n          />\n          <Route\n            path=\"/budgets/:budgetId\"\n            render={({ match, history, location }) => {\n              const { budgetId } = match.params;\n              const budget = budgetDetails[budgetId];\n\n              return (\n                <PageWrapper\n                  authorized={authorized}\n                  budgetId={budgetId}\n                  budgetLoaded={!!budget}\n                  hasMultipleBudgets={budgetIds.length > 1}\n                  location={location.pathname}\n                  onAuthorize={this.handleAuthorize}\n                  onRequestBudget={this.handleRequestBudget}\n                >\n                  {({ sidebarTrigger }) => (\n                    <CurrencyContext.Provider\n                      value={get(\"currencyFormat\")(budget)}\n                    >\n                      <PageContent\n                        sidebarTrigger={sidebarTrigger}\n                        historyAction={history.action}\n                        location={location.pathname}\n                        budget={budget}\n                        currentMonth={currentMonth}\n                        investmentAccounts={getSetting(\n                          \"investmentAccounts\",\n                          budgetId\n                        )}\n                        mortgageAccounts={getSetting(\n                          \"mortgageAccounts\",\n                          budgetId\n                        )}\n                        onUpdateAccounts={({ type, value }) => {\n                          if (type === \"investment\") {\n                            setSetting(\"investmentAccounts\", budgetId, value);\n                          }\n                          if (type === \"mortgage\") {\n                            setSetting(\"mortgageAccounts\", budgetId, value);\n                          }\n                          this.forceUpdate();\n                        }}\n                      />\n                    </CurrencyContext.Provider>\n                  )}\n                </PageWrapper>\n              );\n            }}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { getAuthorizeToken, initializeYnabApi } from \"./ynabRepo\";\nimport App from \"./components/App\";\n\nconst token = getAuthorizeToken();\n\nif (token) {\n  initializeYnabApi(token);\n}\n\nReactDOM.render(\n  <HashRouter>\n    <App hasToken={!!token} />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}