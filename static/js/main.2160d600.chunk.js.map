{"version":3,"sources":["localstorageUtils.js","uiRepo.js","dataUtils.js","repoUtils.js","localBudgetCache.js","ynabRepo.js","components/typeComponents.js","components/Loading.js","components/EnsureBudgetLoaded.js","styleVariables.js","components/Button.js","components/Icon.js","pages.js","components/SidebarMenuContent.js","components/SidebarMenu.js","components/PageWrapper.js","budgetUtils.js","commonHooks.js","components/Scroller.js","components/PageBreadcrumbs.js","components/PageActions.js","components/PageLayout.js","components/CollapsibleSection.js","components/Chart.js","components/CurrencyContext.js","components/Amount.js","components/ChartNumbers.js","components/SpendingChart.js","components/Modal.js","components/ChartSettingsModal.js","components/DayByDaySection.js","components/ListItem.js","components/EmptyText.js","components/NoTransactions.js","components/LabelWithMinorText.js","components/LabelWithTransactionCount.js","components/AmountWithPercentage.js","components/SeeAll.js","components/GenericEntitiesSection.js","components/DateSummaryTransaction.js","components/ToggleNode.js","components/DateSummary.js","components/RecentSpending.js","components/CurrentMonthPage.js","components/MonthlyChart.js","components/Toggle.js","components/ToggleWithLabel.js","components/MonthByMonthSettingsModal.js","components/MonthByMonthSection.js","components/IncomePage.js","components/Transaction.js","components/TransactionsSection.js","components/CurrentMonthGroupPage.js","components/CurrentMonthCategoryPage.js","components/GroupsPage.js","components/TransactionsByMonthSection.js","components/GroupPage.js","components/CategoriesState.js","components/CategoryPage.js","components/CategoryPayeePage.js","components/IncomeVsExpensesChart.js","components/BreakdownNode.js","components/Breakdown.js","components/ExpensesBreakdown.js","components/IncomeBreakdown.js","components/Breakdowns.js","components/IncomeVsExpensesPage.js","components/NetWorthChart.js","components/NetWorthAccounts.js","components/NetWorthPage.js","components/InvestmentsPage.js","components/ProjectionsChart.js","components/ClickOff.js","components/ProjectionsSlider.js","components/ProjectionsPage.js","projectionUtils.js","components/Section.js","components/AccountsSelectionForm.js","components/SettingsInvestmentAccounts.js","components/SettingsMortgageAccounts.js","components/SettingsPage.js","components/PageContent.js","components/Unauthorized.js","components/ErrorPage.js","components/NotFound.js","components/ErrorBoundary.js","components/Budgets.js","components/App.js","index.js"],"names":["cache","getStorage","key","raw","localStorage","getItem","parsed","JSON","parse","setStorage","obj","setItem","stringify","e","SETTINGS","excludeFirstMonth","localStorageKey","default","excludeLastMonth","investmentAccounts","lastUpdated","mortgageAccounts","netWorthHiddenAccounts","spendingMonthsToCompare","trendsShowAverage","getSetting","settingsKey","budgetId","setting","Error","get","setSetting","value","previousSetting","Object","objectSpread","defineProperty","groupBy","func","arr","grouped","forEach","push","groupByProp","keyByProp","reduce","acc","curr","sumByProp","simpleMemoize","lastArgs","lastResult","_len","arguments","length","args","Array","_key","every","index","apply","notAny","predicates","arg","predicate","formatCurrency","utils","convertMilliUnitsToCurrencyAmount","GROUPS_TO_HIDE","sanitizeBudget","budget","transactionIdsFromSub","uniq","subtransactions","map","transaction","transaction_id","categoryGroups","category_groups","filter","group","includes","name","categories","category","deleted","activity","balance","budgeted","categoriesById","earliestDate","moment","subtract","MAX_MONTHS_TO_SHOW","format","currencyFormat","symbol","currency_format","currency_symbol","omit","accountsById","accounts","categoryGroupsById","payeesById","payees","months","sortBy","transactions","compose","amount","category_id","flatMap","id","subs","sub","payee_id","matchesProperty","reverse","dropWhile","date","applyDeltas","deltas","undefined","updater","prev","exists","newArr","item","concat","upsertBy","arraysToUpdate","cachedDetails","getAllBudgetDetails","setBudgetDetails","_ref","server_knowledge","details","newDetails","AUTHORIZE_URL","api","getBudgets","budgets","then","data","catch","matches","error","message","removeItem","getBudget","getBudgetById","_ref2","valueOf","authorized","getUpdatedBudget","budgetDetails","getBudgetDetails","_ref3","mergeBudgets","setLastLocation","window","location","hash","PageTitle","styled","div","_templateObject","LargeNumber","_templateObject2","StrongText","_templateObject3","SecondaryText","_templateObject4","MinorText","_templateObject5","Loading","react_default","a","createElement","style","height","display","flexDirection","alignItems","justifyContent","EnsureBudgetLoaded","_this$props","this","props","budgetLoaded","onRequestBudget","children","components_Loading","Component","selectedPlotBandColor","tinyColor","lighten","desaturate","toHexString","lighterPrimaryColor","lightPrimaryColor","negativeChartColor","Button","Button_templateObject","PrimaryButton","Button_templateObject2","library","add","faArrowLeft","faBars","faCaretDown","faChevronRight","faCog","faEllipsisV","faEye","faEyeSlash","faPencilAlt","faTimes","ICONS","arrow-left","bars","caret-down","chevron-right","cog","pencil","ellipsis-v","eye","eye-slash","times","PRESET_STYLES","faded","fontWeight","color","fontSize","Icon","icon","other","objectWithoutProperties","react_fontawesome_index_es","assign","makeLink","path","params","replace","_","part","pages","currentMonth","title","currentMonthGroup","categoryGroupId","paramProps","breadcrumbs","currentMonthCategory","categoryId","groups","categoryPayee","payeeId","income","incomeVsExpenses","netWorth","investments","projections","settings","Header","SidebarMenuContent_templateObject","IconWrapper","SidebarMenuContent_templateObject2","StyledLink","NavLink","SidebarMenuContent_templateObject3","active","SidebarMenuContent","hasMultipleBudgets","onCloseSidebar","react","SidebarMenuContent_PureHeader","page","_pages$page","SidebarMenuContent_PureStyledLink","to","matchPath","onClick","PureComponent","PureHeader","_this$props2","components_Icon","react_router_dom","PureStyledLink","SidebarMenu","state","open","handleSetOpen","_this","setState","handleTriggerClick","handleCloseSidebar","react_sidebar_esm","sidebar","components_SidebarMenuContent","onSetOpen","styles","backgroundColor","width","pointerEvents","sidebarTrigger","SidebarMenu_Trigger","Trigger","alignSelf","Container","PageWrapper_templateObject","PageWrapper","onAuthorize","components_EnsureBudgetLoaded","components_SidebarMenu","PageWrapper_Container","padding","flexShrink","borderTop","mapRaw","convert","cap","isStartingBalanceOrReconciliation","startingBalancePayeeId","find","payee","reconciliationPayeeId","isIncome","toBeBudgetedId","isTransfer","transfer_account_id","getTransactionMonth","slice","rejectNonCategoryTransations","tran","getFirstMonth","last","getPayeeNodes","divideBy","pick","sanitizeName","trim","useSelectedMonth","_useState","useState","_useState2","slicedToArray","selectedMonth","setSelectedMonth","selectedMonthRef","useRef","current","month","useSelectedEntityId","_useState3","_useState4","selectedEntityId","setSelectedEntityId","entityId","useTrendsShowAverage","_useState5","_useState6","showAverage","setShowAverage","useMonthExclusions","_useState7","_useState8","setExcludeFirstMonth","_useState9","_useState10","setExcludeLastMonth","firstBudgetMonth","firstMonth","lastMonth","m","getMonths","onSetExclusion","exclude","useFlagState","initial","_useState13","_useState14","flag","setFlag","Scroller","toBeScrolled","raf","scrollPositions","scrollTop","prevProps","prevState","snapshot","_this2","action","requestAnimationFrame","cancelAnimationFrame","_this3","ref","el","routes","values","pageKey","PageBreadcrumbs","react_router","exact","render","lineHeight","whiteSpace","match","paddingBottom","PageActions","_ref4","_ref5","_ref6","PageLayout_templateObject","Body","PageLayout_templateObject2","PageLayout","historyAction","fixedContent","content","PageLayout_Header","flexGrow","components_PageBreadcrumbs","components_PageActions","components_Scroller","CollapsibleSection_templateObject","fullWidth","CollapsibleSection_templateObject2","SettingsContainer","CollapsibleSection_templateObject3","CollapsibleSection_templateObject4","CollapsibleSection","actions","hasSettings","noPadding","onClickSettings","expanded","setExpanded","CollapsibleSection_Container","CollapsibleSection_Header","transform","rotate","marginLeft","es","isExpanded","CollapsibleSection_Body","CHART_DEFAULTS","chart","spacing","credits","enabled","legend","text","subtitle","tooltip","xAxis","tickLength","Chart","options","highcharts_react_min_default","highcharts","Highcharts","CurrencyContext","React","createContext","Amount","amountAfterDecimal","positiveIsRed","showCurrencySymbol","components_CurrencyContext","Consumer","nStr","x","split","x1","x2","rgx","test","addCommas","Math","abs","toFixed","defaultProps","ChartNumbers","numbers","alwaysRound","smallNumbers","some","textAlign","marginBottom","label","_ref3$isMoney","isMoney","decimalsToRound","components_Amount","isNumber","DateLabels","SpendingChart_templateObject","getData","transactionsByDate","today","cumulative","range","daysInMonth","numDays","padCharsStart","sumBy","SpendingChart","total","highlightFunction","monthsToCompare","highlightedTransactions","highlightSeries","type","enableMouseTracking","marker","animation","lineWidth","fillOpacity","firstDate","lastDate","lineData","day","firstDayOfWeek","parseInt","plotBands","num","from","comparisonSeries","numMonths","mix","toHex","spent","takeWhile","chartNumbers","components_ChartNumbers","components_Chart","labels","yAxis","visible","endOnTick","startOnTick","series","dashStyle","toConsumableArray","Modal_templateObject","Overlay","Modal_templateObject2","ModalContent","Modal_templateObject3","ensureNextTick","callback","Modal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleTransitionEnd","animationState","document","body","appendChild","removeChild","onClose","shouldShow","createPortal","Modal_Container","opacity","onTransitionEnd","marginTop","ChartSettingsModal","onDecrementMonths","onIncrementMonths","components_Modal","marginRight","components_Button","DayByDaySection","_useFlagState","_useFlagState2","modalOpen","onCloseModal","onOpenModal","_useMonthsToCompare","_useState11","_useState12","setMonthsToCompare","newMonths","max","min","useMonthsToCompare","components_CollapsibleSection","components_SpendingChart","components_ChartSettingsModal","ListItem","ListItem_templateObject","isContinuing","EmptyText","EmptyText_templateObject","NoTransactions","components_EmptyText","LabelWithMinorText","minorText","inLink","bold","overflow","textOverflow","LabelWithTransactionCount","count","selected","showCount","components_LabelWithMinorText","AmountWithPercentage","SeeAll","pluralizedName","showAll","onToggle","mapWithKeys","keyToPluralizedName","category_group_id","GenericEntitiesSection","allMounted","handleToggleShowAll","_this$state","emptyName","entityKey","entityFunction","entitiesById","linkFunction","limitShowingProp","limitShowing","showAverageToggle","showTransactionCount","onClickEntity","onToggleAverage","_this$state2","entities","LIMIT","topEntities","otherEntities","components_NoTransactions","GenericEntitiesSection_GenericItemLink","components_SeeAll","MaybeLink","GenericItemLink","components_ListItem","components_LabelWithTransactionCount","GenericEntitiesSection_MaybeLink","evt","stopPropagation","components_AmountWithPercentage","StyledListItem","DateSummaryTransaction_templateObject","DateSummaryTransaction","memo","NodeWrapper","ToggleNode_templateObject","isCompact","ToggleNode_templateObject2","ToggleNode","valueRenderer","ToggleNode_IconWrapper","DateSummary_templateObject","DateSummary","onToggleExpanded","DateSummary_Container","components_ToggleNode","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","paddingLeft","components_DateSummaryTransaction","margin","RecentSpending","recentDays","n","startsWith","components_DateSummary","CurrentMonthPage","_useSelectedEntityId","_useSelectedEntityId2","selectedGroupId","onSelectGroupId","selectedGroup","transactionsThisMonth","components_PageLayout","components_DayByDaySection","components_RecentSpending","components_GenericEntitiesSection","groupId","MonthlyChart","average","stacked","onSelectMonth","yearLines","d","highlights","zIndex","findIndex","events","click","event","round","plotLines","gridLineColor","align","y","tickPixelInterval","plotOptions","stacking","s","valueFunction","radius","borderWidth","states","hover","brightness","Track","Toggle_templateObject","HEIGHT","on","Handle","Toggle_templateObject2","WIDTH","Toggle","ToggleWithLabel_templateObject","Label","ToggleWithLabel_templateObject2","ToggleWithLabel","checked","onChange","ToggleWithLabel_Container","target","components_Toggle","MonthByMonthSettingsModal","components_ToggleWithLabel","MonthByMonthSection","settingsModalOpen","setSettingsModalOpen","selectedMonthTotal","transactionsByMonth","false","highlighted","true","components_MonthlyChart","components_MonthByMonthSettingsModal","getFilteredTransactions","getFilteredIncomeTransactions","IncomePage","_useMonthExclusions","_useSelectedMonth","_useSelectedMonth2","selectedPayeeId","onSelectPayeeId","onToggleShowAverage","filteredTransactions","transactionsInSelectedMonth","components_MonthByMonthSection","Transaction","TransactionsSection","components_Transaction","CurrentMonthGroupPage","selectedCategoryId","onSelectCategoryId","allCategories","allTransactions","selectedCategory","categoryIds","transactionsInGroup","transactionsInGroupForMonth","available","components_TransactionsSection","CurrentMonthCategoryPage","transactionsInCategory","transactionsInCategoryForMonth","GroupsPage","onSelectGroup","_useTrendsShowAverage","_useTrendsShowAverage2","transactionsForMonth","TransactionsByMonthSection","selectedPayee","topTransactions","otherTransactions","GroupPage","onSelectCategory","categoryGroup","components_TransactionsByMonthSection","INITIAL_STATE","CategoriesState","cachedStates","handleSelectMonth","handleSelectGroup","handleSelectCategory","handleSelectPayee","onSelectPayee","handleSetExclusion","CategoryPage","transactionsForCategory","CategoryPayeePage","transactionsForCategoryAndPayee","IncomeVsExpensesChart","expenses","BreakdownNode","childrenMounted","handleToggleExpand","nodes","isTopLevel","hasChildNodes","BreakdownNode_Container","BreakdownNode_LeafNode","BreakdownNode_Nodes","Nodes","node","BreakdownNode_BreakdownNode","BreakdownNode_templateObject","LeafNode","BreakdownNode_NodeWrapper","Breakdown","components_BreakdownNode","ExpensesBreakdown","totalIncome","categoryNodes","payeeNodes","groupNodes","rootPayeeNodes","components_Breakdown","IncomeBreakdown","Breakdowns","expenseTransactions","incomeTransactions","components_ExpensesBreakdown","components_IncomeBreakdown","getSummaries","IncomeVsExpensesPage","showTotals","setShowTotals","allSummaries","summaries","summary","totalExpenses","denominator","components_IncomeVsExpensesChart","components_Breakdowns","CREDIT_ACCOUNTS","NetWorthChart","groupedData","getStack","monthlyData","assets","asset","liabilities","liability","getNodes","accountsByGroup","account","startCase","AccountBreakdown","hiddenAccounts","onToggleAccounts","propEq","ids","NetWorthAccounts","keyBy","visibleNodes","reject","hiddenNodes","NetWorthAccounts_AccountBreakdown","groupByMonthAndAccount","mapValues","identity","keys","getSummaryByAccount","groupedTransactions","getSelectedBalances","selectedMonthIndex","eq","accountSummaries","NetWorthPage","_useHiddenAccounts","setHiddenAccounts","onToggleHiddenAccounts","shouldHide","newHiddenAccounts","useHiddenAccounts","selectedBalances","filterHidden","omitBy","selectedLiabilities","sum","b","selectedAssets","components_NetWorthChart","constant","components_NetWorthAccounts","isContribution","account_id","isCapitalGainOrLoss","InvestmentsPage","selectedBreakdown","onSelectBreakdown","investmentTransactions","isInvestmentTransaction","transactionsInMonth","contribution","capitalGain","ProjectionsChart","investmentsProjection","mortgageProjection","amountNeededToRetire","yearsUntilRetirement","floor","isDescendant","parent","child","parentNode","ClickOff","handleBodyClick","onClickOff","addEventListener","removeEventListener","bodyEl","getElementsByTagName","ProjectionsSlider_templateObject","ProjectionsSlider","formatter","onBlur","onReset","rangeOptions","components_ClickOff","ProjectionsSlider_Container","ProjectionsSlider_Range","val","Range","adjustableEntries","adjustableEntriesByName","getInitialState","mortgageAccount","t","lastMonthTransactions","takeRightWhile","P","P1","c","prop","r","N","log","rate","paymentsLeft","projection","pow","mortgagePayment","principalProjection","getMortgageRate","remainingMortgagePayments","returnOnInvestments","investmentAccountIds","tr","startForMonth","returnRates","trs","contributions","gains","returns","totalReturn","multiply","getReturnOnInvestments","averageContribution","transferAccountId","_ref7","accountId","diff","head","getAverageContribution","currentInvestments","getCurrentInvestments","averageExpenses","_ref8","startingBalanceId","mortgageAccountIds","getAverageExpensesWithoutMortgage","retirementReturns","retirementTaxRate","maxAverageExpenses","ceil","maxAverageContribution","ProjectionsPage","handleChange","parseFloat","handleSelectAdjusting","adjustingName","handleClearSelection","handleResetCalculation","calculation","_ref9","monthlyRate","getProjection","YEARS_TO_PROJECT","monthlyRetirementReturn","remainingMortgage","projectionWithRetirement","_ref10","monthsBeforeRetirement","monthlyExpenses","getProjectionWithRetirement","hasMortgage","projectionByYear","chunk","mortgageProjectionByYear","nameToRangeOptions","step","components_ProjectionsChart","ProjectionsPage_AdjustableEntry","isAdjusting","onSelect","ProjectionsPage_Entry","components_ProjectionsSlider","AdjustableEntry","highlightValue","isAdjustable","Entry","_ref4$formatter","borderRadius","Section","Section_templateObject","top","AccountsSelectionForm","_evt$target","SectionHeader","SettingsInvestmentAccounts_templateObject","SettingsInvestmentAccounts","onUpdateAccounts","investmentModalOpen","closeInvestmentModal","openInvestmentModal","potentialInvestmentAccounts","on_budget","investmentAccountsList","components_AccountsSelectionForm","accountsObject","SettingsMortgageAccounts_templateObject","SettingsMortgageAccounts","mortgageModalOpen","closeMortgageModal","openMortgageModal","potentialMortageAccounts","mortgageAccountList","SettingsMortgageAccounts_SectionHeader","Space","SettingsPage_templateObject","SettingsPage","components_Section","components_SettingsInvestmentAccounts","components_SettingsMortgageAccounts","getFilteredSpendingTransactions","components_CurrentMonthPage","components_CurrentMonthGroupPage","components_CurrentMonthCategoryPage","components_IncomePage","components_IncomeVsExpensesPage","components_NetWorthPage","components_InvestmentsPage","components_ProjectionsPage","components_SettingsPage","components_CategoriesState","components_GroupsPage","components_GroupPage","components_CategoryPage","components_CategoryPayeePage","nextProps","Unauthorized","ErrorPage_templateObject","ErrorPage","ErrorPage_Container","NotFound","components_ErrorPage","ErrorBoundary","hasError","Rollbar","token","Budgets","budgetsLoaded","onRequestBudgets","App","budgetIds","handleRequestBudgets","handleRequestBudget","handleAuthorize","hasToken","components_ErrorBoundary","components_Budgets","history","components_PageWrapper","pathname","Provider","components_PageContent","forceUpdate","component","components_Unauthorized","search","substring","decodeURIComponent","getAuthorizeToken","ynab","ReactDOM","components_App","getElementById"],"mappings":"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","file":"static/js/main.2160d600.chunk.js","sourcesContent":["const cache = {};\n\nexport const getStorage = key => {\n  if (cache[key]) {\n    return cache[key];\n  }\n  const raw = localStorage.getItem(key);\n  if (raw) {\n    const parsed = JSON.parse(raw);\n    cache[key] = parsed;\n    return parsed;\n  }\n  return null;\n};\n\nexport const setStorage = (key, obj) => {\n  delete cache[key];\n\n  try {\n    localStorage.setItem(key, JSON.stringify(obj));\n  } catch (e) {\n    // Most likely exceeds storage quota\n  }\n};\n","import { getStorage, setStorage } from \"./localstorageUtils\";\nimport get from \"lodash/get\";\n\nconst SETTINGS = {\n  excludeFirstMonth: {\n    localStorageKey: \"budget-reports-exclude-first-month\",\n    default: false\n  },\n  excludeLastMonth: {\n    localStorageKey: \"budget-reports-exclude-last-month\",\n    default: false\n  },\n  investmentAccounts: {\n    localStorageKey: \"budget-reports-investment-accounts\",\n    default: {}\n  },\n  lastUpdated: {\n    localStorageKey: \"budget-reports-last-updated\",\n    default: null\n  },\n  mortgageAccounts: {\n    localStorageKey: \"budget-reports-mortgage-accounts\",\n    default: {}\n  },\n  netWorthHiddenAccounts: {\n    localStorageKey: \"budget-reports-networth-hidden-accounts\",\n    default: {}\n  },\n  spendingMonthsToCompare: {\n    localStorageKey: \"budget-reports-spending-months-to-compare\",\n    default: 3\n  },\n  trendsShowAverage: {\n    localStorageKey: \"budget-reports-trends-show-average\",\n    default: true\n  }\n};\n\nexport const getSetting = (settingsKey, budgetId) => {\n  const setting = SETTINGS[settingsKey];\n\n  if (!setting) {\n    throw new Error(\"not a valid settings key\");\n  }\n\n  return get(getStorage(setting.localStorageKey), budgetId, setting.default);\n};\n\nexport const setSetting = (settingsKey, budgetId, value) => {\n  const setting = SETTINGS[settingsKey];\n\n  if (!setting) {\n    throw new Error(\"not a valid settings key\");\n  }\n\n  const previousSetting = getStorage(setting.localStorageKey);\n\n  setStorage(setting.localStorageKey, {\n    ...previousSetting,\n    [budgetId]: value\n  });\n};\n","export const groupBy = func => arr => {\n  const grouped = {};\n  arr.forEach(obj => {\n    const key = func(obj);\n    if (!grouped[key]) {\n      grouped[key] = [];\n    }\n    grouped[key].push(obj);\n  });\n  return grouped;\n};\n\nexport const groupByProp = key => arr => {\n  const grouped = {};\n  arr.forEach(obj => {\n    if (!grouped[obj[key]]) {\n      grouped[obj[key]] = [];\n    }\n    grouped[obj[key]].push(obj);\n  });\n  return grouped;\n};\n\nexport const keyByProp = key => arr =>\n  arr.reduce((acc, curr) => ({ ...acc, [curr[key]]: curr }), {});\n\nexport const sumBy = func => arr =>\n  arr.reduce((acc, curr) => acc + func(curr), 0);\n\nexport const sumByProp = key => arr =>\n  arr.reduce((acc, curr) => acc + curr[key], 0);\n\nexport const simpleMemoize = func => {\n  let lastArgs = null;\n  let lastResult = null;\n  return (...args) => {\n    if (\n      lastArgs !== null &&\n      lastArgs.length === args.length &&\n      args.every((value, index) => value === lastArgs[index])\n    ) {\n      return lastResult;\n    }\n    lastArgs = args;\n    lastResult = func(...args);\n    return lastResult;\n  };\n};\n\nexport const notAny = predicates => arg =>\n  predicates.every(predicate => !predicate(arg));\n\nexport const upsertBy = (arr, key, obj, updater = (prev, curr) => curr) => {\n  let exists = false;\n  const newArr = arr.map(item => {\n    if (item[key] === obj[key]) {\n      exists = true;\n      return updater(item, obj);\n    }\n    return item;\n  });\n  return exists ? newArr : newArr.concat(obj);\n};\n","import { utils } from \"ynab\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport flatMap from \"lodash/fp/flatMap\";\nimport dropWhile from \"lodash/fp/dropWhile\";\nimport matchesProperty from \"lodash/fp/matchesProperty\";\nimport omit from \"lodash/fp/omit\";\nimport reverse from \"lodash/fp/reverse\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport uniq from \"lodash/fp/uniq\";\nimport { upsertBy, keyByProp } from \"./dataUtils\";\n\nconst formatCurrency = utils.convertMilliUnitsToCurrencyAmount;\n\nconst GROUPS_TO_HIDE = [\"Internal Master Category\", \"Credit Card Payments\"];\n\nconst MAX_MONTHS_TO_SHOW = 240;\n\nexport const sanitizeBudget = budget => {\n  const transactionIdsFromSub = uniq(\n    budget.subtransactions.map(transaction => transaction.transaction_id)\n  );\n  const categoryGroups = budget.category_groups.filter(\n    group => !GROUPS_TO_HIDE.includes(group.name)\n  );\n  const categories = budget.categories\n    .filter(category => !category.deleted)\n    .map(category => ({\n      ...category,\n      activity: formatCurrency(category.activity),\n      balance: formatCurrency(category.balance),\n      budgeted: formatCurrency(category.budgeted)\n    }));\n  const categoriesById = keyByProp(\"id\")(categories);\n  const earliestDate = moment()\n    .subtract(MAX_MONTHS_TO_SHOW - 1, \"months\")\n    .format(\"YYYY-MM-01\");\n  const currencyFormat = {\n    symbol: budget.currency_format.currency_symbol\n  };\n\n  return {\n    ...omit([\"category_groups\", \"currency_format\"])(budget),\n    accountsById: keyByProp(\"id\")(budget.accounts),\n    categoryGroups,\n    categoryGroupsById: keyByProp(\"id\")(categoryGroups),\n    categories,\n    categoriesById,\n    currencyFormat,\n    payeesById: keyByProp(\"id\")(budget.payees),\n    months: sortBy(\"month\")(budget.months),\n    transactions: compose([\n      transactions =>\n        transactions.map(transaction => ({\n          ...transaction,\n          amount: formatCurrency(transaction.amount)\n        })),\n      // Not sure how this would happen, but seeing it in production\n      transactions =>\n        transactions.filter(\n          transaction =>\n            !transaction.category_id ||\n            !!categoriesById[transaction.category_id]\n        ),\n      flatMap(transaction =>\n        transactionIdsFromSub.includes(transaction.id)\n          ? compose([\n              subs =>\n                subs.map(sub =>\n                  omit(\"transaction_id\")({\n                    ...transaction,\n                    ...sub,\n                    payee_id: sub.payee_id || transaction.payee_id\n                  })\n                ),\n              subs =>\n                subs.filter(matchesProperty(\"transaction_id\", transaction.id))\n            ])(budget.subtransactions)\n          : transaction\n      ),\n      reverse,\n      dropWhile(transaction => transaction.date < earliestDate),\n      sortBy(\"date\"),\n      transactions =>\n        transactions.filter(\n          transaction => transaction.amount !== 0 && !transaction.deleted\n        )\n    ])(budget.transactions)\n  };\n};\n\nconst applyDeltas = (arr, deltas, key = \"id\", updater) =>\n  deltas.reduce((acc, curr) => upsertBy(acc, key, curr, updater), arr);\n\nconst arraysToUpdate = [\n  \"accounts\",\n  \"categories\",\n  \"category_groups\",\n  \"payee_locations\",\n  \"payees\",\n  \"scheduled_subtransactions\",\n  \"scheduled_transactions\",\n  \"subtransactions\",\n  \"transactions\"\n];\n\nexport const mergeBudgets = (budget, deltas) => ({\n  ...budget,\n  ...deltas,\n  ...arraysToUpdate.reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr]: applyDeltas(budget[curr], deltas[curr])\n    }),\n    {}\n  ),\n  months: applyDeltas(budget.months, deltas.months, \"month\", (prev, curr) => ({\n    ...prev,\n    ...curr,\n    categories: applyDeltas(prev.categories, curr.categories)\n  }))\n});\n","import get from \"lodash/fp/get\";\nimport { getStorage, setStorage } from \"./localstorageUtils\";\n\nconst BUDGET_DETAILS_STORAGE_KEY = \"ynab_budget_details\";\n\nlet cachedDetails = null;\n\nconst getAllBudgetDetails = () => {\n  if (cachedDetails) {\n    return cachedDetails;\n  }\n  cachedDetails = getStorage(BUDGET_DETAILS_STORAGE_KEY);\n  return cachedDetails;\n};\n\nexport const getBudgetDetails = id => get(id)(getAllBudgetDetails());\n\nexport const setBudgetDetails = ({ id, budget, server_knowledge }) => {\n  const details = getAllBudgetDetails();\n  const newDetails = {\n    ...details,\n    [id]: { budget, server_knowledge }\n  };\n  setStorage(BUDGET_DETAILS_STORAGE_KEY, newDetails);\n  cachedDetails = newDetails;\n};\n","import * as ynab from \"ynab\";\nimport moment from \"moment\";\nimport get from \"lodash/fp/get\";\nimport matches from \"lodash/fp/matches\";\nimport { getStorage, setStorage } from \"./localstorageUtils\";\nimport { setSetting, getSetting } from \"./uiRepo\";\nimport { sanitizeBudget, mergeBudgets } from \"./repoUtils\";\nimport { getBudgetDetails, setBudgetDetails } from \"./localBudgetCache\";\nimport { clientId, redirectUri } from \"./ynabConfig\";\n\nconst TOKEN_STORAGE_KEY = \"ynab_access_token\";\nconst BUDGETS_STORAGE_KEY = \"ynab_budgets\";\nconst LAST_LOCATION_KEY = \"budget-reports-last-location\";\n\nconst TIME_LIMIT_FOR_FULL_REFRESH = 8 * 1000;\n\nexport const AUTHORIZE_URL =\n  \"https://api.youneedabudget.com/oauth/authorize?client_id=\" +\n  clientId +\n  \"&redirect_uri=\" +\n  redirectUri +\n  \"&response_type=token\";\n\nexport const getAuthorizeToken = () => {\n  // check for hash route\n  if (window.location.hash[1] === \"/\") {\n    return localStorage.getItem(TOKEN_STORAGE_KEY);\n  }\n\n  const search = window.location.hash\n    .substring(1)\n    .replace(/&/g, '\",\"')\n    .replace(/=/g, '\":\"');\n\n  if (!search) {\n    return localStorage.getItem(TOKEN_STORAGE_KEY);\n  }\n\n  const token = get(\"access_token\")(\n    JSON.parse(\n      '{\"' + search + '\"}',\n      (key, value) => (key === \"\" ? value : decodeURIComponent(value))\n    )\n  );\n  localStorage.setItem(TOKEN_STORAGE_KEY, token);\n  window.location.hash = localStorage.getItem(LAST_LOCATION_KEY) || \"\";\n  localStorage.removeItem(LAST_LOCATION_KEY);\n\n  return token;\n};\n\nlet api = null;\n\nexport const initializeYnabApi = token => {\n  api = new ynab.api(token);\n};\n\nexport const getBudgets = () =>\n  api.budgets\n    .getBudgets()\n    .then(({ data }) => {\n      setStorage(BUDGETS_STORAGE_KEY, data);\n      return data;\n    })\n    .catch(e => {\n      if (\n        matches({\n          id: \"401\",\n          name: \"unauthorized\"\n        })(e.error) ||\n        e.message === \"Failed to fetch\"\n      ) {\n        localStorage.removeItem(TOKEN_STORAGE_KEY);\n        return getStorage(BUDGETS_STORAGE_KEY) || { budgets: [] };\n      }\n\n      throw e;\n    });\n\nconst getBudget = id =>\n  api.budgets\n    .getBudgetById(id)\n    .then(({ data }) => {\n      const { budget, server_knowledge } = data;\n\n      setBudgetDetails({ id, budget, server_knowledge });\n      setSetting(\"lastUpdated\", id, moment().valueOf());\n\n      return { budget: sanitizeBudget(budget), authorized: true };\n    })\n    .catch(e => {\n      if (\n        matches({ id: \"401\", name: \"unauthorized\" })(e.error) ||\n        e.message === \"Failed to fetch\"\n      ) {\n        localStorage.removeItem(TOKEN_STORAGE_KEY);\n        return {\n          budget: { categories: [], transactions: [], payees: [] },\n          authorized: false\n        };\n      }\n\n      throw e;\n    });\n\nexport const getUpdatedBudget = id => {\n  const budgetDetails = getBudgetDetails(id);\n\n  if (!budgetDetails) {\n    return getBudget(id);\n  }\n\n  if (\n    moment().valueOf() - getSetting(\"lastUpdated\", id) <\n    TIME_LIMIT_FOR_FULL_REFRESH\n  ) {\n    return getBudget(id);\n  }\n\n  return api.budgets\n    .getBudgetById(id, budgetDetails.server_knowledge)\n    .then(({ data }) => {\n      const budget = mergeBudgets(budgetDetails.budget, data.budget);\n\n      setBudgetDetails({ id, budget, server_knowledge: data.server_knowledge });\n      setSetting(\"lastUpdated\", id, moment().valueOf());\n\n      return { budget: sanitizeBudget(budget), authorized: true };\n    })\n    .catch(e => {\n      if (\n        matches({ id: \"401\", name: \"unauthorized\" })(e.error) ||\n        e.message === \"Failed to fetch\"\n      ) {\n        return {\n          budget: sanitizeBudget(budgetDetails.budget),\n          authorized: false\n        };\n      }\n\n      throw e;\n    });\n};\n\nexport const setLastLocation = () => {\n  localStorage.setItem(LAST_LOCATION_KEY, window.location.hash);\n};\n","import styled from \"styled-components\";\n\nexport const PageTitle = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: #222;\n`;\n\nexport const LargeNumber = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: #222;\n`;\n\nexport const StrongText = styled.div`\n  font-size: 14px;\n  line-height: 22px;\n  font-weight: 500;\n  color: #222;\n`;\n\nexport const SecondaryText = styled.div`\n  font-size: 13px;\n  line-height: 21px;\n  font-weight: 400;\n  color: #666;\n`;\n\nexport const MinorText = styled.div`\n  font-size: 11px;\n  line-height: 16px;\n  font-weight: 400;\n  color: #999;\n`;\n","import React from \"react\";\nimport { StrongText, SecondaryText } from \"./typeComponents\";\n\nconst Loading = () => (\n  <div\n    style={{\n      height: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }}\n  >\n    <StrongText>Loading&hellip;</StrongText>\n    <SecondaryText>beep, beep, boop</SecondaryText>\n  </div>\n);\n\nLoading.propTypes = {};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loading from \"./Loading\";\n\nclass EnsureBudgetLoaded extends Component {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    budgetLoaded: PropTypes.bool.isRequired,\n    children: PropTypes.node.isRequired,\n    onRequestBudget: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    const { budgetId, budgetLoaded, onRequestBudget } = this.props;\n\n    if (!budgetLoaded) {\n      onRequestBudget(budgetId);\n    }\n  }\n\n  render() {\n    if (!this.props.budgetLoaded) {\n      return <Loading />\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default EnsureBudgetLoaded;\n","import tinyColor from \"tinycolor2\";\n\nexport const primaryColor = \"#4399ff\";\nexport const positiveColor = \"#2cbc2f\";\nexport const plotBandColor = \"#f2f2f2\";\nexport const negativeColor = \"red\";\nexport const selectedPlotBandColor = tinyColor(primaryColor)\n  .lighten(32)\n  .desaturate()\n  .toHexString();\nexport const lighterPrimaryColor = tinyColor(primaryColor)\n  .lighten(5)\n  .desaturate()\n  .toHexString();\nexport const lightPrimaryColor = tinyColor(primaryColor)\n  .lighten(25)\n  .desaturate()\n  .toHexString();\nexport const negativeChartColor = tinyColor(negativeColor)\n  .lighten(30)\n  .desaturate(60)\n  .toHexString();\n\nexport const iconWidth = 60;\n","import styled from \"styled-components\";\nimport { SecondaryText } from \"./typeComponents\";\nimport { primaryColor } from \"../styleVariables\";\n\nconst Button = styled(SecondaryText)`\n  display: inline-block;\n  user-select: none;\n  border: 1px solid #ccc;\n  padding: 4px 12px;\n  border-radius: 2px;\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nexport const PrimaryButton = styled(Button)`\n  background-color: ${primaryColor};\n  border-color: ${primaryColor};\n  color: #fff;\n`;\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/fp/keys\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons/faArrowLeft\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons/faBars\";\nimport { faCaretDown } from \"@fortawesome/free-solid-svg-icons/faCaretDown\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons/faChevronRight\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons/faCog\";\nimport { faEllipsisV } from \"@fortawesome/free-solid-svg-icons/faEllipsisV\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons/faEye\";\nimport { faEyeSlash } from \"@fortawesome/free-solid-svg-icons/faEyeSlash\";\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons/faPencilAlt\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons/faTimes\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nlibrary.add(\n  faArrowLeft,\n  faBars,\n  faCaretDown,\n  faChevronRight,\n  faCog,\n  faEllipsisV,\n  faEye,\n  faEyeSlash,\n  faPencilAlt,\n  faTimes\n);\n\nconst ICONS = {\n  \"arrow-left\": faArrowLeft,\n  bars: faBars,\n  \"caret-down\": faCaretDown,\n  \"chevron-right\": faChevronRight,\n  cog: faCog,\n  pencil: faPencilAlt,\n  \"ellipsis-v\": faEllipsisV,\n  eye: faEye,\n  \"eye-slash\": faEyeSlash,\n  times: faTimes\n};\n\nconst PRESET_STYLES = {\n  faded: {\n    fontWeight: 400,\n    color: \"#aaa\",\n    fontSize: 10\n  }\n};\n\nconst Icon = ({ icon, style, faded, ...other }) => (\n  <FontAwesomeIcon\n    {...other}\n    icon={ICONS[icon]}\n    style={{ ...style, ...(faded && PRESET_STYLES.faded) }}\n  />\n);\n\nIcon.propTypes = {\n  icon: PropTypes.oneOf(keys(ICONS)).isRequired,\n  faded: PropTypes.bool\n};\n\nexport default Icon;\n","export const makeLink = (path, params) =>\n  path.replace(/:([a-zA-Z]*)/g, (_, part) => params[part]);\n\nconst pages = {\n  currentMonth: {\n    path: \"/budgets/:budgetId/current\",\n    title: \"Current Month Spending\",\n    props: [\"budget\", \"currentMonth\", \"investmentAccounts\"]\n  },\n  currentMonthGroup: {\n    path: \"/budgets/:budgetId/current/:categoryGroupId\",\n    title: (params, budget) =>\n      budget.categoryGroupsById[params.categoryGroupId].name,\n    props: [\"budget\", \"currentMonth\"],\n    paramProps: [\"categoryGroupId\"],\n    breadcrumbs: [\"currentMonth\"]\n  },\n  currentMonthCategory: {\n    path: \"/budgets/:budgetId/current/:categoryGroupId/:categoryId\",\n    title: (params, budget) => budget.categoriesById[params.categoryId].name,\n    props: [\"budget\", \"currentMonth\"],\n    paramProps: [\"categoryId\", \"categoryGroupId\"],\n    breadcrumbs: [\"currentMonth\", \"currentMonthGroup\"]\n  },\n  groups: {\n    path: \"/budgets/:budgetId/groups\",\n    title: \"Spending Trends\",\n    props: [\"budget\"]\n  },\n  group: {\n    path: \"/budgets/:budgetId/groups/:categoryGroupId\",\n    title: (params, budget) =>\n      budget.categoryGroupsById[params.categoryGroupId].name,\n    props: [\"budget\"],\n    paramProps: [\"categoryGroupId\"],\n    breadcrumbs: [\"groups\"]\n  },\n  category: {\n    path: \"/budgets/:budgetId/groups/:categoryGroupId/categories/:categoryId\",\n    title: (params, budget) => budget.categoriesById[params.categoryId].name,\n    props: [\"budget\"],\n    paramProps: [\"categoryId\"],\n    breadcrumbs: [\"groups\", \"group\"]\n  },\n  categoryPayee: {\n    path:\n      \"/budgets/:budgetId/groups/:categoryGroupId/categories/:categoryId/payees/:payeeId\",\n    title: (params, budget) => budget.payeesById[params.payeeId].name,\n    props: [\"budget\"],\n    paramProps: [\"categoryId\", \"payeeId\"],\n    breadcrumbs: [\"groups\", \"group\", \"category\"]\n  },\n  income: {\n    path: \"/budgets/:budgetId/income\",\n    title: \"Income Trends\",\n    props: [\"budget\"]\n  },\n  incomeVsExpenses: {\n    path: \"/budgets/:budgetId/income-vs-expenses\",\n    title: \"Income vs Expenses\",\n    props: [\"budget\", \"investmentAccounts\"]\n  },\n  netWorth: {\n    path: \"/budgets/:budgetId/net-worth\",\n    title: \"Net Worth\",\n    props: [\"budget\", \"investmentAccounts\", \"mortgageAccounts\"]\n  },\n  investments: {\n    path: \"/budgets/:budgetId/investments\",\n    title: \"Investments\",\n    props: [\"budget\", \"investmentAccounts\"]\n  },\n  projections: {\n    path: \"/budgets/:budgetId/projections\",\n    title: \"Retirement Calculator\",\n    props: [\"budget\", \"investmentAccounts\", \"mortgageAccounts\"]\n  },\n  settings: {\n    path: \"/budgets/:budgetId/settings\",\n    title: \"Budget Settings\",\n    props: [\n      \"budget\",\n      \"investmentAccounts\",\n      \"mortgageAccounts\",\n      \"onUpdateAccounts\"\n    ]\n  }\n};\n\nexport default pages;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { matchPath } from \"react-router\";\nimport styled from \"styled-components\";\nimport pages, { makeLink } from \"../pages\";\nimport Icon from \"./Icon\";\nimport { selectedPlotBandColor, iconWidth } from \"../styleVariables\";\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n  height: 60px;\n`;\n\nconst IconWrapper = styled.div`\n  width: ${iconWidth}px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledLink = styled(NavLink)`\n  color: inherit;\n  display: flex;\n  align-items: center;\n  height: 60px;\n  padding: 0 20px;\n  background-color: ${props => props.active && selectedPlotBandColor};\n`;\n\nclass SidebarMenuContent extends PureComponent {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    hasMultipleBudgets: PropTypes.bool.isRequired,\n    location: PropTypes.string.isRequired,\n    onCloseSidebar: PropTypes.func.isRequired\n  };\n\n  render() {\n    const { budgetId, hasMultipleBudgets, location, onCloseSidebar } = this.props;\n\n    return (\n      <Fragment>\n        <PureHeader onCloseSidebar={onCloseSidebar} budgetId={budgetId} />\n        {[\n          \"currentMonth\",\n          \"groups\",\n          \"income\",\n          \"incomeVsExpenses\",\n          \"netWorth\",\n          \"investments\",\n          \"projections\"\n        ].map(page => {\n          const { path, title } = pages[page];\n\n          return (\n            <PureStyledLink\n              key={path}\n              to={makeLink(path, { budgetId })}\n              active={matchPath(location, { path })}\n              onClick={onCloseSidebar}\n            >\n              {title}\n            </PureStyledLink>\n          );\n        })}\n        {hasMultipleBudgets && (\n          <PureStyledLink to=\"/\">Switch Budgets</PureStyledLink>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nclass PureHeader extends PureComponent {\n  render() {\n    const { onCloseSidebar, budgetId } = this.props;\n    return (\n      <Header>\n        <IconWrapper onClick={onCloseSidebar}>\n          <Icon icon=\"times\" />\n        </IconWrapper>\n        <Link\n          to={makeLink(pages.settings.path, { budgetId })}\n          style={{ display: \"flex\", color: \"inherit\" }}\n          onClick={onCloseSidebar}\n        >\n          <IconWrapper>\n            <Icon icon=\"cog\" />\n          </IconWrapper>\n        </Link>\n      </Header>\n    );\n  }\n}\n\nclass PureStyledLink extends PureComponent {\n  render() {\n    return <StyledLink {...this.props} />;\n  }\n}\n\nexport default SidebarMenuContent;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Sidebar from \"react-sidebar\";\nimport { iconWidth } from \"../styleVariables\";\nimport Icon from \"./Icon\";\nimport SidebarMenuContent from \"./SidebarMenuContent\";\n\nclass SidebarMenu extends Component {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    children: PropTypes.func.isRequired,\n    hasMultipleBudgets: PropTypes.bool.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  state = { open: false };\n\n  handleSetOpen = open => {\n    this.setState({ open });\n  };\n\n  handleTriggerClick = () => {\n    this.setState({ open: true });\n  };\n\n  handleCloseSidebar = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { budgetId, children, hasMultipleBudgets, location } = this.props;\n    const { open } = this.state;\n\n    return (\n      <Sidebar\n        sidebar={\n          <SidebarMenuContent\n            budgetId={budgetId}\n            hasMultipleBudgets={hasMultipleBudgets}\n            location={location}\n            onCloseSidebar={this.handleCloseSidebar}\n          />\n        }\n        open={open}\n        onSetOpen={this.handleSetOpen}\n        styles={{\n          sidebar: {\n            backgroundColor: \"#fff\",\n            width: 280,\n            pointerEvents: !open && \"none\"\n          }\n        }}\n      >\n        {children({\n          sidebarTrigger: <Trigger onClick={this.handleTriggerClick} />\n        })}\n      </Sidebar>\n    );\n  }\n}\n\nconst Trigger = ({ onClick }) => (\n  <div\n    onClick={onClick}\n    style={{\n      alignSelf: \"stretch\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: iconWidth\n    }}\n  >\n    <Icon icon=\"bars\" />\n  </div>\n);\n\nexport default SidebarMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport EnsureBudgetLoaded from \"./EnsureBudgetLoaded\";\nimport { PrimaryButton } from \"./Button\";\nimport SidebarMenu from \"./SidebarMenu\";\n\nconst Container = styled.div`\n  height: 100%;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PageWrapper = ({\n  authorized,\n  budgetId,\n  budgetLoaded,\n  children,\n  hasMultipleBudgets,\n  location,\n  onAuthorize,\n  onRequestBudget\n}) => (\n  <EnsureBudgetLoaded\n    budgetId={budgetId}\n    budgetLoaded={budgetLoaded}\n    onRequestBudget={onRequestBudget}\n  >\n    <SidebarMenu\n      budgetId={budgetId}\n      location={location}\n      hasMultipleBudgets={hasMultipleBudgets}\n    >\n      {({ sidebarTrigger }) => (\n        <Container>\n          {children({ sidebarTrigger })}\n          {!authorized && (\n            <div\n              style={{\n                padding: \"15px 20px\",\n                backgroundColor: \"#fff\",\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                flexShrink: 0,\n                borderTop: \"1px solid #ccc\"\n              }}\n            >\n              Your authorization expired.\n              <PrimaryButton onClick={onAuthorize}>Reauthorize</PrimaryButton>\n            </div>\n          )}\n        </Container>\n      )}\n    </SidebarMenu>\n  </EnsureBudgetLoaded>\n);\n\nPageWrapper.propTypes = {\n  authorized: PropTypes.bool.isRequired,\n  budgetId: PropTypes.string.isRequired,\n  budgetLoaded: PropTypes.bool.isRequired,\n  children: PropTypes.func.isRequired,\n  hasMultipleBudgets: PropTypes.bool.isRequired,\n  location: PropTypes.string.isRequired,\n  onAuthorize: PropTypes.func.isRequired,\n  onRequestBudget: PropTypes.func.isRequired\n};\n\nexport default PageWrapper;\n","import compose from \"lodash/fp/compose\";\nimport pick from \"lodash/fp/pick\";\nimport mapRaw from \"lodash/fp/map\";\nimport get from \"lodash/fp/get\";\nimport last from \"lodash/fp/last\";\nimport { groupByProp, simpleMemoize, sumByProp } from \"./dataUtils\";\n\nconst map = mapRaw.convert({ cap: false });\n\nexport const isStartingBalanceOrReconciliation = simpleMemoize(budget => {\n  const startingBalancePayeeId = get(\"id\")(\n    budget.payees.find(payee => payee.name === \"Starting Balance\")\n  );\n  const reconciliationPayeeId = get(\"id\")(\n    budget.payees.find(\n      payee => payee.name === \"Reconciliation Balance Adjustment\"\n    )\n  );\n\n  return transaction =>\n    transaction.payee_id === startingBalancePayeeId ||\n    transaction.payee_id === reconciliationPayeeId;\n});\n\nexport const isIncome = simpleMemoize(budget => {\n  const toBeBudgetedId = get(\"id\")(\n    budget.categories.find(category => category.name === \"To be Budgeted\")\n  );\n  return transaction => transaction.category_id === toBeBudgetedId;\n});\n\nexport const isTransfer = (investmentAccounts = {}) => transaction =>\n  !transaction.category_id ||\n  !!investmentAccounts[transaction.transfer_account_id];\n\nexport const getTransactionMonth = transaction => transaction.date.slice(0, 7);\n\nconst rejectNonCategoryTransations = simpleMemoize(transactions =>\n  transactions.filter(tran => !!tran.category_id)\n);\n\nexport const getFirstMonth = budget =>\n  budget.transactions.length\n    ? getTransactionMonth(\n        last(rejectNonCategoryTransations(budget.transactions))\n      )\n    : undefined;\n\nexport const getPayeeNodes = ({ payeesById, transactions }, divideBy = 1) =>\n  compose([\n    map((transactions, payeeId) => ({\n      ...(payeesById[payeeId]\n        ? pick([\"id\", \"name\"])(payeesById[payeeId])\n        : { id: \"no-payee\", name: \"(no payee)\" }),\n      amount: sumByProp(\"amount\")(transactions) / divideBy\n    })),\n    groupByProp(\"payee_id\")\n  ])(transactions);\n\nexport const sanitizeName = name => name.replace(/[^a-zA-Z0-9 ]/g, \"\").trim();\n","import { useRef, useState } from \"react\";\nimport moment from \"moment\";\nimport { getSetting, setSetting } from \"./uiRepo\";\nimport { getFirstMonth } from \"./budgetUtils\";\n\nconst MAX_MONTHS_TO_COMPARE = 12;\n\nexport const useSelectedMonth = () => {\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const selectedMonthRef = useRef(selectedMonth);\n  selectedMonthRef.current = selectedMonth;\n\n  const onSelectMonth = month => {\n    setSelectedMonth(month === selectedMonthRef.current ? null : month);\n  };\n\n  return [selectedMonth, onSelectMonth];\n};\n\nexport const useSelectedEntityId = () => {\n  const [selectedEntityId, setSelectedEntityId] = useState(null);\n  const onSelectEntityId = entityId => {\n    setSelectedEntityId(entityId === selectedEntityId ? null : entityId);\n  };\n\n  return [selectedEntityId, onSelectEntityId];\n};\n\nexport const useTrendsShowAverage = budgetId => {\n  const [showAverage, setShowAverage] = useState(\n    getSetting(\"trendsShowAverage\", budgetId)\n  );\n  const onToggleShowAverage = () => {\n    setShowAverage(!showAverage);\n    setSetting(\"trendsShowAverage\", budgetId, !showAverage);\n  };\n\n  return [showAverage, onToggleShowAverage];\n};\n\nconst getMonths = (firstMonth, lastMonth) => {\n  const months = [firstMonth];\n  let m = firstMonth;\n\n  while (m !== lastMonth) {\n    m = moment(m)\n      .add(1, \"months\")\n      .format(\"YYYY-MM\");\n    months.push(m);\n  }\n\n  return months;\n};\n\nexport const useMonthExclusions = budget => {\n  const [excludeFirstMonth, setExcludeFirstMonth] = useState(\n    getSetting(\"excludeFirstMonth\", budget.id)\n  );\n  const [excludeLastMonth, setExcludeLastMonth] = useState(\n    getSetting(\"excludeLastMonth\", budget.id)\n  );\n\n  const firstBudgetMonth = getFirstMonth(budget);\n  const firstMonth = excludeFirstMonth\n    ? moment(firstBudgetMonth)\n        .add(1, \"months\")\n        .format(\"YYYY-MM\")\n    : firstBudgetMonth;\n  const lastMonth = excludeLastMonth\n    ? moment()\n        .subtract(1, \"months\")\n        .format(\"YYYY-MM\")\n    : moment().format(\"YYYY-MM\");\n  const months = getMonths(firstMonth, lastMonth);\n\n  const onSetExclusion = ({ month, exclude }) => {\n    if (month === \"first\") {\n      setExcludeFirstMonth(exclude);\n      setSetting(\"excludeFirstMonth\", budget.id, exclude);\n    } else {\n      setExcludeLastMonth(exclude);\n      setSetting(\"excludeLastMonth\", budget.id, exclude);\n    }\n  };\n\n  return { excludeFirstMonth, excludeLastMonth, months, onSetExclusion };\n};\n\nexport const useMonthsToCompare = budgetId => {\n  const [monthsToCompare, setMonthsToCompare] = useState(\n    getSetting(\"spendingMonthsToCompare\", budgetId)\n  );\n\n  const onDecrementMonths = () => {\n    const newMonths = Math.max(monthsToCompare - 1, 0);\n    setMonthsToCompare(newMonths);\n    setSetting(\"spendingMonthsToCompare\", budgetId, newMonths);\n  };\n\n  const onIncrementMonths = () => {\n    const newMonths = Math.min(monthsToCompare + 1, MAX_MONTHS_TO_COMPARE);\n    setMonthsToCompare(newMonths);\n    setSetting(\"spendingMonthsToCompare\", budgetId, newMonths);\n  };\n\n  return { monthsToCompare, onDecrementMonths, onIncrementMonths };\n};\n\nexport const useFlagState = initial => {\n  const [flag, setFlag] = useState(initial);\n\n  return [\n    flag,\n    () => {\n      setFlag(false);\n    },\n    () => {\n      setFlag(true);\n    },\n    () => {\n      setFlag(!flag);\n    }\n  ];\n};\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Scroller extends Component {\n  static propTypes = {\n    action: PropTypes.string.isRequired,\n    children: PropTypes.func.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  toBeScrolled = null;\n\n  raf = null;\n\n  scrollPositions = {};\n\n  getSnapshotBeforeUpdate() {\n    return { scrollTop: this.toBeScrolled.scrollTop };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { action, location } = this.props;\n\n    if (location === prevProps.location) {\n      return;\n    }\n\n    if (action === \"POP\") {\n      this.scrollPositions[prevProps.location] = snapshot.scrollTop;\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = this.scrollPositions[location] || 0;\n      });\n    }\n\n    if (action === \"PUSH\") {\n      this.scrollPositions[prevProps.location] = snapshot.scrollTop;\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = 0;\n      });\n    }\n\n    if (action === \"REPLACE\") {\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = 0;\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.raf);\n  }\n\n  render() {\n    return this.props.children({\n      ref: el => {\n        this.toBeScrolled = el;\n      }\n    });\n  }\n}\n\nexport default Scroller;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport values from \"lodash/fp/values\";\nimport pages, { makeLink } from \"../pages\";\nimport { MinorText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\n\nconst routes = values(pages)\n  .filter(page => !!page.breadcrumbs)\n  .map(page => ({\n    path: page.path,\n    breadcrumbs: page.breadcrumbs.map(pageKey => ({\n      title: pages[pageKey].title,\n      path: pages[pageKey].path\n    }))\n  }));\n\nconst PageBreadcrumbs = ({ budget }) =>\n  budget ? (\n    <Switch>\n      {routes.map(({ path, breadcrumbs }) => (\n        <Route\n          key={path}\n          path={path}\n          exact\n          render={props => (\n            <MinorText style={{ lineHeight: 1, whiteSpace: \"normal\" }}>\n              {breadcrumbs.map(({ title, path }, index) => (\n                <Fragment key={path}>\n                  <Link\n                    to={makeLink(path, props.match.params)}\n                    style={{\n                      paddingBottom: 8,\n                      display: \"inline-block\"\n                    }}\n                  >\n                    {typeof title === \"function\"\n                      ? title(props.match.params, budget)\n                      : title}\n                  </Link>\n                  {index !== breadcrumbs.length - 1 && (\n                    <Icon\n                      icon=\"chevron-right\"\n                      style={{ padding: \"0 5px\", fontSize: 8 }}\n                    />\n                  )}\n                </Fragment>\n              ))}\n            </MinorText>\n          )}\n        />\n      ))}\n    </Switch>\n  ) : null;\n\nPageBreadcrumbs.propTypes = {\n  budget: PropTypes.object\n};\n\nexport default PageBreadcrumbs;\n","import React from \"react\";\nimport pages, { makeLink } from \"../pages\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { SecondaryText } from \"./typeComponents\";\n\nconst PageActions = () => (\n  <Switch>\n    <Route\n      path={pages.currentMonth.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.groups.path, match.params)}>\n            Past Months\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.currentMonthGroup.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.group.path, match.params)}>Past Months</Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.currentMonthCategory.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.category.path, match.params)}>\n            Past Months\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.groups.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonth.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.group.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonthGroup.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.category.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonthCategory.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n  </Switch>\n);\n\nPageActions.propTypes = {};\n\nexport default PageActions;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { PageTitle } from \"./typeComponents\";\nimport Scroller from \"./Scroller\";\nimport PageBreadcrumbs from \"./PageBreadcrumbs\";\nimport PageActions from \"./PageActions\";\n\nconst Header = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  height: 60px;\n  padding-left: 0;\n  padding-right: 20px;\n  background-color: #fff;\n  background-clip: padding-box;\n  border-bottom: 2px solid rgba(0, 0, 0, 0.1);\n  white-space: pre;\n  user-select: none;\n`;\n\nconst Body = styled.div`\n  flex-grow: 1;\n  overflow-y: auto;\n`;\n\nconst PageLayout = ({\n  sidebarTrigger, // from PageWrapper\n  historyAction, // from PageWrapper\n  location, // from PageWrapper\n  budget,\n  title,\n  breadcrumbs,\n  fixedContent,\n  content\n}) => (\n  <Fragment>\n    <Header>\n      {sidebarTrigger}\n      <div style={{ flexGrow: 1 }}>\n        <PageBreadcrumbs budget={budget} />\n        <PageTitle style={{ lineHeight: 1 }}>{title}</PageTitle>\n      </div>\n      <PageActions />\n    </Header>\n    {fixedContent}\n    <Scroller action={historyAction} location={location}>\n      {({ ref }) => <Body ref={ref}>{content}</Body>}\n    </Scroller>\n  </Fragment>\n);\n\nPageLayout.propTypes = {\n  sidebarTrigger: PropTypes.node.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  budget: PropTypes.object,\n  breadcrumbs: PropTypes.node,\n  fixedContent: PropTypes.node,\n  content: PropTypes.node\n};\n\nexport default PageLayout;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { StrongText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\n\nconst Container = styled.div`\n  margin: ${props => (props.fullWidth ? \"0\" : \"2px\")};\n  background-color: #fff;\n  background-clip: padding-box;\n  border: ${props => (props.fullWidth ? \"0\" : \"1px\")} solid rgba(0, 0, 0, 0.05);\n  border-bottom-width: 1px;\n  border-radius: 2px;\n`;\n\nconst Header = styled(StrongText)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px 20px;\n  user-select: none;\n`;\n\nconst SettingsContainer = styled.div`\n  padding: 0 10px;\n  margin-right: -10px;\n  align-self: stretch;\n  display: flex;\n  align-items: center;\n  margin-left: 5px;\n`;\n\nconst Body = styled.div`\n  padding: 0 ${props => (props.fullWidth ? \"22px\" : \"20px\")} 15px;\n`;\n\nconst CollapsibleSection = ({\n  actions,\n  children,\n  fullWidth,\n  hasSettings,\n  noPadding,\n  title,\n  onClickSettings\n}) => {\n  const [expanded, setExpanded] = useState(true);\n\n  return (\n    <Container fullWidth={fullWidth}>\n      <Header>\n        <div\n          style={{ display: \"flex\", alignItems: \"center\" }}\n          onClick={() => {\n            setExpanded(!expanded);\n          }}\n        >\n          {title}\n          <Icon\n            icon=\"chevron-right\"\n            transform={{ rotate: expanded ? 90 : 0 }}\n            style={{ marginLeft: 10 }}\n            faded\n          />\n        </div>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          {expanded && actions}\n          {hasSettings &&\n            expanded && (\n              <SettingsContainer onClick={onClickSettings}>\n                <Icon icon=\"cog\" faded />\n              </SettingsContainer>\n            )}\n        </div>\n      </Header>\n      <AnimateHeight isExpanded={expanded}>\n        <Body style={{ padding: noPadding && 0 }}>{children}</Body>\n      </AnimateHeight>\n    </Container>\n  );\n};\n\nCollapsibleSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  actions: PropTypes.node,\n  fullWidth: PropTypes.bool,\n  hasSettings: PropTypes.bool,\n  noPadding: PropTypes.bool,\n  onClickSettings: PropTypes.func\n};\n\nexport default CollapsibleSection;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst CHART_DEFAULTS = {\n  chart: { height: 240, spacing: [0, 0, 0, 0] },\n  credits: { enabled: false },\n  legend: { enabled: false },\n  title: { text: \"\" },\n  subtitle: { text: \"\" },\n  tooltip: { enabled: false },\n  xAxis: { tickLength: 0 }\n};\n\nconst Chart = ({ options }) => (\n  <HighchartsReact\n    highcharts={Highcharts}\n    options={{\n      ...CHART_DEFAULTS,\n      ...options,\n      chart: { ...CHART_DEFAULTS.chart, ...options.chart },\n      xAxis: { ...CHART_DEFAULTS.xAxis, ...options.xAxis }\n    }}\n  />\n);\n\nChart.propTypes = {\n  options: PropTypes.object\n};\n\nexport default Chart;\n","import React from \"react\";\n\nconst CurrencyContext = React.createContext();\n\nexport default CurrencyContext;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport get from \"lodash/fp/get\";\nimport { positiveColor, negativeColor } from \"../styleVariables\";\nimport CurrencyContext from \"./CurrencyContext\";\n\nexport const addCommas = nStr => {\n  nStr += \"\";\n\n  const x = nStr.split(\".\");\n  let x1 = x[0];\n  const x2 = x.length > 1 ? \".\" + x[1] : \"\";\n  const rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, \"$1,$2\");\n  }\n  return x1 + x2;\n};\n\nconst Amount = ({\n  amount,\n  amountAfterDecimal,\n  positiveIsRed,\n  showCurrencySymbol,\n  style\n}) => (\n  <CurrencyContext.Consumer>\n    {currencyFormat => (\n      <span\n        style={{\n          ...style,\n          color: amount > 0 && (positiveIsRed ? negativeColor : positiveColor)\n        }}\n      >\n        {amount > 0 && (positiveIsRed ? \"-\" : \"+\")}\n        {showCurrencySymbol && (get(\"symbol\")(currencyFormat) || \"$\")}\n        {addCommas(Math.abs(amount).toFixed(amountAfterDecimal))}\n      </span>\n    )}\n  </CurrencyContext.Consumer>\n);\n\nAmount.propTypes = {\n  amount: PropTypes.number.isRequired,\n  amountAfterDecimal: PropTypes.number,\n  positiveIsRed: PropTypes.bool,\n  showCurrencySymbol: PropTypes.bool,\n  style: PropTypes.object\n};\n\nAmount.defaultProps = {\n  amountAfterDecimal: 2\n};\n\nexport default Amount;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport isNumber from \"lodash/fp/isNumber\";\nimport { MinorText, LargeNumber } from \"./typeComponents\";\nimport Amount from \"./Amount\";\n\nconst ChartNumbers = ({ numbers, alwaysRound }) => {\n  const smallNumbers = numbers.some(({ amount }) => Math.abs(amount) < 100);\n  return (\n    <div\n      style={{\n        textAlign: \"right\",\n        lineHeight: \"16px\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        flexDirection: \"row-reverse\",\n        marginBottom: 8\n      }}\n    >\n      {numbers.map(({ amount, label, isMoney = true, decimalsToRound }) => (\n        <div key={label} style={{ marginLeft: 20 }}>\n          <LargeNumber style={{ lineHeight: \"16px\" }}>\n            <Amount\n              amount={amount}\n              amountAfterDecimal={\n                isNumber(decimalsToRound)\n                  ? decimalsToRound\n                  : smallNumbers && !alwaysRound\n                    ? 2\n                    : 0\n              }\n              showCurrencySymbol={isMoney}\n              positiveIsRed\n            />\n          </LargeNumber>\n          <MinorText>{label}</MinorText>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nChartNumbers.propTypes = {\n  numbers: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      label: PropTypes.string.isRequired,\n      alwaysRound: PropTypes.bool,\n      decimalsToRound: PropTypes.number,\n      isMoney: PropTypes.bool\n    })\n  ).isRequired,\n  alwaysRound: PropTypes.bool\n};\n\nexport default ChartNumbers;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport tinyColor from \"tinycolor2\";\nimport compose from \"lodash/fp/compose\";\nimport isNumber from \"lodash/fp/isNumber\";\nimport padCharsStart from \"lodash/fp/padCharsStart\";\nimport range from \"lodash/fp/range\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport { groupByProp, sumByProp } from \"../dataUtils\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport { primaryColor, plotBandColor } from \"../styleVariables\";\nimport { MinorText } from \"./typeComponents\";\nimport Chart from \"./Chart\";\nimport ChartNumbers from \"./ChartNumbers\";\n\nconst DateLabels = styled.div`\n  border-top: 1px solid #ddd;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst getData = ({ month, transactionsByDate }) => {\n  const today = moment().format(\"YYYY-MM-DD\");\n  let cumulative = 0;\n  return range(-1, moment(month).daysInMonth()).map(numDays => {\n    const date =\n      numDays === -1\n        ? moment(month).add(-1, \"days\")\n        : `${month}-${padCharsStart(\"0\")(2)(numDays + 1)}`;\n\n    if (date > today) {\n      return null;\n    }\n\n    cumulative += -sumBy(\"amount\")(transactionsByDate[date] || []);\n\n    return cumulative;\n  });\n};\n\nclass SpendingChart extends PureComponent {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    currentMonth: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        date: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    total: PropTypes.number\n  };\n\n  render() {\n    const {\n      total,\n      transactions,\n      highlightFunction,\n      currentMonth,\n      monthsToCompare\n    } = this.props;\n\n    const highlightedTransactions = highlightFunction\n      ? transactions.filter(highlightFunction)\n      : [];\n    const highlightData = getData({\n      month: currentMonth,\n      transactionsByDate: groupByProp(\"date\")(highlightedTransactions)\n    });\n    const highlightSeries = {\n      type: \"areaspline\",\n      data: highlightData,\n      enableMouseTracking: false,\n      marker: { enabled: false },\n      animation: false,\n      color: primaryColor,\n      lineWidth: 0,\n      fillOpacity: 0.8\n    };\n    const daysInMonth = moment(currentMonth).daysInMonth();\n    const firstDate = moment(currentMonth).add(-1, \"days\");\n    const lastDate = moment(currentMonth).add(daysInMonth - 1, \"days\");\n\n    const transactionsByDate = groupByProp(\"date\")(transactions);\n    const data = getData({ month: currentMonth, transactionsByDate });\n    const lineData = range(0, daysInMonth + 1).map(\n      day => (day / daysInMonth) * total\n    );\n    const firstDayOfWeek = parseInt(firstDate.format(\"d\"), 10);\n    const plotBands = range(0, 6).map(num => ({\n      color: plotBandColor,\n      from: num * 7 - 1.5 - firstDayOfWeek,\n      to: num * 7 + 0.5 - firstDayOfWeek\n    }));\n\n    const comparisonSeries = range(monthsToCompare, 0).map(numMonths => ({\n      type: \"spline\",\n      data: getData({\n        month: moment(currentMonth)\n          .subtract(numMonths, \"months\")\n          .format(\"YYYY-MM\"),\n        transactionsByDate\n      }),\n      enableMouseTracking: false,\n      color:\n        \"#\" +\n        tinyColor\n          .mix(\n            primaryColor,\n            \"#f2f2f2\",\n            30 + ((numMonths - 1) * 70) / monthsToCompare\n          )\n          .toHex(),\n      lineWidth: 1,\n      marker: { enabled: false },\n      animation: false\n    }));\n\n    const spent = compose([\n      sumByProp(\"amount\"),\n      takeWhile(\n        transaction => getTransactionMonth(transaction) === currentMonth\n      )\n    ])(transactions);\n    const chartNumbers = [{ amount: spent, label: \"spent\" }];\n    if (isNumber(total)) {\n      chartNumbers.push({ amount: -(total + spent), label: \"available\" });\n    }\n\n    return (\n      <Fragment>\n        <ChartNumbers numbers={chartNumbers} />\n        <Chart\n          key={monthsToCompare}\n          options={{\n            chart: { spacing: [0, 0, 0, 0], height: 140, animation: false },\n            xAxis: {\n              labels: { enabled: false },\n              plotBands\n            },\n            yAxis: { visible: false, endOnTick: false, startOnTick: false },\n            series: [\n              {\n                type: \"line\",\n                color: \"#aaa\",\n                dashStyle: \"Dot\",\n                lineWidth: 1,\n                data: lineData,\n                enableMouseTracking: false,\n                marker: { enabled: false },\n                animation: false\n              },\n              ...comparisonSeries,\n              {\n                type: \"spline\",\n                data,\n                enableMouseTracking: false,\n                color: primaryColor,\n                marker: { enabled: false },\n                animation: false,\n                ...(highlightFunction && {\n                  type: \"areaspline\",\n                  fillOpacity: 0.2\n                })\n              },\n              highlightSeries\n            ]\n          }}\n        />\n        <DateLabels>\n          <MinorText>{firstDate.format(\"MMM D\")}</MinorText>\n          <MinorText>{lastDate.format(\"MMM D\")}</MinorText>\n        </DateLabels>\n      </Fragment>\n    );\n  }\n}\n\nexport default SpendingChart;\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { StrongText } from \"./typeComponents\";\nimport { PrimaryButton } from \"./Button\";\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  opacity: 0;\n  transition: opacity 0.2s ease-in-out;\n`;\n\nconst ModalContent = styled.div`\n  position: relative;\n  min-width: 200px;\n  padding: 15px 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  background-color: #fff;\n  border-radius: 2px;\n  transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out;\n`;\n\nconst ensureNextTick = callback =>\n  requestAnimationFrame(() => {\n    requestAnimationFrame(callback);\n  });\n\nclass Modal extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    width: PropTypes.number\n  };\n\n  constructor() {\n    super();\n    this.el = document.createElement(\"div\");\n    this.state = { animationState: \"left\" };\n  }\n\n  componentDidMount() {\n    document.body.appendChild(this.el);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.open && this.props.open) {\n      ensureNextTick(() => {\n        this.setState({ animationState: \"entering\" });\n      });\n    }\n    if (prevProps.open && !this.props.open) {\n      ensureNextTick(() => {\n        this.setState({ animationState: \"leaving\" });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.el);\n  }\n\n  handleTransitionEnd = () => {\n    const { animationState } = this.state;\n\n    if (animationState === \"entering\") {\n      this.setState({ animationState: \"entered\" });\n    } else if (animationState === \"leaving\") {\n      this.setState({ animationState: \"left\" });\n    }\n  };\n\n  render() {\n    const { open, children, title, onClose, width } = this.props;\n    const { animationState } = this.state;\n\n    if (!open && animationState === \"left\") {\n      return null;\n    }\n\n    const shouldShow = [\"entering\", \"entered\"].includes(animationState);\n\n    return createPortal(\n      <Container>\n        <Overlay\n          onClick={onClose}\n          style={{ opacity: shouldShow ? 1 : 0 }}\n          onTransitionEnd={this.handleTransitionEnd}\n        />\n        <ModalContent\n          style={{\n            opacity: shouldShow ? 1 : 0,\n            transform: `translate3d(0, ${shouldShow ? \"0\" : \"20px\"}, 0)`,\n            width\n          }}\n        >\n          {title && (\n            <StrongText style={{ marginBottom: 10 }}>{title}</StrongText>\n          )}\n          {children}\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              marginTop: 20\n            }}\n          >\n            <PrimaryButton onClick={onClose}>Done</PrimaryButton>\n          </div>\n        </ModalContent>\n      </Container>,\n      this.el\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"./Modal\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Button from \"./Button\";\n\nconst ChartSettingsModal = ({\n  open,\n  monthsToCompare,\n  onClose,\n  onDecrementMonths,\n  onIncrementMonths\n}) => (\n  <Modal open={open} title=\"Chart Settings\" onClose={onClose}>\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <div style={{ marginRight: 10 }}>\n        <Button onClick={onDecrementMonths}>-</Button>\n        <Button onClick={onIncrementMonths}>+</Button>\n      </div>\n      <SecondaryText>\n        Compare with the last {monthsToCompare} month\n        {monthsToCompare === 1 ? \"\" : \"s\"}\n      </SecondaryText>\n    </div>\n  </Modal>\n);\n\nChartSettingsModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  monthsToCompare: PropTypes.number.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onDecrementMonths: PropTypes.func.isRequired,\n  onIncrementMonths: PropTypes.func.isRequired\n};\n\nexport default ChartSettingsModal;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useMonthsToCompare, useFlagState } from \"../commonHooks\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport SpendingChart from \"./SpendingChart\";\nimport ChartSettingsModal from \"./ChartSettingsModal\";\n\nconst DayByDaySection = ({\n  actions,\n  budgetId,\n  currentMonth,\n  highlightFunction,\n  title,\n  total,\n  transactions\n}) => {\n  const [modalOpen, onCloseModal, onOpenModal] = useFlagState(false);\n  const {\n    monthsToCompare,\n    onIncrementMonths,\n    onDecrementMonths\n  } = useMonthsToCompare(budgetId);\n\n  return (\n    <Fragment>\n      <CollapsibleSection\n        actions={actions}\n        title={title}\n        hasSettings\n        onClickSettings={onOpenModal}\n      >\n        <SpendingChart\n          budgetId={budgetId}\n          currentMonth={currentMonth}\n          highlightFunction={highlightFunction}\n          monthsToCompare={monthsToCompare}\n          total={total}\n          transactions={transactions}\n        />\n      </CollapsibleSection>\n      <ChartSettingsModal\n        open={modalOpen}\n        monthsToCompare={monthsToCompare}\n        onClose={onCloseModal}\n        onDecrementMonths={onDecrementMonths}\n        onIncrementMonths={onIncrementMonths}\n      />\n    </Fragment>\n  );\n};\n\nDayByDaySection.propTypes = {\n  budgetId: PropTypes.string.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  transactions: PropTypes.array.isRequired,\n  actions: PropTypes.node,\n  highlightFunction: PropTypes.func,\n  title: PropTypes.string,\n  total: PropTypes.number\n};\n\nDayByDaySection.defaultProps = { title: \"Day by Day\" };\n\nexport default DayByDaySection;\n","import styled from \"styled-components\";\n\nconst ListItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 0;\n  user-select: none;\n\n  &:first-child {\n    padding-top: ${props => !props.isContinuing && 0};\n  }\n`;\n\nexport default ListItem;\n","import styled from \"styled-components\";\nimport { SecondaryText } from \"./typeComponents\";\n\nconst EmptyText = styled(SecondaryText)`\n  text-align: center;\n  margin: 10px;\n  opacity: 0.5;\n`;\n\nexport default EmptyText;\n","import React from \"react\";\nimport EmptyText from \"./EmptyText\";\n\nconst NoTransactions = () => <EmptyText>No transactions this month</EmptyText>;\n\nexport default NoTransactions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\n\nconst LabelWithMinorText = ({ label, minorText, inLink, to, bold }) => (\n  <SecondaryText\n    style={{\n      fontWeight: bold && 700,\n      display: \"flex\",\n      alignItems: \"baseline\",\n      whiteSpace: \"pre\",\n      overflow: \"hidden\",\n      color: inLink && \"inherit\"\n    }}\n  >\n    {to ? <Link to={to}>{label}</Link> : label}\n    {minorText && (\n      <MinorText\n        style={{\n          fontWeight: bold && 700,\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\"\n        }}\n      >\n        &nbsp;&ndash; {minorText}\n      </MinorText>\n    )}\n  </SecondaryText>\n);\n\nLabelWithMinorText.propTypes = {\n  label: PropTypes.string.isRequired,\n  bold: PropTypes.bool,\n  inLink: PropTypes.bool,\n  minorText: PropTypes.string,\n  to: PropTypes.string\n};\n\nexport default LabelWithMinorText;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LabelWithMinorText from \"./LabelWithMinorText\";\n\nconst LabelWithTransactionCount = ({\n  label,\n  count,\n  inLink,\n  selected,\n  showCount,\n  to\n}) => (\n  <LabelWithMinorText\n    bold={selected}\n    label={label}\n    minorText={showCount && `${count} transaction${count === 1 ? \"\" : \"s\"}`}\n    inLink={inLink}\n    to={to}\n  />\n);\n\nLabelWithTransactionCount.propTypes = {\n  count: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n  inLink: PropTypes.bool,\n  selected: PropTypes.bool,\n  showCount: PropTypes.bool,\n  to: PropTypes.string\n};\n\nLabelWithTransactionCount.defaultProps = { showCount: true };\n\nexport default LabelWithTransactionCount;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\n\nconst AmountWithPercentage = ({\n  amount,\n  positiveIsRed,\n  total,\n  faded,\n  selected\n}) => (\n  <SecondaryText\n    style={{\n      display: \"flex\",\n      alignItems: \"baseline\",\n      opacity: faded ? 0.3 : 1,\n      fontWeight: selected && 700\n    }}\n  >\n    <Amount amount={amount} positiveIsRed={positiveIsRed} />\n    <MinorText\n      style={{ width: 44, textAlign: \"right\", fontWeight: selected && 700 }}\n    >\n      {total ? `${((amount / total) * 100).toFixed(1)}%` : `–`}\n    </MinorText>\n  </SecondaryText>\n);\n\nAmountWithPercentage.propTypes = {\n  amount: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveIsRed: PropTypes.bool,\n  faded: PropTypes.bool,\n  selected: PropTypes.bool\n};\n\nexport default AmountWithPercentage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MinorText } from \"./typeComponents\";\n\nconst SeeAll = ({ count, pluralizedName, showAll, onToggle }) => (\n  <MinorText style={{ textAlign: \"center\", marginTop: 5 }} onClick={onToggle}>\n    {showAll ? \"see less\" : `see all ${count} ${pluralizedName}`}\n  </MinorText>\n);\n\nSeeAll.propTypes = {\n  count: PropTypes.number.isRequired,\n  pluralizedName: PropTypes.string.isRequired,\n  showAll: PropTypes.bool.isRequired,\n  onToggle: PropTypes.func.isRequired\n};\n\nexport default SeeAll;\n","import React, { Component, PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport get from \"lodash/fp/get\";\nimport map from \"lodash/fp/map\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { groupBy, groupByProp, sumByProp } from \"../dataUtils\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { Link } from \"react-router-dom\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport { SecondaryText } from \"./typeComponents\";\nimport ListItem from \"./ListItem\";\nimport NoTransactions from \"./NoTransactions\";\nimport LabelWithTransactionCount from \"./LabelWithTransactionCount\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\nimport SeeAll from \"./SeeAll\";\n\nconst mapWithKeys = map.convert({ cap: false });\nconst LIMIT = 5;\n\nconst keyToPluralizedName = {\n  category_group_id: \"category groups\",\n  category_id: \"categories\",\n  payee_id: \"payees\"\n};\n\nclass GenericEntitiesSection extends Component {\n  static propTypes = {\n    entitiesById: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    entityKey: PropTypes.oneOf([\n      \"category_id\",\n      \"category_group_id\",\n      \"payee_id\"\n    ]),\n    emptyName: PropTypes.string,\n    entityFunction: PropTypes.func,\n    positiveIsRed: PropTypes.bool,\n    linkFunction: PropTypes.func,\n    limitShowing: PropTypes.bool,\n    numMonths: PropTypes.number,\n    selectedEntityId: PropTypes.string,\n    showAverage: PropTypes.bool,\n    showAverageToggle: PropTypes.bool,\n    showTransactionCount: PropTypes.bool,\n    onClickEntity: PropTypes.func,\n    onToggleAverage: PropTypes.func\n  };\n\n  static defaultProps = { emptyName: \"(none)\" };\n\n  state = { showAll: false, allMounted: false };\n\n  handleToggleShowAll = () => {\n    const { allMounted, showAll } = this.state;\n    if (allMounted) {\n      this.setState({ showAll: !showAll });\n    } else {\n      this.setState({ allMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ showAll: true });\n      });\n    }\n  };\n\n  render() {\n    const {\n      emptyName,\n      entityKey,\n      entityFunction,\n      entitiesById,\n      positiveIsRed,\n      linkFunction,\n      limitShowing: limitShowingProp,\n      numMonths,\n      selectedEntityId,\n      showAverage,\n      showAverageToggle,\n      showTransactionCount,\n      title,\n      transactions,\n      onClickEntity,\n      onToggleAverage\n    } = this.props;\n    const { allMounted, showAll } = this.state;\n    let total = 0;\n    const entities = compose([\n      sortBy(\"amount\"),\n      mapWithKeys((transactions, entityId) => {\n        const amount = sumByProp(\"amount\")(transactions);\n        total += amount;\n\n        return {\n          entityId,\n          transactions: transactions.length,\n          amount\n        };\n      }),\n      entityFunction ? groupBy(entityFunction) : groupByProp(entityKey)\n    ])(transactions);\n\n    const limitShowing = limitShowingProp && entities.length > LIMIT + 1;\n    const topEntities = entities.slice(0, LIMIT);\n    const otherEntities = entities.slice(LIMIT);\n\n    return (\n      <CollapsibleSection\n        title={title}\n        actions={\n          showAverageToggle && (\n            <SecondaryText onClick={onToggleAverage}>\n              {showAverage ? \"average\" : \"total\"}\n            </SecondaryText>\n          )\n        }\n      >\n        {entities.length === 0 && <NoTransactions />}\n        {(limitShowing ? topEntities : entities).map(\n          ({ entityId, transactions, amount }) => (\n            <GenericItemLink\n              key={entityId}\n              showTransactionCount={showTransactionCount}\n              to={\n                linkFunction && !!entitiesById[entityId]\n                  ? linkFunction(entityId)\n                  : null\n              }\n              transactions={transactions}\n              name={get(\"name\")(entitiesById[entityId]) || emptyName}\n              amount={showAverage ? amount / numMonths : amount}\n              positiveIsRed={positiveIsRed}\n              selected={entityId === selectedEntityId}\n              total={showAverage ? total / numMonths : total}\n              id={entityId}\n              onClick={onClickEntity}\n            />\n          )\n        )}\n        {allMounted && (\n          <AnimateHeight isExpanded={showAll}>\n            <Fragment>\n              {otherEntities.map(({ entityId, transactions, amount }) => (\n                <GenericItemLink\n                  key={entityId}\n                  showTransactionCount={showTransactionCount}\n                  to={\n                    linkFunction && !!entitiesById[entityId]\n                      ? linkFunction(entityId)\n                      : null\n                  }\n                  transactions={transactions}\n                  name={get(\"name\")(entitiesById[entityId]) || emptyName}\n                  amount={showAverage ? amount / numMonths : amount}\n                  positiveIsRed={positiveIsRed}\n                  selected={entityId === selectedEntityId}\n                  total={total}\n                  id={entityId}\n                  onClick={onClickEntity}\n                  isContinuing\n                />\n              ))}\n            </Fragment>\n          </AnimateHeight>\n        )}\n        {!!otherEntities.length &&\n          limitShowing && (\n            <SeeAll\n              count={entities.length}\n              pluralizedName={keyToPluralizedName[entityKey]}\n              showAll={showAll}\n              onToggle={this.handleToggleShowAll}\n            />\n          )}\n      </CollapsibleSection>\n    );\n  }\n}\n\nconst MaybeLink = ({ to, children, ...other }) =>\n  to ? (\n    <Link {...other} to={to}>\n      {children}\n    </Link>\n  ) : (\n    <span {...other}>{children}</span>\n  );\n\nclass GenericItemLink extends PureComponent {\n  render() {\n    const {\n      showTransactionCount,\n      to,\n      transactions,\n      name,\n      amount,\n      positiveIsRed,\n      total,\n      selected,\n      id,\n      onClick,\n      isContinuing\n    } = this.props;\n    return (\n      <ListItem\n        isContinuing={isContinuing}\n        onClick={onClick && (() => onClick(id))}\n      >\n        {showTransactionCount ? (\n          <LabelWithTransactionCount\n            count={transactions}\n            label={name}\n            selected={selected}\n            to={to}\n          />\n        ) : (\n          <MaybeLink\n            to={to}\n            onClick={\n              to &&\n              (evt => {\n                evt.stopPropagation();\n              })\n            }\n          >\n            <SecondaryText\n              style={{\n                whiteSpace: \"pre\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                color: \"inherit\",\n                fontWeight: selected && 700\n              }}\n            >\n              {name}\n            </SecondaryText>\n          </MaybeLink>\n        )}\n        <AmountWithPercentage\n          amount={amount}\n          positiveIsRed={positiveIsRed}\n          selected={selected}\n          total={total}\n        />\n      </ListItem>\n    );\n  }\n}\n\nGenericItemLink.propTypes = {\n  amount: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  total: PropTypes.number.isRequired,\n  transactions: PropTypes.number.isRequired,\n  id: PropTypes.string,\n  isContinuing: PropTypes.bool,\n  selected: PropTypes.bool,\n  showTransactionCount: PropTypes.bool,\n  to: PropTypes.string\n};\n\nexport default GenericEntitiesSection;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport get from \"lodash/fp/get\";\nimport { SecondaryText } from \"./typeComponents\";\nimport ListItem from \"./ListItem\";\nimport Amount from \"./Amount\";\nimport LabelWithMinorText from \"./LabelWithMinorText\";\n\nconst StyledListItem = styled(ListItem)`\n  border-top: 0;\n  padding-bottom: 0;\n`;\n\nconst DateSummaryTransaction = ({ category, payee, memo, amount }) => (\n  <StyledListItem isContinuing>\n    <div style={{ overflow: \"hidden\" }}>\n      <LabelWithMinorText\n        label={get(\"name\")(payee) || \"(no payee)\"}\n        minorText={\n          get(\"name\")(category) || \"(no category)\" + (memo ? ` (${memo})` : \"\")\n        }\n      />\n    </div>\n    <SecondaryText>\n      <Amount amount={amount} />\n    </SecondaryText>\n  </StyledListItem>\n);\n\nDateSummaryTransaction.propTypes = {\n  amount: PropTypes.number.isRequired,\n  category: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  }),\n  isContinuing: PropTypes.bool,\n  memo: PropTypes.string,\n  payee: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })\n};\n\nexport default DateSummaryTransaction;\n","import React from \"react\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\nimport Amount from \"./Amount\";\nimport styled from \"styled-components\";\nimport ListItem from \"./ListItem\";\n\nconst INDENTATION = 18;\n\nconst NodeWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${props => (props.isCompact ? \"0\" : \"8px 0\")};\n  user-select: none;\n\n  ${ListItem}:first-child > & {\n    padding-top: 0;\n  }\n`;\n\nconst IconWrapper = styled.div`\n  box-sizing: border-box;\n  padding-left: 3px;\n  width: ${INDENTATION}px;\n  font-weight: 400;\n  color: #888;\n  font-size: 10px;\n`;\n\nconst ToggleNode = ({\n  expanded,\n  name,\n  id,\n  amount,\n  valueRenderer,\n  onToggle,\n  isCompact\n}) => (\n  <NodeWrapper onClick={onToggle} isCompact={isCompact}>\n    <SecondaryText\n      style={{ whiteSpace: \"pre\", display: \"flex\", alignItems: \"center\" }}\n    >\n      <IconWrapper>\n        <Icon icon=\"chevron-right\" transform={{ rotate: expanded ? 90 : 0 }} />\n      </IconWrapper>\n      {typeof name === \"function\" ? name({ expanded }) : name}\n    </SecondaryText>\n    {valueRenderer ? (\n      valueRenderer({ amount, id, faded: expanded })\n    ) : (\n      <SecondaryText style={{ opacity: expanded ? 0.3 : 1 }}>\n        <Amount amount={amount} />\n      </SecondaryText>\n    )}\n  </NodeWrapper>\n);\n\nexport default ToggleNode;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport ListItem from \"./ListItem\";\nimport moment from \"moment\";\nimport { MinorText } from \"./typeComponents\";\nimport { sumByProp } from \"../dataUtils\";\nimport EmptyText from \"./EmptyText\";\nimport DateSummaryTransaction from \"./DateSummaryTransaction\";\nimport ToggleNode from \"./ToggleNode\";\n\nconst Container = styled(ListItem)`\n  display: block;\n`;\n\nconst DateSummary = ({\n  categoriesById,\n  date,\n  expanded,\n  payeesById,\n  transactions,\n  onToggleExpanded\n}) => (\n  <Container>\n    <ToggleNode\n      amount={sumByProp(\"amount\")(transactions)}\n      expanded={expanded}\n      name={\n        <div style={{ display: \"flex\", alignItems: \"baseline\" }}>\n          {moment(date).calendar(null, {\n            sameDay: \"[Today]\",\n            nextDay: \"[Tomorrow]\",\n            nextWeek: \"dddd\",\n            lastDay: \"[Yesterday]\",\n            lastWeek: \"dddd\",\n            sameElse: \"DD/MM/YYYY\"\n          })}\n          {!expanded && (\n            <MinorText>\n              {\" \"}\n              &ndash; {transactions.length} transaction\n              {transactions.length === 1 ? \"\" : \"s\"}\n            </MinorText>\n          )}\n        </div>\n      }\n      onToggle={onToggleExpanded}\n      isCompact\n    />\n    <AnimateHeight isExpanded={expanded}>\n      <div style={{ paddingLeft: 18 }}>\n        {transactions.length ? (\n          transactions.map(transaction => (\n            <DateSummaryTransaction\n              key={transaction.id}\n              amount={transaction.amount}\n              payee={payeesById[transaction.payee_id]}\n              category={categoriesById[transaction.category_id]}\n              memo={transaction.memo}\n            />\n          ))\n        ) : (\n          <EmptyText style={{ margin: 0 }}>no transactions</EmptyText>\n        )}\n      </div>\n    </AnimateHeight>\n  </Container>\n);\n\nDateSummary.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  date: PropTypes.string.isRequired,\n  expanded: PropTypes.bool.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      category_id: PropTypes.string,\n      payee_id: PropTypes.string\n    })\n  ).isRequired,\n  onToggleExpanded: PropTypes.func.isRequired\n};\n\nexport default DateSummary;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { groupByProp } from \"../dataUtils\";\nimport moment from \"moment\";\nimport range from \"lodash/fp/range\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport DateSummary from \"./DateSummary\";\n\nconst NUM_DAYS = 5;\n\nconst RecentSpending = ({\n  categoriesById,\n  currentMonth,\n  payeesById,\n  transactions\n}) => {\n  const transactionsByDate = groupByProp(\"date\")(transactions);\n  const recentDays = range(0, NUM_DAYS)\n    .map(n =>\n      moment()\n        .subtract(n, \"days\")\n        .format(\"YYYY-MM-DD\")\n    )\n    .filter(date => date.startsWith(currentMonth));\n\n  const [expanded, setExpanded] = useState(\n    recentDays.reduce((acc, date) => ({ ...acc, [date]: false }), {})\n  );\n\n  return (\n    <CollapsibleSection title=\"Recent Spending\">\n      {recentDays.map(date => (\n        <DateSummary\n          key={date}\n          categoriesById={categoriesById}\n          date={date}\n          expanded={!!expanded[date]}\n          onToggleExpanded={() => {\n            setExpanded({ ...expanded, [date]: !expanded[date] });\n          }}\n          payeesById={payeesById}\n          transactions={transactionsByDate[date] || []}\n        />\n      ))}\n    </CollapsibleSection>\n  );\n};\n\nRecentSpending.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      date: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nexport default RecentSpending;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport {\n  getTransactionMonth,\n  isTransfer,\n  isStartingBalanceOrReconciliation,\n  isIncome,\n  sanitizeName\n} from \"../budgetUtils\";\nimport { notAny } from \"../dataUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport { useSelectedEntityId } from \"../commonHooks\";\nimport PageLayout from \"./PageLayout\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport RecentSpending from \"./RecentSpending\";\n\nconst CurrentMonthPage = ({\n  budget,\n  currentMonth,\n  historyAction,\n  investmentAccounts,\n  location,\n  sidebarTrigger,\n  title\n}) => {\n  const [selectedGroupId, onSelectGroupId] = useSelectedEntityId();\n\n  const {\n    categoryGroupsById,\n    categoriesById,\n    payeesById,\n    id: budgetId\n  } = budget;\n  const selectedGroup = selectedGroupId && categoryGroupsById[selectedGroupId];\n  const transactions = budget.transactions.filter(\n    notAny([\n      isIncome(budget),\n      isTransfer(investmentAccounts),\n      isStartingBalanceOrReconciliation(budget)\n    ])\n  );\n  const transactionsThisMonth = takeWhile(\n    transaction => getTransactionMonth(transaction) === currentMonth\n  )(transactions);\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <DayByDaySection\n            budgetId={budget.id}\n            currentMonth={currentMonth}\n            transactions={transactions}\n            highlightFunction={\n              selectedGroupId &&\n              (transaction =>\n                categoriesById[transaction.category_id].category_group_id ===\n                selectedGroupId)\n            }\n            title={\n              selectedGroup\n                ? `Day by Day: ${sanitizeName(selectedGroup.name)}`\n                : \"Day by Day\"\n            }\n          />\n          <RecentSpending\n            categoriesById={categoriesById}\n            currentMonth={currentMonth}\n            payeesById={payeesById}\n            transactions={transactionsThisMonth}\n          />\n          <GenericEntitiesSection\n            entitiesById={categoryGroupsById}\n            entityFunction={transaction =>\n              categoriesById[transaction.category_id].category_group_id\n            }\n            entityKey=\"category_group_id\"\n            linkFunction={groupId =>\n              makeLink(pages.currentMonthGroup.path, {\n                budgetId,\n                categoryGroupId: groupId\n              })\n            }\n            selectedEntityId={selectedGroupId}\n            title=\"Category Groups\"\n            transactions={transactionsThisMonth}\n            showTransactionCount\n            onClickEntity={onSelectGroupId}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nCurrentMonthPage.propTypes = {\n  budget: PropTypes.object.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.object.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default CurrentMonthPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport findIndex from \"lodash/fp/findIndex\";\nimport { selectedPlotBandColor } from \"../styleVariables\";\nimport Chart from \"./Chart\";\n\nconst MonthlyChart = ({\n  average,\n  data,\n  height,\n  series,\n  selectedMonth,\n  stacked,\n  onSelectMonth\n}) => {\n  const yearLines = [];\n  const plotBands = [];\n  const categories = data.map(d => moment(d.month).format(\"MMM\"));\n  let highlights = null;\n\n  if (selectedMonth) {\n    highlights = { months: [selectedMonth], color: selectedPlotBandColor };\n  }\n\n  data.forEach(({ month }, index) => {\n    if (moment(month).format(\"MMM\") === \"Jan\") {\n      yearLines.push({\n        color: \"#ccc\",\n        width: 1,\n        value: index - 0.5,\n        zIndex: 3\n      });\n    }\n  });\n\n  if (highlights) {\n    highlights.months.forEach(month => {\n      const index = findIndex(d => d.month === month)(data);\n      plotBands.push({\n        color: highlights.color,\n        from: index - 0.5,\n        to: index + 0.5\n      });\n    });\n  }\n\n  return (\n    <Chart\n      key={data.length}\n      options={{\n        chart: {\n          animation: false,\n          height,\n          type: \"column\",\n          events: {\n            click: event => {\n              onSelectMonth &&\n                onSelectMonth(data[Math.round(event.xAxis[0].value)].month);\n            }\n          }\n        },\n        xAxis: {\n          categories,\n          plotBands,\n          plotLines: yearLines\n        },\n        yAxis: {\n          endOnTick: false,\n          startOnTick: false,\n          gridLineColor: \"#f0f0f0\",\n          labels: {\n            align: \"left\",\n            x: 0,\n            y: -2,\n            style: { color: \"#bbb\", fontSize: \"9px\" },\n            zIndex: 3\n          },\n          tickPixelInterval: 30,\n          title: { text: null },\n          plotLines: average && [\n            {\n              color: \"#aaa\",\n              dashStyle: \"Dot\",\n              width: 1,\n              value: -average,\n              zIndex: 2\n            }\n          ]\n        },\n        plotOptions: {\n          series: { animation: false, stacking: stacked ? \"normal\" : null }\n        },\n        series: series.map(s => {\n          if (s.type === \"line\") {\n            return {\n              color: s.color,\n              data: data.map(s.valueFunction),\n              enableMouseTracking: false,\n              type: \"line\",\n              lineWidth: 1,\n              marker: {\n                radius: 0\n              },\n              zIndex: 3\n            };\n          }\n\n          return {\n            borderWidth: 0,\n            color: s.color,\n            data: data.map(s.valueFunction),\n            enableMouseTracking: false,\n            states: { hover: { brightness: 0 } }\n          };\n        })\n      }}\n    />\n  );\n};\n\nMonthlyChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      month: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  series: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string.isRequired,\n      valueFunction: PropTypes.func.isRequired,\n      type: PropTypes.oneOf([\"line\"])\n    })\n  ).isRequired,\n  average: PropTypes.number,\n  height: PropTypes.number,\n  selectedMonth: PropTypes.string,\n  stacked: PropTypes.bool,\n  onSelectMonth: PropTypes.func\n};\n\nMonthlyChart.defaultProps = { height: 140, stacked: true };\n\nexport default MonthlyChart;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { primaryColor } from \"../styleVariables\";\n\nconst PADDING = 2;\nconst WIDTH = 32;\nconst HEIGHT = 18;\n\nconst Track = styled.div`\n  box-sizing: border-box;\n  padding: ${PADDING}px;\n  display: inline-block;\n  width: ${WIDTH}px;\n  height: ${HEIGHT}px;\n  border-radius: ${HEIGHT / 2}px;\n  background-color: ${props => (props.on ? primaryColor : \"#ddd\")};\n  transition: background-color 0.15s ease-in-out;\n`;\n\nconst Handle = styled.div`\n  box-sizing: border-box;\n  height: ${HEIGHT - 2 * PADDING}px;\n  width: ${HEIGHT - 2 * PADDING}px;\n  border-radius: 50%;\n  background-color: #fff;\n  transform: translate3d(${props => (props.on ? WIDTH - HEIGHT : 0)}px, 0, 0);\n  transition: transform 0.15s ease-in-out;\n`;\n\nconst Toggle = ({ on, onClick }) => (\n  <Track on={on} onClick={onClick}>\n    <Handle on={on} />\n  </Track>\n);\n\nToggle.propTypes = {\n  on: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Toggle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Toggle from \"./Toggle\";\n\nconst Container = styled.div`\n  user-select: none;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px 0;\n`;\n\nconst Label = styled.div``;\n\nconst ToggleWithLabel = ({ label, name, checked, onChange }) => (\n  <Container\n    onClick={() => {\n      onChange({ target: { name, checked: !checked } });\n    }}\n  >\n    <Label>{label}</Label>\n    <Toggle\n      on={checked}\n      onClick={() => {\n        onChange({ target: { name, checked: !checked } });\n      }}\n    />\n  </Container>\n);\n\nToggleWithLabel.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default ToggleWithLabel;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"./Modal\";\nimport ToggleWithLabel from \"./ToggleWithLabel\";\nimport { MinorText } from \"./typeComponents\";\n\nconst MonthByMonthSettingsModal = ({\n  excludeFirstMonth,\n  excludeLastMonth,\n  open,\n  onClose,\n  onSetExclusion\n}) => (\n  <Modal open={open} onClose={onClose} title=\"Chart Settings\" width={240}>\n    <ToggleWithLabel\n      checked={excludeFirstMonth}\n      label=\"Exclude first month\"\n      name=\"excludeFirstMonth\"\n      onChange={() => {\n        onSetExclusion({ month: \"first\", exclude: !excludeFirstMonth });\n      }}\n    />\n    <ToggleWithLabel\n      checked={excludeLastMonth}\n      label=\"Exclude last month\"\n      name=\"excludeLastMonth\"\n      onChange={() => {\n        onSetExclusion({ month: \"last\", exclude: !excludeLastMonth });\n      }}\n    />\n    <MinorText style={{ marginTop: 5 }}>\n      Excluding incomplete months may lead to more representative averages\n    </MinorText>\n  </Modal>\n);\n\nMonthByMonthSettingsModal.propTypes = {\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired\n};\n\nexport default MonthByMonthSettingsModal;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport { groupBy, sumByProp } from \"../dataUtils\";\nimport { lightPrimaryColor, lighterPrimaryColor } from \"../styleVariables\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport MonthlyChart from \"./MonthlyChart\";\nimport MonthByMonthSettingsModal from \"./MonthByMonthSettingsModal\";\n\nconst MonthByMonthSection = ({\n  excludeFirstMonth,\n  excludeLastMonth,\n  highlightFunction,\n  months,\n  selectedMonth,\n  title,\n  transactions,\n  onSelectMonth,\n  onSetExclusion\n}) => {\n  const [settingsModalOpen, setSettingsModalOpen] = useState(false);\n\n  let total = 0;\n  let selectedMonthTotal = 0;\n\n  const transactionsByMonth = groupBy(getTransactionMonth)(transactions);\n  const data = months.map(month => {\n    const grouped = groupBy(highlightFunction || (() => false))(\n      transactionsByMonth[month] || []\n    );\n    const amount = sumByProp(\"amount\")(grouped.false || []);\n    const highlighted = sumByProp(\"amount\")(grouped.true || []);\n    total += highlightFunction ? highlighted : amount;\n    if (month === selectedMonth) {\n      selectedMonthTotal = highlightFunction ? highlighted : amount;\n    }\n\n    return { month, amount: -amount, highlighted: -highlighted };\n  });\n\n  const chartNumbers = selectedMonth\n    ? [\n        { amount: total / months.length, label: \"average\" },\n        {\n          amount: selectedMonthTotal,\n          label: moment(selectedMonth).format(\"MMM YYYY\")\n        }\n      ]\n    : [\n        { amount: total / months.length, label: \"average\" },\n        {\n          amount: total,\n          label: \"total\"\n        }\n      ];\n  const series = [\n    {\n      color: highlightFunction ? lightPrimaryColor : lighterPrimaryColor,\n      valueFunction: d => d.amount\n    }\n  ];\n\n  if (highlightFunction) {\n    series.push({\n      color: lighterPrimaryColor,\n      valueFunction: d => d.highlighted\n    });\n  }\n\n  return (\n    <CollapsibleSection\n      title={title}\n      hasSettings\n      onClickSettings={() => {\n        setSettingsModalOpen(true);\n      }}\n    >\n      <ChartNumbers numbers={chartNumbers} />\n      <MonthlyChart\n        data={data}\n        average={total / months.length}\n        series={series}\n        selectedMonth={selectedMonth}\n        onSelectMonth={onSelectMonth}\n      />\n      <MonthByMonthSettingsModal\n        excludeFirstMonth={excludeFirstMonth}\n        excludeLastMonth={excludeLastMonth}\n        open={settingsModalOpen}\n        onClose={() => {\n          setSettingsModalOpen(false);\n        }}\n        onSetExclusion={onSetExclusion}\n      />\n    </CollapsibleSection>\n  );\n};\n\nMonthByMonthSection.propTypes = {\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  highlightFunction: PropTypes.func,\n  selectedMonth: PropTypes.string,\n  title: PropTypes.string\n};\n\nMonthByMonthSection.defaultProps = { title: \"Month by Month\" };\n\nexport default MonthByMonthSection;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport {\n  useFlagState,\n  useMonthExclusions,\n  useSelectedEntityId,\n  useSelectedMonth\n} from \"../commonHooks\";\nimport { notAny, simpleMemoize } from \"../dataUtils\";\nimport {\n  getFirstMonth,\n  getTransactionMonth,\n  isIncome,\n  isStartingBalanceOrReconciliation,\n  isTransfer,\n  sanitizeName\n} from \"../budgetUtils\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nconst getFilteredTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) => {\n    const firstMonth = getFirstMonth(budget);\n    const lastMonth = moment().format(\"YYYY-MM\");\n    return budget.transactions.filter(\n      notAny([\n        isStartingBalanceOrReconciliation(budget),\n        isTransfer(investmentAccounts),\n        transaction =>\n          excludeFirstMonth && getTransactionMonth(transaction) === firstMonth,\n        transaction =>\n          excludeLastMonth && getTransactionMonth(transaction) === lastMonth\n      ])\n    );\n  }\n);\n\nconst getFilteredIncomeTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) =>\n    getFilteredTransactions(\n      budget,\n      investmentAccounts,\n      excludeFirstMonth,\n      excludeLastMonth\n    )\n      .filter(transaction => isIncome(budget)(transaction))\n      .map(transaction => ({ ...transaction, amount: -transaction.amount }))\n);\n\nconst IncomePage = ({\n  budget,\n  historyAction,\n  investmentAccounts,\n  location,\n  sidebarTrigger,\n  title\n}) => {\n  const {\n    excludeFirstMonth,\n    excludeLastMonth,\n    months,\n    onSetExclusion\n  } = useMonthExclusions(budget);\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\n  const [selectedPayeeId, onSelectPayeeId] = useSelectedEntityId();\n  const [showAverage, , , onToggleShowAverage] = useFlagState(true);\n\n  const { payeesById } = budget;\n  const filteredTransactions = getFilteredIncomeTransactions(\n    budget,\n    investmentAccounts,\n    excludeFirstMonth,\n    excludeLastMonth\n  );\n  const transactionsInSelectedMonth =\n    selectedMonth &&\n    filteredTransactions.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            highlightFunction={\n              selectedPayeeId &&\n              (transaction => transaction.payee_id === selectedPayeeId)\n            }\n            months={months}\n            selectedMonth={selectedMonth}\n            title={\n              selectedPayeeId\n                ? `Month by Month: ${sanitizeName(\n                    budget.payeesById[selectedPayeeId].name\n                  )}`\n                : \"Month by Month\"\n            }\n            transactions={filteredTransactions}\n            onSelectMonth={onSelectMonth}\n            onSetExclusion={onSetExclusion}\n          />\n          <GenericEntitiesSection\n            key={`payee-${selectedMonth || \"all\"}`}\n            entityKey=\"payee_id\"\n            entitiesById={payeesById}\n            numMonths={selectedMonth ? 1 : months.length}\n            title={\n              selectedMonth\n                ? `Payees: ${moment(selectedMonth).format(\"MMMM\")}`\n                : \"Payees\"\n            }\n            transactions={transactionsInSelectedMonth || filteredTransactions}\n            selectedEntityId={selectedPayeeId}\n            showAverageToggle={!selectedMonth}\n            showAverage={showAverage}\n            onClickEntity={onSelectPayeeId}\n            onToggleAverage={onToggleShowAverage}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nIncomePage.propTypes = {\n  budget: PropTypes.object.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.object.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default IncomePage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport get from \"lodash/fp/get\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\nimport ListItem from \"./ListItem\";\nimport Amount from \"./Amount\";\nimport LabelWithMinorText from \"./LabelWithMinorText\";\n\nconst Transaction = ({ category, payee, memo, date, amount, isContinuing }) => (\n  <ListItem isContinuing={isContinuing}>\n    <div style={{ overflow: \"hidden\" }}>\n      <LabelWithMinorText\n        label={get(\"name\")(payee) || \"(no payee)\"}\n        minorText={(get(\"name\")(category) || \"\") + (memo ? ` (${memo})` : \"\")}\n      />\n      <MinorText>{moment(date).format(\"dddd, MMM D\")}</MinorText>\n    </div>\n    <SecondaryText>\n      <Amount amount={amount} />\n    </SecondaryText>\n  </ListItem>\n);\n\nTransaction.propTypes = {\n  amount: PropTypes.number.isRequired,\n  date: PropTypes.string.isRequired,\n  category: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  }),\n  isContinuing: PropTypes.bool,\n  memo: PropTypes.string,\n  payee: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })\n};\n\nexport default Transaction;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Transaction from \"./Transaction\";\nimport NoTransactions from \"./NoTransactions\";\n\nconst TransactionsSection = ({\n  transactions,\n  title,\n  categoriesById,\n  payeesById\n}) => (\n  <CollapsibleSection title={title}>\n    {transactions.length ? (\n      transactions.map(\n        ({\n          id,\n          category_id: categoryId,\n          payee_id: payeeId,\n          date,\n          memo,\n          amount\n        }) => (\n          <Transaction\n            key={id}\n            amount={amount}\n            category={categoriesById[categoryId]}\n            date={date}\n            memo={memo}\n            payee={payeesById[payeeId]}\n          />\n        )\n      )\n    ) : (\n      <NoTransactions />\n    )}\n  </CollapsibleSection>\n);\n\nTransactionsSection.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      category_id: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      payee_id: PropTypes.string\n    })\n  ).isRequired,\n  title: PropTypes.string\n};\n\nTransactionsSection.defaultProps = { title: \"Transactions\" };\n\nexport default TransactionsSection;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport { sumByProp } from \"../dataUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport PageLayout from \"./PageLayout\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport TransactionsSection from \"./TransactionsSection\";\nimport { useSelectedEntityId } from \"../commonHooks\";\n\nconst CurrentMonthGroupPage = ({\n  budget,\n  categoryGroupId,\n  currentMonth,\n  historyAction,\n  location,\n  sidebarTrigger,\n  title\n}) => {\n  const [selectedCategoryId, onSelectCategoryId] = useSelectedEntityId();\n  const {\n    id: budgetId,\n    payeesById,\n    categories: allCategories,\n    categoriesById,\n    transactions: allTransactions\n  } = budget;\n\n  const selectedCategory =\n    selectedCategoryId && categoriesById[selectedCategoryId];\n  const categories = allCategories.filter(\n    category => category.category_group_id === categoryGroupId\n  );\n  const categoryIds = categories.map(category => category.id);\n  const transactionsInGroup = allTransactions.filter(transaction =>\n    categoryIds.includes(transaction.category_id)\n  );\n  const transactionsInGroupForMonth = transactionsInGroup.filter(\n    transaction => getTransactionMonth(transaction) === currentMonth\n  );\n  const highlightedTransactions =\n    selectedCategoryId &&\n    transactionsInGroupForMonth.filter(\n      transaction => transaction.category_id === selectedCategoryId\n    );\n\n  const spent = -sumByProp(\"activity\")(categories);\n  const available = sumByProp(\"balance\")(categories);\n\n  return (\n    <PageLayout\n      location={location}\n      historyAction={historyAction}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <DayByDaySection\n            budgetId={budgetId}\n            currentMonth={currentMonth}\n            highlightFunction={\n              selectedCategoryId &&\n              (transaction => transaction.category_id === selectedCategoryId)\n            }\n            title={\n              selectedCategory\n                ? `Day by Day: ${sanitizeName(selectedCategory.name)}`\n                : \"Day by Day\"\n            }\n            transactions={transactionsInGroup}\n            total={spent + available}\n          />\n          <GenericEntitiesSection\n            entityKey=\"category_id\"\n            entitiesById={categoriesById}\n            linkFunction={categoryId =>\n              makeLink(pages.currentMonthCategory.path, {\n                budgetId,\n                categoryGroupId,\n                categoryId\n              })\n            }\n            selectedEntityId={selectedCategoryId}\n            title=\"Categories\"\n            transactions={transactionsInGroupForMonth}\n            showTransactionCount\n            onClickEntity={onSelectCategoryId}\n          />\n          <TransactionsSection\n            categoriesById={categoriesById}\n            payeesById={payeesById}\n            transactions={\n              highlightedTransactions || transactionsInGroupForMonth\n            }\n            title={\n              selectedCategory\n                ? `Transactions: ${sanitizeName(selectedCategory.name)}`\n                : \"Transactions\"\n            }\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nCurrentMonthGroupPage.propTypes = {\n  budget: PropTypes.shape({\n    categories: PropTypes.array.isRequired,\n    id: PropTypes.string.isRequired,\n    payeesById: PropTypes.object.isRequired,\n    transactions: PropTypes.array.isRequired\n  }).isRequired,\n  categoryGroupId: PropTypes.string.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default CurrentMonthGroupPage;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport PageLayout from \"./PageLayout\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport TransactionsSection from \"./TransactionsSection\";\n\nconst CurrentMonthCategoryPage = ({\n  budget,\n  currentMonth,\n  categoryId,\n  historyAction,\n  location,\n  sidebarTrigger,\n  title\n}) => {\n  const {\n    id: budgetId,\n    payeesById,\n    categoriesById,\n    transactions: allTransactions\n  } = budget;\n\n  const category = categoriesById[categoryId];\n  const transactionsInCategory = allTransactions.filter(\n    transaction => transaction.category_id === categoryId\n  );\n  const transactionsInCategoryForMonth = transactionsInCategory.filter(\n    transaction => getTransactionMonth(transaction) === currentMonth\n  );\n\n  const spent = -category.activity;\n  const available = category.balance;\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <DayByDaySection\n            key={category ? category.name : \"day-by-day\"}\n            budgetId={budgetId}\n            currentMonth={currentMonth}\n            title=\"Day by Day\"\n            transactions={transactionsInCategory}\n            total={spent + available}\n          />\n          <TransactionsSection\n            categoriesById={categoriesById}\n            payeesById={payeesById}\n            transactions={transactionsInCategoryForMonth}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nCurrentMonthCategoryPage.propTypes = {\n  budget: PropTypes.shape({\n    categories: PropTypes.array.isRequired,\n    id: PropTypes.string.isRequired,\n    payeesById: PropTypes.object.isRequired,\n    transactions: PropTypes.array.isRequired\n  }).isRequired,\n  categoryGroupId: PropTypes.string.isRequired,\n  categoryId: PropTypes.string.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default CurrentMonthCategoryPage;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport { useTrendsShowAverage } from \"../commonHooks\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nconst GroupsPage = ({\n  budget,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  location,\n  months,\n  sidebarTrigger,\n  title,\n  transactions,\n  selectedMonth,\n  selectedGroupId,\n  onSelectGroup,\n  onSelectMonth,\n  onSetExclusion\n}) => {\n  const [showAverage, onToggleShowAverage] = useTrendsShowAverage(budget.id);\n\n  const { categoryGroupsById, categoriesById, id: budgetId } = budget;\n  const selectedGroup = selectedGroupId && categoryGroupsById[selectedGroupId];\n\n  const transactionsForMonth =\n    selectedMonth &&\n    transactions.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            highlightFunction={\n              selectedGroupId &&\n              (transaction =>\n                categoriesById[transaction.category_id].category_group_id ===\n                selectedGroupId)\n            }\n            months={months}\n            selectedMonth={selectedMonth}\n            title={\n              selectedGroup\n                ? `Month by Month: ${sanitizeName(selectedGroup.name)}`\n                : \"Month by Month\"\n            }\n            transactions={transactions}\n            onSelectMonth={onSelectMonth}\n            onSetExclusion={onSetExclusion}\n          />\n          <GenericEntitiesSection\n            key={selectedMonth || \"all\"}\n            entityFunction={transaction =>\n              categoriesById[transaction.category_id].category_group_id\n            }\n            entityKey=\"category_group_id\"\n            entitiesById={categoryGroupsById}\n            linkFunction={categoryGroupId =>\n              makeLink(pages.group.path, { budgetId, categoryGroupId })\n            }\n            selectedEntityId={selectedGroupId}\n            title={\n              selectedMonth\n                ? `Category Groups: ${moment(selectedMonth).format(\"MMMM\")}`\n                : \"Category Groups\"\n            }\n            transactions={transactionsForMonth || transactions}\n            onClickEntity={onSelectGroup}\n            numMonths={months.length}\n            showAverageToggle={!selectedMonth}\n            showAverage={showAverage && !selectedMonth}\n            onToggleAverage={onToggleShowAverage}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nGroupsPage.propTypes = {\n  budget: PropTypes.object.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectGroup: PropTypes.func.isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedGroupId: PropTypes.string,\n  selectedMonth: PropTypes.string\n};\n\nexport default GroupsPage;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Transaction from \"./Transaction\";\nimport NoTransactions from \"./NoTransactions\";\nimport SeeAll from \"./SeeAll\";\n\nconst LIMIT = 3;\n\nclass TransactionsByMonthSection extends Component {\n  static propTypes = {\n    categoriesById: PropTypes.object.isRequired,\n    payeesById: PropTypes.object.isRequired,\n    selectedMonth: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    limitShowing: PropTypes.bool,\n    selectedCategoryId: PropTypes.string,\n    selectedPayeeId: PropTypes.string\n  };\n\n  static defaultProps = { limitShowing: true };\n\n  state = { allMounted: false, showAll: false };\n\n  handleToggleShowAll = () => {\n    const { allMounted, showAll } = this.state;\n\n    if (allMounted) {\n      this.setState({ showAll: !showAll });\n    } else {\n      this.setState({ allMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ showAll: true });\n      });\n    }\n  };\n\n  render() {\n    const {\n      categoriesById,\n      payeesById,\n      selectedCategoryId,\n      selectedPayeeId,\n      selectedMonth,\n      transactions,\n      limitShowing: limitShowingProp\n    } = this.props;\n    const { allMounted, showAll } = this.state;\n\n    const selectedCategory =\n      selectedCategoryId && categoriesById[selectedCategoryId];\n    const selectedPayee = selectedPayeeId && payeesById[selectedPayeeId];\n    const month = moment(selectedMonth).format(\"MMMM\");\n    const transactionsForMonth = compose([\n      limitShowingProp\n        ? sortBy(\"amount\")\n        : transactions => transactions.reverse(),\n      transactions =>\n        transactions.filter(\n          transaction =>\n            getTransactionMonth(transaction) === selectedMonth &&\n            (!selectedCategoryId ||\n              transaction.category_id === selectedCategoryId) &&\n            (!selectedPayeeId || transaction.payee_id === selectedPayeeId)\n        )\n    ])(transactions);\n    const limitShowing =\n      limitShowingProp && transactionsForMonth.length > LIMIT + 2;\n    const topTransactions = limitShowing\n      ? transactionsForMonth.slice(0, LIMIT)\n      : transactionsForMonth;\n    const otherTransactions = limitShowing\n      ? transactionsForMonth.slice(LIMIT)\n      : [];\n\n    return (\n      <CollapsibleSection\n        title={\n          selectedPayee\n            ? `Transactions: ${month}, ${selectedPayee.name}`\n            : selectedCategory\n              ? `Transactions: ${month}, ${selectedCategory.name}`\n              : `Transactions: ${month}`\n        }\n      >\n        {topTransactions.length ? (\n          topTransactions.map(\n            ({\n              id,\n              date,\n              amount,\n              memo,\n              payee_id: payeeId,\n              category_id: categoryId\n            }) => (\n              <Transaction\n                key={id}\n                amount={amount}\n                category={categoriesById[categoryId]}\n                date={date}\n                memo={memo}\n                payee={payeesById[payeeId]}\n              />\n            )\n          )\n        ) : (\n          <NoTransactions />\n        )}\n        {allMounted && (\n          <AnimateHeight isExpanded={showAll}>\n            <Fragment>\n              {otherTransactions.map(\n                ({\n                  id,\n                  date,\n                  amount,\n                  payee_id: payeeId,\n                  category_id: categoryId\n                }) => (\n                  <Transaction\n                    key={id}\n                    amount={amount}\n                    category={categoriesById[categoryId]}\n                    date={date}\n                    payee={payeesById[payeeId]}\n                    isContinuing\n                  />\n                )\n              )}\n            </Fragment>\n          </AnimateHeight>\n        )}\n        {!!otherTransactions.length && (\n          <SeeAll\n            count={transactionsForMonth.length}\n            pluralizedName=\"transactions\"\n            showAll={showAll}\n            onToggle={this.handleToggleShowAll}\n          />\n        )}\n      </CollapsibleSection>\n    );\n  }\n}\n\nexport default TransactionsByMonthSection;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport { useTrendsShowAverage } from \"../commonHooks\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nconst GroupPage = ({\n  budget,\n  categoryGroupId,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  location,\n  months,\n  selectedMonth,\n  selectedCategoryId,\n  sidebarTrigger,\n  title,\n  transactions,\n  onSelectMonth,\n  onSelectCategory,\n  onSetExclusion\n}) => {\n  const [showAverage, onToggleShowAverage] = useTrendsShowAverage(budget.id);\n\n  const {\n    categories,\n    categoriesById,\n    categoryGroupsById,\n    payeesById,\n    id: budgetId\n  } = budget;\n  const categoryGroup = categoryGroupsById[categoryGroupId];\n  const selectedCategory =\n    selectedCategoryId && categoriesById[selectedCategoryId];\n  const categoriesInGroup = categories.filter(\n    category => category.category_group_id === categoryGroup.id\n  );\n  const categoryIds = categoriesInGroup.map(category => category.id);\n  const transactionsInGroup = transactions.filter(transaction =>\n    categoryIds.includes(transaction.category_id)\n  );\n  const transactionsInSelectedMonth =\n    selectedMonth &&\n    compose([\n      sortBy(\"amount\"),\n      transactions =>\n        transactions.filter(\n          transaction => getTransactionMonth(transaction) === selectedMonth\n        )\n    ])(transactionsInGroup);\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            months={months}\n            highlightFunction={\n              selectedCategoryId &&\n              (transaction => transaction.category_id === selectedCategoryId)\n            }\n            selectedMonth={selectedMonth}\n            title={\n              selectedCategory\n                ? `Month by Month: ${sanitizeName(selectedCategory.name)}`\n                : \"Month by Month\"\n            }\n            transactions={transactionsInGroup}\n            onSelectMonth={onSelectMonth}\n            onSetExclusion={onSetExclusion}\n          />\n          <GenericEntitiesSection\n            key={`categories-${selectedMonth || \"all\"}`}\n            entityKey=\"category_id\"\n            entitiesById={categoriesById}\n            linkFunction={categoryId =>\n              makeLink(pages.category.path, {\n                budgetId,\n                categoryGroupId: categoryGroup.id,\n                categoryId\n              })\n            }\n            title={\n              selectedMonth\n                ? `Categories: ${moment(selectedMonth).format(\"MMMM\")}`\n                : \"Categories\"\n            }\n            transactions={transactionsInSelectedMonth || transactionsInGroup}\n            selectedEntityId={selectedCategoryId}\n            onClickEntity={onSelectCategory}\n            showAverageToggle={!selectedMonth}\n            showAverage={showAverage && !selectedMonth}\n            numMonths={months.length}\n            onToggleAverage={onToggleShowAverage}\n            limitShowing\n          />\n          {selectedMonth &&\n            transactionsInSelectedMonth.length > 0 && (\n              <TransactionsByMonthSection\n                key={`transactions-${selectedMonth ||\n                  \"all\"}-${selectedCategoryId || \"all\"}`}\n                categoriesById={categoriesById}\n                payeesById={payeesById}\n                selectedMonth={selectedMonth}\n                selectedCategoryId={selectedCategoryId}\n                transactions={transactionsInSelectedMonth}\n              />\n            )}\n        </Fragment>\n      }\n    />\n  );\n};\n\nGroupPage.propTypes = {\n  budget: PropTypes.shape({\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        categoryId: PropTypes.string\n      })\n    ).isRequired,\n    payeesById: PropTypes.object.isRequired,\n    categoryGroupsById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  categoryGroupId: PropTypes.string.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectCategory: PropTypes.func.isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedCategoryId: PropTypes.string,\n  selectedMonth: PropTypes.string\n};\n\nexport default GroupPage;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst INITIAL_STATE = {\n  selectedMonth: null,\n  selectedGroupId: null,\n  selectedCategoryId: null,\n  selectedPayeeId: null\n};\n\nclass CategoriesState extends Component {\n  static propTypes = {\n    action: PropTypes.oneOf([\"PUSH\", \"POP\", \"REPLACE\"]).isRequired,\n    children: PropTypes.func.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  state = INITIAL_STATE;\n\n  cachedStates = {};\n\n  getSnapshotBeforeUpdate() {\n    return this.state;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { location, action } = this.props;\n\n    if (location === prevProps.location) {\n      return;\n    }\n\n    if (action === \"POP\") {\n      this.cachedStates[prevProps.location] = snapshot;\n      this.setState(this.cachedStates[location]);\n    }\n\n    if (action === \"PUSH\") {\n      this.cachedStates[prevProps.location] = snapshot;\n      this.setState(INITIAL_STATE);\n    }\n\n    if (action === \"REPLACE\") {\n      this.setState(INITIAL_STATE);\n    }\n  }\n\n  handleSelectMonth = month => {\n    this.setState(state => ({\n      ...state,\n      selectedMonth: state.selectedMonth === month ? null : month\n    }));\n  };\n\n  handleSelectGroup = groupId => {\n    this.setState(state => ({\n      ...state,\n      selectedGroupId: state.selectedGroupId === groupId ? null : groupId\n    }));\n  };\n\n  handleSelectCategory = categoryId => {\n    this.setState(state => ({\n      ...state,\n      selectedCategoryId:\n        state.selectedCategoryId === categoryId ? null : categoryId\n    }));\n  };\n\n  handleSelectPayee = payeeId => {\n    this.setState(state => ({\n      ...state,\n      selectedPayeeId: state.selectedPayeeId === payeeId ? null : payeeId\n    }));\n  };\n\n  render() {\n    return this.props.children({\n      ...this.state,\n      onSelectMonth: this.handleSelectMonth,\n      onSelectGroup: this.handleSelectGroup,\n      onSelectCategory: this.handleSelectCategory,\n      onSelectPayee: this.handleSelectPayee,\n      onSetExclusion: this.handleSetExclusion\n    });\n  }\n}\n\nexport default CategoriesState;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\n\nconst CategoryPage = ({\n  categoryId,\n  budget,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  location,\n  months,\n  selectedMonth,\n  selectedPayeeId,\n  sidebarTrigger,\n  title,\n  transactions,\n  onSelectMonth,\n  onSelectPayee,\n  onSetExclusion\n}) => {\n  const { categoriesById, payeesById, id: budgetId } = budget;\n  const category = categoriesById[categoryId];\n  const selectedPayee = selectedPayeeId && payeesById[selectedPayeeId];\n  const transactionsForCategory = transactions.filter(\n    transaction => transaction.category_id === categoryId\n  );\n  const transactionsForMonth =\n    selectedMonth &&\n    transactionsForCategory.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            months={months}\n            onSetExclusion={onSetExclusion}\n            highlightFunction={\n              selectedPayeeId &&\n              (transaction => transaction.payee_id === selectedPayeeId)\n            }\n            selectedMonth={selectedMonth}\n            title={\n              selectedPayee\n                ? `Month by Month: ${sanitizeName(selectedPayee.name)}`\n                : \"Month by Month\"\n            }\n            transactions={transactionsForCategory}\n            onSelectMonth={onSelectMonth}\n          />\n          <GenericEntitiesSection\n            key={`payees-${selectedMonth || \"all\"}`}\n            emptyName=\"(no payee)\"\n            entitiesById={payeesById}\n            entityKey=\"payee_id\"\n            linkFunction={payeeId =>\n              makeLink(pages.categoryPayee.path, {\n                budgetId,\n                categoryGroupId: category.category_group_id,\n                categoryId: categoryId,\n                payeeId\n              })\n            }\n            title={\n              selectedMonth\n                ? `Payees: ${moment(selectedMonth).format(\"MMMM\")}`\n                : \"Payees\"\n            }\n            transactions={transactionsForMonth || transactionsForCategory}\n            selectedEntityId={selectedPayeeId}\n            onClickEntity={onSelectPayee}\n            limitShowing\n          />\n          {selectedMonth &&\n            transactionsForMonth.length > 0 && (\n              <TransactionsByMonthSection\n                key={`transactions-${selectedMonth ||\n                  \"all\"}-${selectedPayeeId || \"all\"}`}\n                categoriesById={categoriesById}\n                payeesById={payeesById}\n                transactions={transactionsForMonth}\n                selectedMonth={selectedMonth}\n                selectedPayeeId={selectedPayeeId}\n              />\n            )}\n        </Fragment>\n      }\n    />\n  );\n};\n\nCategoryPage.propTypes = {\n  budget: PropTypes.shape({\n    categoriesById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        payee_id: PropTypes.string\n      })\n    ).isRequired,\n    payeesById: PropTypes.object.isRequired\n  }).isRequired,\n  categoryId: PropTypes.string.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSelectPayee: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string,\n  selectedPayeeId: PropTypes.string\n};\n\nexport default CategoryPage;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\n\nconst CategoryPayeePage = ({\n  budget,\n  categoryId,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  location,\n  months,\n  payeeId,\n  selectedMonth,\n  sidebarTrigger,\n  title,\n  transactions,\n  onSelectMonth,\n  onSetExclusion\n}) => {\n  const { categoriesById, payeesById } = budget;\n  const transactionsForCategoryAndPayee = transactions.filter(\n    transaction =>\n      transaction.category_id === categoryId && transaction.payee_id === payeeId\n  );\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            months={months}\n            selectedMonth={selectedMonth}\n            transactions={transactionsForCategoryAndPayee}\n            onSelectMonth={onSelectMonth}\n            onSetExclusion={onSetExclusion}\n          />\n          {selectedMonth && (\n            <TransactionsByMonthSection\n              categoriesById={categoriesById}\n              payeesById={payeesById}\n              selectedMonth={selectedMonth}\n              transactions={transactionsForCategoryAndPayee}\n              limitShowing={false}\n            />\n          )}\n        </Fragment>\n      }\n    />\n  );\n};\n\nCategoryPayeePage.propTypes = {\n  budget: PropTypes.shape({\n    payeesById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    categoriesById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  categoryId: PropTypes.string.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  payeeId: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      payee_id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string\n};\n\nexport default CategoryPayeePage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  primaryColor,\n  lightPrimaryColor,\n  negativeChartColor\n} from \"../styleVariables\";\nimport MonthlyChart from \"./MonthlyChart\";\n\nconst IncomeVsExpensesChart = ({ data, onSelectMonth, selectedMonth }) => (\n  <MonthlyChart\n    data={data}\n    height={180}\n    selectedMonth={selectedMonth}\n    series={[\n      { color: lightPrimaryColor, valueFunction: d => d.income },\n      { color: negativeChartColor, valueFunction: d => d.expenses },\n      {\n        type: \"line\",\n        color: primaryColor,\n        valueFunction: d => d.income + d.expenses\n      }\n    ]}\n    onSelectMonth={onSelectMonth}\n  />\n);\n\nIncomeVsExpensesChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      expenses: PropTypes.number.isRequired,\n      income: PropTypes.number.isRequired,\n      month: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string\n};\n\nexport default IncomeVsExpensesChart;\n","import React, { Component, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\nimport ListItem from \"./ListItem\";\nimport ToggleNode from \"./ToggleNode\";\n\nconst INDENTATION = 18;\n\nclass BreakdownNode extends Component {\n  static propTypes = {\n    amount: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n    isTopLevel: PropTypes.bool.isRequired,\n    name: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n    nodes: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ),\n    valueRenderer: PropTypes.func\n  };\n\n  state = { expanded: false, childrenMounted: false };\n\n  handleToggleExpand = () => {\n    const { expanded, childrenMounted } = this.state;\n\n    if (childrenMounted) {\n      this.setState({ expanded: !expanded });\n    } else {\n      this.setState({ childrenMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ expanded: true });\n      });\n    }\n  };\n\n  render() {\n    const { name, id, amount, nodes, isTopLevel, valueRenderer } = this.props;\n    const { expanded, childrenMounted } = this.state;\n    const hasChildNodes = !!nodes && nodes.length > 0;\n\n    return (\n      <Container hasChildNodes={hasChildNodes} isTopLevel={isTopLevel}>\n        {hasChildNodes ? (\n          <ToggleNode\n            id={id}\n            name={name}\n            amount={amount}\n            expanded={expanded}\n            onToggle={this.handleToggleExpand}\n            valueRenderer={valueRenderer}\n          />\n        ) : (\n          <LeafNode\n            id={id}\n            name={name}\n            amount={amount}\n            valueRenderer={valueRenderer}\n          />\n        )}\n\n        {hasChildNodes &&\n          childrenMounted && (\n            <AnimateHeight isExpanded={expanded}>\n              <Nodes nodes={nodes} valueRenderer={valueRenderer} />\n            </AnimateHeight>\n          )}\n      </Container>\n    );\n  }\n}\n\nclass Nodes extends PureComponent {\n  render() {\n    const { nodes, valueRenderer } = this.props;\n    return (\n      <div style={{ paddingLeft: INDENTATION }}>\n        {nodes.map(node => (\n          <BreakdownNode\n            {...node}\n            key={node.id}\n            isTopLevel={false}\n            valueRenderer={valueRenderer}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst NodeWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n  user-select: none;\n\n  ${ListItem}:first-child > & {\n    padding-top: 0;\n  }\n`;\n\nconst LeafNode = ({ name, id, amount, valueRenderer }) => (\n  <NodeWrapper>\n    <SecondaryText>{name}</SecondaryText>\n    {valueRenderer ? (\n      valueRenderer({ amount, id })\n    ) : (\n      <SecondaryText>\n        <Amount amount={amount} />\n      </SecondaryText>\n    )}\n  </NodeWrapper>\n);\n\nconst Container = ({ isTopLevel, hasChildNodes, children }) =>\n  isTopLevel ? (\n    <ListItem style={{ display: \"block\", padding: 0 }}>{children}</ListItem>\n  ) : (\n    children\n  );\n\nexport default BreakdownNode;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BreakdownNode from \"./BreakdownNode\";\n\nconst Breakdown = ({ nodes, valueRenderer }) =>\n  nodes.map(({ id, name, amount, nodes }) => (\n    <BreakdownNode\n      key={id}\n      id={id}\n      name={name}\n      amount={amount}\n      nodes={nodes}\n      valueRenderer={valueRenderer}\n      isTopLevel\n    />\n  ));\n\nBreakdown.propTypes = {\n  nodes: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n      name: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n      nodes: PropTypes.array\n    })\n  ).isRequired,\n  valueRenderer: PropTypes.func\n};\n\nBreakdown.defaultProps = { reverse: false };\n\nexport default Breakdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport concat from \"lodash/fp/concat\";\nimport mapRaw from \"lodash/fp/map\";\nimport omit from \"lodash/fp/omit\";\nimport pick from \"lodash/fp/pick\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { sumByProp, groupByProp } from \"../dataUtils\";\nimport { getPayeeNodes } from \"../budgetUtils\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\n\nconst map = mapRaw.convert({ cap: false });\n\nconst ExpensesBreakdown = ({\n  categoriesById,\n  categoryGroupsById,\n  transactions,\n  totalIncome,\n  payeesById,\n  divideBy\n}) => {\n  const categoryNodes = compose([\n    map((transactions, categoryId) => {\n      const payeeNodes = getPayeeNodes({ payeesById, transactions }, divideBy);\n      return {\n        ...pick([\"id\", \"name\", \"category_group_id\"])(\n          categoriesById[categoryId]\n        ),\n        nodes: sortBy(\"amount\")(payeeNodes),\n        amount: sumByProp(\"amount\")(payeeNodes)\n      };\n    }),\n    groupByProp(\"category_id\")\n  ])(transactions);\n\n  const groupNodes = compose([\n    map((nodes, categoryGroupId) => {\n      const categoryNodes = map(omit(\"category_group_id\"))(nodes);\n      return {\n        ...pick([\"id\", \"name\"])(categoryGroupsById[categoryGroupId]),\n        nodes: sortBy(\"amount\")(categoryNodes),\n        amount: sumByProp(\"amount\")(categoryNodes)\n      };\n    }),\n    groupByProp(\"category_group_id\")\n  ])(categoryNodes);\n\n  const rootPayeeNodes = getPayeeNodes(\n    {\n      payeesById,\n      transactions: transactions.filter(transaction => !transaction.category_id)\n    },\n    divideBy\n  );\n\n  const nodes = compose([\n    nodes =>\n      concat(nodes)([\n        {\n          id: \"net\",\n          amount: -totalIncome - sumByProp(\"amount\")(nodes),\n          name: \"Net Income\"\n        }\n      ]),\n    sortBy(\"amount\"),\n    concat(rootPayeeNodes)\n  ])(groupNodes);\n\n  return (\n    <CollapsibleSection title=\"Expenses Breakdown\">\n      <Breakdown\n        nodes={nodes}\n        valueRenderer={node => (\n          <AmountWithPercentage {...node} positiveIsRed total={-totalIncome} />\n        )}\n      />\n    </CollapsibleSection>\n  );\n};\n\nExpensesBreakdown.propTypes = {\n  categoriesById: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      category_group_id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  categoryGroupsById: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  divideBy: PropTypes.number.isRequired,\n  payeesById: PropTypes.objectOf(PropTypes.object).isRequired,\n  totalIncome: PropTypes.number.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      category_id: PropTypes.string\n    })\n  ).isRequired\n};\n\nExpensesBreakdown.defaultProps = { divideBy: 1 };\n\nexport default ExpensesBreakdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport { getPayeeNodes } from \"../budgetUtils\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\n\nconst IncomeBreakdown = ({ transactions, payeesById, divideBy }) => {\n  const nodes = getPayeeNodes({ payeesById, transactions }, divideBy);\n  const total = sumBy(\"amount\")(nodes);\n  return (\n    <CollapsibleSection title=\"Income Breakdown\">\n      <Breakdown\n        nodes={sortBy(\"amount\")(nodes).reverse()}\n        total={total}\n        valueRenderer={node => <AmountWithPercentage {...node} total={total} />}\n      />\n    </CollapsibleSection>\n  );\n};\n\nIncomeBreakdown.propTypes = {\n  divideBy: PropTypes.number.isRequired,\n  payeesById: PropTypes.objectOf(PropTypes.object).isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      categoryId: PropTypes.string\n    })\n  ).isRequired\n};\n\nIncomeBreakdown.defaultProps = { divideBy: 1 };\n\nexport default IncomeBreakdown;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { sumByProp } from \"../dataUtils\";\nimport ExpensesBreakdown from \"./ExpensesBreakdown\";\nimport IncomeBreakdown from \"./IncomeBreakdown\";\n\nconst Breakdowns = ({\n  categoriesById,\n  categoryGroupsById,\n  payeesById,\n  expenseTransactions,\n  incomeTransactions,\n  divideBy\n}) => (\n  <Fragment>\n    <ExpensesBreakdown\n      categoriesById={categoriesById}\n      categoryGroupsById={categoryGroupsById}\n      payeesById={payeesById}\n      transactions={expenseTransactions}\n      totalIncome={sumByProp(\"amount\")(incomeTransactions) / divideBy}\n      divideBy={divideBy}\n    />\n    <IncomeBreakdown\n      payeesById={payeesById}\n      transactions={incomeTransactions}\n      divideBy={divideBy}\n    />\n  </Fragment>\n);\n\nBreakdowns.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  categoryGroupsById: PropTypes.object.isRequired,\n  expenseTransactions: PropTypes.array.isRequired,\n  incomeTransactions: PropTypes.array.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  divideBy: PropTypes.number.isRequired\n};\n\nexport default Breakdowns;\n","import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport find from \"lodash/fp/find\";\nimport flatMap from \"lodash/fp/flatMap\";\nimport mapRaw from \"lodash/fp/map\";\nimport matchesProperty from \"lodash/fp/matchesProperty\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { sumByProp, groupBy, simpleMemoize } from \"../dataUtils\";\nimport { getTransactionMonth, isIncome } from \"../budgetUtils\";\nimport { SecondaryText } from \"./typeComponents\";\nimport PageLayout from \"./PageLayout\";\nimport IncomeVsExpensesChart from \"./IncomeVsExpensesChart\";\nimport Breakdowns from \"./Breakdowns\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport MonthByMonthSettingsModal from \"./MonthByMonthSettingsModal\";\nimport { useSelectedMonth } from \"../commonHooks\";\n\nconst map = mapRaw.convert({ cap: false });\n\nconst getSummaries = simpleMemoize((transactions, investmentAccounts, budget) =>\n  compose([\n    sortBy(\"month\"),\n    map((transactions, month) => {\n      const grouped = groupBy(isIncome(budget))(transactions);\n\n      return {\n        month,\n        expenseTransactions: grouped.false || [],\n        incomeTransactions: grouped.true || [],\n        income: sumByProp(\"amount\")(grouped.true || []),\n        expenses: sumByProp(\"amount\")(grouped.false || [])\n      };\n    }),\n    groupBy(getTransactionMonth)\n  ])(transactions)\n);\n\nconst IncomeVsExpensesPage = ({\n  budget,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  investmentAccounts,\n  location,\n  sidebarTrigger,\n  title,\n  transactions,\n  onSetExclusion\n}) => {\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\n  const [settingsModalOpen, setSettingsModalOpen] = useState(false);\n  const [showTotals, setShowTotals] = useState(false);\n  const { categoriesById, categoryGroupsById, payeesById } = budget;\n\n  const allSummaries = getSummaries(transactions, investmentAccounts, budget);\n  const summaries = selectedMonth\n    ? [find(matchesProperty(\"month\", selectedMonth))(allSummaries)]\n    : allSummaries;\n\n  const incomeTransactions = flatMap(summary => summary.incomeTransactions)(\n    summaries\n  );\n  const expenseTransactions = flatMap(summary => summary.expenseTransactions)(\n    summaries\n  );\n\n  const totalExpenses = sumByProp(\"amount\")(expenseTransactions);\n  const totalIncome = sumByProp(\"amount\")(incomeTransactions);\n  const denominator = showTotals ? 1 : summaries.length;\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <CollapsibleSection\n            title=\"Monthly Trend\"\n            hasSettings\n            onClickSettings={() => {\n              setSettingsModalOpen(true);\n            }}\n            actions={\n              <SecondaryText\n                onClick={() => {\n                  setShowTotals(!showTotals);\n                }}\n              >\n                {showTotals ? \"show average\" : \"show total\"}\n              </SecondaryText>\n            }\n          >\n            <ChartNumbers\n              numbers={[\n                {\n                  label: \"net income\",\n                  amount: -(totalExpenses + totalIncome) / denominator\n                },\n                {\n                  label: \"expenses\",\n                  amount: totalExpenses / denominator\n                },\n                {\n                  label: \"income\",\n                  amount: -totalIncome / denominator\n                }\n              ]}\n            />\n            <IncomeVsExpensesChart\n              data={allSummaries}\n              selectedMonth={selectedMonth}\n              onSelectMonth={onSelectMonth}\n            />\n            <MonthByMonthSettingsModal\n              excludeFirstMonth={excludeFirstMonth}\n              excludeLastMonth={excludeLastMonth}\n              open={settingsModalOpen}\n              onClose={() => {\n                setSettingsModalOpen(false);\n              }}\n              onSetExclusion={onSetExclusion}\n            />\n          </CollapsibleSection>\n          <Breakdowns\n            categoriesById={categoriesById}\n            categoryGroupsById={categoryGroupsById}\n            payeesById={payeesById}\n            expenseTransactions={expenseTransactions}\n            incomeTransactions={incomeTransactions}\n            divideBy={showTotals ? 1 : summaries.length}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nIncomeVsExpensesPage.propTypes = {\n  budget: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    months: PropTypes.arrayOf(\n      PropTypes.shape({\n        month: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.object.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onSetExclusion: PropTypes.func.isRequired\n};\n\nexport default IncomeVsExpensesPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport includes from \"lodash/fp/includes\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport { groupBy } from \"../dataUtils\";\nimport {\n  primaryColor,\n  lightPrimaryColor,\n  negativeChartColor\n} from \"../styleVariables\";\nimport MonthlyChart from \"./MonthlyChart\";\n\nconst CREDIT_ACCOUNTS = [\"mortgage\", \"creditCard\"];\nconst getStack = ({ type, id, mortgageAccounts }) => {\n  if (mortgageAccounts[id]) {\n    return \"liability\";\n  }\n\n  return includes(type)(CREDIT_ACCOUNTS) ? \"liability\" : \"asset\";\n};\n\nconst NetWorthChart = ({\n  data,\n  months,\n  mortgageAccounts,\n  selectedMonth,\n  onSelectMonth\n}) => {\n  const groupedData = groupBy(d =>\n    getStack({ type: d.type, id: d.id, mortgageAccounts })\n  )(data);\n  const monthlyData = months.map((month, index) => ({\n    month,\n    assets: sumBy(d => d.data[index])(groupedData.asset),\n    liabilities: sumBy(d => d.data[index])(groupedData.liability)\n  }));\n\n  return (\n    <MonthlyChart\n      selectedMonth={selectedMonth}\n      onSelectMonth={onSelectMonth}\n      data={monthlyData}\n      height={180}\n      series={[\n        {\n          color: negativeChartColor,\n          valueFunction: d => Math.max(-d.liabilities, 0)\n        },\n        {\n          color: lightPrimaryColor,\n          valueFunction: d => Math.max(d.assets, 0)\n        },\n        {\n          color: primaryColor,\n          type: \"line\",\n          valueFunction: d => d.assets + d.liabilities\n        }\n      ]}\n      stacked={false}\n    />\n  );\n};\n\nNetWorthChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(PropTypes.number).isRequired,\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string\n};\n\nexport default NetWorthChart;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport every from \"lodash/fp/every\";\nimport filter from \"lodash/fp/filter\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport mapRaw from \"lodash/fp/map\";\nimport propEq from \"lodash/fp/propEq\";\nimport reject from \"lodash/fp/reject\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport startCase from \"lodash/fp/startCase\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport values from \"lodash/fp/values\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\nimport Icon from \"./Icon\";\n\nconst map = mapRaw.convert({ cap: false });\n\nconst getNodes = ({ accounts, investmentAccounts, mortgageAccounts }) => {\n  const accountsByGroup = groupBy(account => {\n    if (investmentAccounts[account.id]) {\n      return \"Investments\";\n    }\n\n    if (mortgageAccounts[account.id]) {\n      return \"Mortgages\";\n    }\n\n    return startCase(account.type);\n  })(accounts);\n\n  return compose([\n    accounts => accounts.reverse(),\n    sortBy(\"amount\"),\n    map((accounts, name) => ({\n      name,\n      accounts,\n      amount: sumBy(\"balance\")(accounts),\n      id: name,\n      nodes: compose([\n        sortBy(\"balance\"),\n        map(({ id, name, balance }) => ({\n          amount: balance,\n          id,\n          name\n        }))\n      ])(accounts)\n    }))\n  ])(accountsByGroup);\n};\n\nconst NetWorthAccounts = ({\n  accounts,\n  hiddenAccounts,\n  onToggleAccounts,\n  investmentAccounts,\n  mortgageAccounts\n}) => {\n  const accountsById = keyBy(\"id\")(accounts);\n  const visibleNodes = getNodes({\n    accounts: reject(account => hiddenAccounts[account.id])(accounts),\n    investmentAccounts,\n    mortgageAccounts\n  });\n  const hiddenNodes = getNodes({\n    accounts: filter(account => hiddenAccounts[account.id])(accounts),\n    investmentAccounts,\n    mortgageAccounts\n  });\n\n  return (\n    <Fragment>\n      <CollapsibleSection title=\"Accounts\">\n        <AccountBreakdown\n          accountsById={accountsById}\n          hiddenAccounts={hiddenAccounts}\n          nodes={visibleNodes}\n          onToggleAccounts={onToggleAccounts}\n        />\n      </CollapsibleSection>\n\n      {values(hiddenNodes).length > 0 && (\n        <CollapsibleSection title=\"Hidden Accounts\">\n          <AccountBreakdown\n            accountsById={accountsById}\n            hiddenAccounts={hiddenAccounts}\n            nodes={hiddenNodes}\n            onToggleAccounts={onToggleAccounts}\n          />\n        </CollapsibleSection>\n      )}\n    </Fragment>\n  );\n};\n\nNetWorthAccounts.propTypes = {\n  accounts: PropTypes.arrayOf(\n    PropTypes.shape({\n      balance: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  hiddenAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onToggleAccounts: PropTypes.func.isRequired\n};\n\nconst AccountBreakdown = ({\n  accountsById,\n  hiddenAccounts,\n  nodes,\n  onToggleAccounts\n}) => (\n  <Breakdown\n    nodes={nodes}\n    valueRenderer={({ id, amount }) => {\n      const node = nodes.find(propEq(\"id\", id));\n      const accounts = node ? node.accounts : [accountsById[id]];\n\n      return (\n        <SecondaryText style={{ display: \"flex\", alignItems: \"center\" }}>\n          <Amount amount={amount} />\n          <div\n            style={{ width: 36, textAlign: \"center\" }}\n            onClick={evt => {\n              evt.stopPropagation();\n              onToggleAccounts({ ids: map(\"id\")(accounts) });\n            }}\n          >\n            {every(account => hiddenAccounts[account.id])(accounts) ? (\n              <Icon icon=\"eye-slash\" />\n            ) : (\n              <Icon icon=\"eye\" />\n            )}\n          </div>\n        </SecondaryText>\n      );\n    }}\n  />\n);\n\nexport default NetWorthAccounts;\n","import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport constant from \"lodash/fp/constant\";\nimport eq from \"lodash/fp/eq\";\nimport filter from \"lodash/fp/filter\";\nimport findIndex from \"lodash/fp/findIndex\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport identity from \"lodash/fp/identity\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport keys from \"lodash/fp/keys\";\nimport last from \"lodash/fp/last\";\nimport map from \"lodash/fp/map\";\nimport mapValues from \"lodash/fp/mapValues\";\nimport omitBy from \"lodash/fp/omitBy\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sum from \"lodash/fp/sum\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport values from \"lodash/fp/values\";\nimport { simpleMemoize } from \"../dataUtils\";\nimport { useSelectedMonth } from \"../commonHooks\";\nimport { getSetting, setSetting } from \"../uiRepo\";\nimport PageLayout from \"./PageLayout\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport NetWorthChart from \"./NetWorthChart\";\nimport NetWorthAccounts from \"./NetWorthAccounts\";\n\nconst useHiddenAccounts = budget => {\n  const [hiddenAccounts, setHiddenAccounts] = useState(\n    getSetting(\"netWorthHiddenAccounts\", budget.id)\n  );\n\n  const onToggleHiddenAccounts = ({ ids }) => {\n    const shouldHide = ids.some(id => !hiddenAccounts[id]);\n    const newHiddenAccounts = ids.reduce(\n      (acc, id) => ({ ...acc, [id]: shouldHide }),\n      hiddenAccounts\n    );\n\n    setHiddenAccounts(newHiddenAccounts);\n    setSetting(\"netWorthHiddenAccounts\", budget.id, newHiddenAccounts);\n  };\n\n  return { hiddenAccounts, onToggleHiddenAccounts };\n};\n\nconst cumulative = arr =>\n  arr.reduce(\n    (acc, curr) => (acc.length === 0 ? [curr] : acc.concat(last(acc) + curr)),\n    []\n  );\n\nconst groupByMonthAndAccount = simpleMemoize(\n  compose([\n    mapValues(groupBy(\"account_id\")),\n    groupBy(({ date }) => date.slice(0, 7))\n  ])\n);\n\nconst getMonths = simpleMemoize(budget =>\n  compose([sortBy(identity), keys, groupByMonthAndAccount])(budget.transactions)\n);\n\nconst getSummaryByAccount = simpleMemoize(budget => {\n  const groupedTransactions = groupByMonthAndAccount(budget.transactions);\n  const months = getMonths(budget);\n  return map(({ id }) => ({\n    id,\n    data: compose([\n      cumulative,\n      map(month => sumBy(\"amount\")(groupedTransactions[month][id]))\n    ])(months)\n  }))(budget.accounts);\n});\n\nconst getSelectedBalances = simpleMemoize((selectedMonth, budget) => {\n  const months = getMonths(budget);\n  const selectedMonthIndex = findIndex(eq(selectedMonth))(months);\n  const accountSummaries = getSummaryByAccount(budget);\n\n  return compose([\n    mapValues(\n      ({ data }) =>\n        selectedMonthIndex > -1 ? data[selectedMonthIndex] : last(data)\n    ),\n    keyBy(\"id\")\n  ])(accountSummaries);\n});\n\nconst NetWorthPage = ({\n  budget,\n  historyAction,\n  investmentAccounts,\n  location,\n  mortgageAccounts,\n  sidebarTrigger,\n  title\n}) => {\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\n  const { hiddenAccounts, onToggleHiddenAccounts } = useHiddenAccounts(budget);\n  const months = getMonths(budget);\n  const accountSummaries = getSummaryByAccount(budget);\n  const selectedBalances = getSelectedBalances(selectedMonth, budget);\n  const filterHidden = omitBy((_, id) => hiddenAccounts[id]);\n  const selectedLiabilities = compose([\n    sum,\n    filter(b => b < 0),\n    values,\n    filterHidden\n  ])(selectedBalances);\n  const selectedAssets = compose([\n    sum,\n    filter(b => b > 0),\n    values,\n    filterHidden\n  ])(selectedBalances);\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <CollapsibleSection title=\"Monthly Trend\">\n            <ChartNumbers\n              numbers={[\n                {\n                  amount: -(selectedAssets + selectedLiabilities),\n                  label: \"Net Worth\"\n                },\n                { amount: -selectedAssets, label: \"Assets\" },\n                { amount: selectedLiabilities, label: \"Liabilities\" }\n              ]}\n              alwaysRound\n            />\n            <NetWorthChart\n              data={map(({ id, data }) => ({\n                data: hiddenAccounts[id] ? data.map(constant(0)) : data,\n                type: budget.accountsById[id].type,\n                id\n              }))(accountSummaries)}\n              months={months}\n              mortgageAccounts={mortgageAccounts}\n              selectedMonth={selectedMonth}\n              onSelectMonth={onSelectMonth}\n            />\n          </CollapsibleSection>\n          <NetWorthAccounts\n            accounts={map(account => ({\n              ...account,\n              balance: selectedBalances[account.id]\n            }))(budget.accounts)}\n            hiddenAccounts={hiddenAccounts}\n            investmentAccounts={investmentAccounts}\n            mortgageAccounts={mortgageAccounts}\n            onToggleAccounts={onToggleHiddenAccounts}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nNetWorthPage.propTypes = {\n  budget: PropTypes.shape({\n    accounts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    accountsById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        account_id: PropTypes.string.isRequired,\n        amount: PropTypes.number.isRequired,\n        date: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  location: PropTypes.string.isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default NetWorthPage;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/fp/keys\";\nimport get from \"lodash/fp/get\";\nimport EmptyText from \"./EmptyText\";\nimport { Link } from \"react-router-dom\";\nimport pages, { makeLink } from \"../pages\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport {\n  useMonthExclusions,\n  useSelectedEntityId,\n  useSelectedMonth\n} from \"../commonHooks\";\n\nconst isContribution = investmentAccounts => transaction =>\n  !!investmentAccounts[transaction.account_id] &&\n  !!transaction.transfer_account_id &&\n  !investmentAccounts[transaction.transfer_account_id];\n\nconst isCapitalGainOrLoss = (investmentAccounts, payeesById) => transaction =>\n  !!investmentAccounts[transaction.account_id] &&\n  !transaction.transfer_account_id &&\n  get([transaction.payee_id, \"name\"])(payeesById) !== \"Starting Balance\";\n\nconst isInvestmentTransaction = (\n  investmentAccounts,\n  payeesById\n) => transaction =>\n  isContribution(investmentAccounts)(transaction) ||\n  isCapitalGainOrLoss(investmentAccounts, payeesById)(transaction);\n\nconst InvestmentsPage = ({\n  budget,\n  historyAction,\n  investmentAccounts,\n  location,\n  sidebarTrigger,\n  title\n}) => {\n  const {\n    excludeFirstMonth,\n    excludeLastMonth,\n    months,\n    onSetExclusion\n  } = useMonthExclusions(budget);\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\n  const [selectedBreakdown, onSelectBreakdown] = useSelectedEntityId();\n\n  const { payeesById } = budget;\n\n  if (keys(investmentAccounts).length === 0) {\n    return (\n      <EmptyText>\n        You don't have any accounts marked as investment accounts.{\" \"}\n        <Link to={makeLink(pages.settings.path, { budgetId: budget.id })}>\n          Go to Settings\n        </Link>\n      </EmptyText>\n    );\n  }\n\n  const investmentTransactions = budget.transactions\n    .filter(isInvestmentTransaction(investmentAccounts, payeesById))\n    .map(transaction => ({ ...transaction, amount: -transaction.amount }));\n  const transactionsInMonth =\n    selectedMonth &&\n    investmentTransactions.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            highlightFunction={\n              selectedBreakdown &&\n              (transaction =>\n                selectedBreakdown === \"contribution\"\n                  ? isContribution(investmentAccounts)(transaction)\n                  : isCapitalGainOrLoss(investmentAccounts, payeesById)(\n                      transaction\n                    ))\n            }\n            months={months}\n            selectedMonth={selectedMonth}\n            transactions={investmentTransactions}\n            onSelectMonth={onSelectMonth}\n            onSetExclusion={onSetExclusion}\n          />\n          <GenericEntitiesSection\n            transactions={transactionsInMonth || investmentTransactions}\n            entitiesById={{\n              contribution: { name: \"Contributions\" },\n              capitalGain: { name: \"Capital Gains/Losses\" }\n            }}\n            title=\"Growth Breakdown\"\n            onClickEntity={onSelectBreakdown}\n            selectedEntityId={selectedBreakdown}\n            entityFunction={transaction =>\n              isContribution(investmentAccounts)(transaction)\n                ? \"contribution\"\n                : \"capitalGain\"\n            }\n            positiveIsRed\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nInvestmentsPage.propTypes = {\n  budget: PropTypes.object.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.object.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default InvestmentsPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  primaryColor,\n  negativeColor,\n  selectedPlotBandColor\n} from \"../styleVariables\";\nimport Chart from \"./Chart\";\n\nconst ProjectionsChart = ({\n  investmentsProjection,\n  mortgageProjection,\n  amountNeededToRetire,\n  yearsUntilRetirement\n}) => (\n  <Chart\n    options={{\n      chart: {\n        type: \"column\"\n      },\n      xAxis: {\n        type: \"category\",\n        plotBands: [\n          {\n            color: selectedPlotBandColor,\n            from: Math.floor(yearsUntilRetirement) - 0.5,\n            to: Math.floor(yearsUntilRetirement) + 0.5\n          }\n        ]\n      },\n      yAxis: {\n        title: { text: null },\n        endOnTick: false,\n        plotLines: [\n          {\n            value: amountNeededToRetire,\n            color: \"#ccc\",\n            width: 1\n          }\n        ]\n      },\n      legend: {\n        enabled: false\n      },\n      series: [\n        { data: investmentsProjection, color: primaryColor, borderWidth: 0 },\n        { data: mortgageProjection, color: negativeColor, borderWidth: 0 }\n      ]\n    }}\n  />\n);\n\nProjectionsChart.propTypes = {\n  amountNeededToRetire: PropTypes.number.isRequired,\n  investmentsProjection: PropTypes.arrayOf(PropTypes.number).isRequired,\n  mortgageProjection: PropTypes.arrayOf(PropTypes.number).isRequired,\n  yearsUntilRetirement: PropTypes.number.isRequired\n};\n\nexport default ProjectionsChart;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst isDescendant = (parent, child) => {\n  let node = child.parentNode;\n  while (node !== null) {\n    if (node === parent) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n  return false;\n};\n\nclass ClickOff extends Component {\n  static propTypes = {\n    children: PropTypes.func.isRequired,\n    onClickOff: PropTypes.func\n  };\n\n  parent = null;\n\n  componentDidMount() {\n    document.body.addEventListener(\"click\", this.handleBodyClick);\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener(\"click\", this.handleBodyClick);\n  }\n\n  handleBodyClick = evt => {\n    if (this.props.onClickOff && !isDescendant(this.parent, evt.target)) {\n      this.props.onClickOff();\n    }\n  };\n\n  render() {\n    return this.props.children({\n      ref: el => {\n        this.parent = el;\n      }\n    });\n  }\n}\n\nexport default ClickOff;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport ClickOff from \"./ClickOff\";\nimport Button from \"./Button\";\n\nconst bodyEl = document.getElementsByTagName(\"body\")[0];\n\nconst Container = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: #fff;\n`;\n\nconst ProjectionsSlider = ({\n  name,\n  formatter,\n  label,\n  value,\n  onBlur,\n  onChange,\n  onReset,\n  rangeOptions\n}) =>\n  createPortal(\n    <ClickOff onClickOff={name && onBlur}>\n      {({ ref }) => (\n        <Container ref={ref}>\n          <AnimateHeight isExpanded={!!name}>\n            <div style={{ borderTop: \"1px solid #bbb\", padding: \"15px 20px\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  marginBottom: 15\n                }}\n              >\n                {label}: {formatter(value || 0)}\n                <Button\n                  onClick={() => {\n                    onReset(name);\n                  }}\n                >\n                  reset\n                </Button>\n              </div>\n              <Range\n                {...rangeOptions}\n                name={name}\n                value={value || 0}\n                onChange={onChange}\n              />\n            </div>\n          </AnimateHeight>\n        </Container>\n      )}\n    </ClickOff>,\n    bodyEl\n  );\n\nProjectionsSlider.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n  formatter: PropTypes.func,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.number\n};\n\nProjectionsSlider.defaultProps = {\n  formatter: val => val\n};\n\nconst Range = ({ name, onReset, ...other }) => (\n  <input\n    {...other}\n    name={name}\n    type=\"range\"\n    style={{ display: \"block\", width: \"100%\" }}\n  />\n);\n\nexport default ProjectionsSlider;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport chunk from \"lodash/fp/chunk\";\nimport compose from \"lodash/fp/compose\";\nimport get from \"lodash/fp/get\";\nimport head from \"lodash/fp/head\";\nimport map from \"lodash/fp/map\";\nimport pick from \"lodash/fp/pick\";\nimport range from \"lodash/fp/range\";\nimport { simpleMemoize, keyByProp } from \"../dataUtils\";\nimport { selectedPlotBandColor } from \"../styleVariables\";\nimport {\n  getMortgageRate,\n  getReturnOnInvestments,\n  getAverageContribution,\n  getCurrentInvestments,\n  getAverageExpensesWithoutMortgage,\n  getProjection,\n  getProjectionWithRetirement\n} from \"../projectionUtils\";\nimport PageLayout from \"./PageLayout\";\nimport Icon from \"./Icon\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ProjectionsChart from \"./ProjectionsChart\";\nimport ProjectionsSlider from \"./ProjectionsSlider\";\nimport ChartNumbers from \"./ChartNumbers\";\n\nconst YEARS_TO_PROJECT = 50;\n\nconst adjustableEntries = [\n  {\n    label: \"Average monthly contribution\",\n    name: \"averageContribution\",\n    formatter: val => `$${Math.round(val)}`\n  },\n  {\n    label: \"Average return on investments\",\n    name: \"returnOnInvestments\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  },\n  {\n    label: \"Average expenses without mortgage\",\n    name: \"averageExpenses\",\n    formatter: val => `$${Math.round(val)}`\n  },\n  {\n    label: \"Return on investment after retirement\",\n    name: \"retirementReturns\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  },\n  {\n    label: \"Average tax rate after retirement\",\n    name: \"retirementTaxRate\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  }\n];\n\nconst adjustableEntriesByName = keyByProp(\"name\")(adjustableEntries);\n\nconst getInitialState = simpleMemoize(\n  (budget, investmentAccounts, mortgageAccounts) => {\n    const {\n      paymentsLeft: remainingMortgagePayments,\n      mortgagePayment,\n      principalProjection: mortgageProjection\n    } = getMortgageRate(budget, mortgageAccounts) || {};\n    const returnOnInvestments = getReturnOnInvestments(\n      budget,\n      investmentAccounts\n    );\n    const averageContribution = getAverageContribution(\n      budget,\n      investmentAccounts\n    );\n    const currentInvestments = getCurrentInvestments(\n      budget,\n      investmentAccounts\n    );\n    const averageExpenses = getAverageExpensesWithoutMortgage(\n      budget,\n      investmentAccounts,\n      mortgageAccounts\n    );\n\n    return {\n      mortgagePayment,\n      remainingMortgagePayments,\n      mortgageProjection,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      averageExpenses,\n      retirementReturns: 0.04,\n      retirementTaxRate: 0.15,\n      maxAverageExpenses: Math.ceil((averageExpenses * 2) / 1000) * 1000,\n      maxAverageContribution: Math.ceil((averageContribution * 2) / 1000) * 1000\n    };\n  }\n);\n\nclass ProjectionsPage extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      transactions: PropTypes.array.isRequired\n    }).isRequired,\n    historyAction: PropTypes.string.isRequired,\n    investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    location: PropTypes.string.isRequired,\n    mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    sidebarTrigger: PropTypes.node.isRequired,\n    title: PropTypes.string.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...getInitialState(\n        props.budget,\n        props.investmentAccounts,\n        props.mortgageAccounts\n      ),\n      adjustingName: null\n    };\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: parseFloat(e.target.value) });\n  };\n\n  handleSelectAdjusting = name => {\n    this.setState(state => ({\n      adjustingName: state.adjustingName === name ? null : name\n    }));\n  };\n\n  handleClearSelection = () => {\n    this.setState({ adjustingName: null });\n  };\n\n  handleResetCalculation = calculation => {\n    const { budget, investmentAccounts, mortgageAccounts } = this.props;\n    this.setState(\n      pick(calculation)(\n        getInitialState(budget, investmentAccounts, mortgageAccounts)\n      )\n    );\n  };\n\n  render() {\n    const { historyAction, location, sidebarTrigger, title } = this.props;\n    const {\n      mortgagePayment,\n      remainingMortgagePayments,\n      mortgageProjection,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      averageExpenses,\n      retirementReturns,\n      retirementTaxRate,\n      maxAverageExpenses,\n      maxAverageContribution,\n      adjustingName\n    } = this.state;\n\n    const projection = getProjection({\n      numMonths: YEARS_TO_PROJECT * 12,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments\n    });\n    const monthlyRetirementReturn = (1 + retirementReturns) ** (1 / 12) - 1;\n    const amountNeededToRetire =\n      averageExpenses / (monthlyRetirementReturn * (1 - retirementTaxRate));\n    let m = 0;\n\n    while (m < projection.length) {\n      if (m < remainingMortgagePayments) {\n        const remainingMortgage = range(\n          0,\n          remainingMortgagePayments - m\n        ).reduce(\n          (acc, curr) =>\n            acc +\n            mortgagePayment /\n              (1 + monthlyRetirementReturn * (1 - retirementTaxRate)) ** curr,\n          0\n        );\n        if (\n          (projection[m] - remainingMortgage) *\n            monthlyRetirementReturn *\n            (1 - retirementTaxRate) >\n          averageExpenses\n        ) {\n          break;\n        }\n      } else {\n        if (\n          projection[m] * monthlyRetirementReturn * (1 - retirementTaxRate) >\n          averageExpenses\n        ) {\n          break;\n        }\n      }\n      m += 1;\n    }\n\n    const projectionWithRetirement = getProjectionWithRetirement({\n      numMonths: YEARS_TO_PROJECT * 12,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      monthsBeforeRetirement: m,\n      monthlyExpenses: averageExpenses,\n      retirementReturns,\n      retirementTaxRate,\n      remainingMortgagePayments,\n      mortgagePayment\n    });\n    const hasMortgage = !!mortgagePayment;\n\n    const yearsUntilRetirement = m / 12;\n    const projectionByYear = compose([map(head), chunk(12)])(\n      projectionWithRetirement\n    );\n    const mortgageProjectionByYear = compose([map(head), chunk(12)])(\n      mortgageProjection\n    );\n\n    const nameToRangeOptions = {\n      averageContribution: { min: 0, max: maxAverageContribution, step: 50 },\n      returnOnInvestments: { min: 0, max: 0.2, step: 0.001 },\n      averageExpenses: { min: 0, max: maxAverageExpenses, step: 50 },\n      retirementReturns: { min: 0, max: 0.2, step: 0.001 },\n      retirementTaxRate: { min: 0, max: 0.5, step: 0.001 }\n    };\n\n    return (\n      <PageLayout\n        historyAction={historyAction}\n        location={location}\n        sidebarTrigger={sidebarTrigger}\n        title={title}\n        content={\n          <Fragment>\n            <CollapsibleSection title=\"Projection\">\n              <ChartNumbers\n                numbers={[\n                  {\n                    amount: -amountNeededToRetire,\n                    label: \"needed for retirement\",\n                    decimalsToRound: 0\n                  },\n                  {\n                    amount: -yearsUntilRetirement,\n                    label: \"years to retirement\",\n                    isMoney: false,\n                    decimalsToRound: 1\n                  }\n                ]}\n              />\n              <ProjectionsChart\n                investmentsProjection={projectionByYear}\n                mortgageProjection={mortgageProjectionByYear}\n                amountNeededToRetire={amountNeededToRetire}\n                yearsUntilRetirement={yearsUntilRetirement}\n              />\n            </CollapsibleSection>\n            <CollapsibleSection title=\"Assumptions\">\n              {adjustableEntries.map(({ label, name, formatter }) => (\n                <AdjustableEntry\n                  key={name}\n                  label={label}\n                  name={name}\n                  value={this.state[name]}\n                  formatter={formatter}\n                  isAdjusting={adjustingName === name}\n                  onSelect={this.handleSelectAdjusting}\n                  onReset={this.handleResetCalculation}\n                  onChange={this.handleChange}\n                />\n              ))}\n              {hasMortgage && (\n                <Fragment>\n                  <Entry\n                    label=\"Mortgage payment\"\n                    value={mortgagePayment}\n                    formatter={val => `$${val.toFixed(2)}`}\n                  />\n                  <Entry\n                    label=\"Time remaining on mortgage\"\n                    value={remainingMortgagePayments}\n                    formatter={val => `${(val / 12).toFixed(1)} years`}\n                  />\n                </Fragment>\n              )}\n            </CollapsibleSection>\n            <ProjectionsSlider\n              name={adjustingName}\n              label={get([adjustingName, \"label\"])(adjustableEntriesByName)}\n              onReset={this.handleResetCalculation}\n              onChange={this.handleChange}\n              onBlur={this.handleClearSelection}\n              formatter={get([adjustingName, \"formatter\"])(\n                adjustableEntriesByName\n              )}\n              value={this.state[adjustingName]}\n              rangeOptions={nameToRangeOptions[adjustingName]}\n            />\n          </Fragment>\n        }\n      />\n    );\n  }\n}\n\nconst AdjustableEntry = ({\n  label,\n  value,\n  formatter,\n  name,\n  onSelect,\n  isAdjusting\n}) => (\n  <Entry\n    label={label}\n    value={value}\n    formatter={formatter}\n    onClick={() => {\n      onSelect(name);\n    }}\n    highlightValue={isAdjusting}\n    isAdjustable\n  />\n);\n\nconst Entry = ({\n  label,\n  value,\n  onClick,\n  highlightValue,\n  isAdjustable,\n  formatter = a => a\n}) => (\n  <div\n    style={{\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      padding: \"2px 0\"\n    }}\n  >\n    {label}:\n    <div style={{ display: \"flex\", alignItems: \"center\" }} onClick={onClick}>\n      <strong\n        style={{\n          backgroundColor: highlightValue ? selectedPlotBandColor : null,\n          padding: isAdjustable && \"0 4px\",\n          borderRadius: 2\n        }}\n      >\n        {formatter(value)}\n      </strong>\n      {isAdjustable && <Icon icon=\"pencil\" faded style={{ marginLeft: 4 }} />}\n    </div>\n  </div>\n);\n\nexport default ProjectionsPage;\n","import moment from \"moment\";\nimport add from \"lodash/fp/add\";\nimport compose from \"lodash/fp/compose\";\nimport concat from \"lodash/fp/concat\";\nimport filter from \"lodash/fp/filter\";\nimport find from \"lodash/fp/find\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport head from \"lodash/fp/head\";\nimport identity from \"lodash/fp/identity\";\nimport includes from \"lodash/fp/includes\";\nimport keys from \"lodash/fp/keys\";\nimport last from \"lodash/fp/last\";\nimport map from \"lodash/fp/map\";\nimport matches from \"lodash/fp/matches\";\nimport multiply from \"lodash/fp/multiply\";\nimport prop from \"lodash/fp/prop\";\nimport range from \"lodash/fp/range\";\nimport reduce from \"lodash/fp/reduce\";\nimport reject from \"lodash/fp/reject\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport takeRightWhile from \"lodash/fp/takeRightWhile\";\nimport uniq from \"lodash/fp/uniq\";\nimport { getTransactionMonth } from \"./budgetUtils\";\n\nexport const getMortgageRate = (\n  { accounts, transactions: allTransactions },\n  mortgageAccounts\n) => {\n  const mortgageAccount = find(account => mortgageAccounts[account.id])(\n    accounts\n  );\n\n  if (!mortgageAccount) {\n    return null;\n  }\n\n  const transactions = compose([\n    sortBy(\"date\"),\n    filter(matches({ account_id: mortgageAccount.id }))\n  ])(allTransactions);\n  const lastMonth = compose([t => t.date.slice(0, 7), last])(transactions);\n  const lastMonthTransactions = takeRightWhile(\n    t => t.date.slice(0, 7) === lastMonth\n  )(transactions);\n\n  const P = -compose([\n    sumBy(\"amount\"),\n    takeWhile(t => t.date.slice(0, 7) !== lastMonth)\n  ])(transactions);\n  const P1 = P - sumBy(\"amount\")(lastMonthTransactions);\n  const c = compose([prop(\"amount\"), find(prop(\"transfer_account_id\"))])(\n    lastMonthTransactions\n  );\n  const r = (P1 + c) / P - 1;\n  const N = -Math.log(1 - (r * P) / c) / Math.log(1 + r);\n\n  const rate = r * 12;\n  const paymentsLeft = N - 1;\n\n  const projection = map(n => (1 + r) ** n * P - (((1 + r) ** n - 1) / r) * c)(\n    range(1, N)\n  );\n\n  return {\n    rate,\n    mortgagePayment: c,\n    paymentsLeft,\n    principalProjection: projection\n  };\n};\n\nexport const getCurrentInvestments = (\n  { accounts, transactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  return compose([\n    sumBy(\"amount\"),\n    filter(({ account_id: accountId }) =>\n      includes(accountId)(investmentAccountIds)\n    )\n  ])(transactions);\n};\n\nexport const getReturnOnInvestments = (\n  { accounts, payees, transactions: allTransactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const transactionsByMonth = compose([\n    groupBy(tr => tr.date.slice(0, 7)),\n    reject(t => includes(t.transfer_account_id)(investmentAccountIds)), // remove transfers between investment accounts\n    filter(t => includes(t.account_id)(investmentAccountIds))\n  ])(allTransactions);\n\n  let startForMonth = 0;\n  const returnRates = [];\n\n  const months = compose([sortBy(identity), keys])(transactionsByMonth);\n  map(month => transactionsByMonth[month])(months).forEach(trs => {\n    const contributions = compose([\n      sumBy(\"amount\"),\n      filter(prop(\"transfer_account_id\"))\n    ])(trs);\n    const gains = reject(prop(\"transfer_account_id\"))(trs);\n    const returns = sumBy(\"amount\")(gains);\n\n    if (startForMonth && gains.length) {\n      returnRates.push(returns / (startForMonth + 0.5 * contributions));\n    }\n\n    startForMonth += returns + contributions;\n  });\n\n  const totalReturn = compose([reduce(multiply, 1), map(add(1))])(returnRates);\n  const numMonths = returnRates.length;\n\n  return totalReturn ** (12 / numMonths) - 1;\n};\n\nexport const getAverageContribution = (\n  { accounts, transactions: allTransactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const contributions = compose([\n    filter(\n      ({ transfer_account_id: transferAccountId }) =>\n        transferAccountId && !includes(transferAccountId)(investmentAccountIds)\n    ),\n    filter(({ account_id: accountId }) =>\n      includes(accountId)(investmentAccountIds)\n    )\n  ])(allTransactions);\n\n  const months = compose([\n    sortBy(identity),\n    uniq,\n    map(d => d.slice(0, 7)),\n    map(\"date\")\n  ])(contributions);\n\n  const totalContributions = sumBy(\"amount\")(contributions);\n  const numMonths =\n    moment(last(months)).diff(moment(head(months)), \"months\") + 1;\n\n  return totalContributions / numMonths;\n};\n\nexport const getAverageExpensesWithoutMortgage = (\n  { transactions, accounts, payees, categoriesById, categoryGroupsById },\n  investmentAccounts,\n  mortgageAccounts\n) => {\n  const startingBalanceId = compose([\n    prop(\"id\"),\n    find(matches({ name: \"Starting Balance\" }))\n  ])(payees);\n  const months = compose([sortBy(identity), uniq, map(getTransactionMonth)])(\n    transactions\n  );\n\n  const mortgageAccountIds = compose([\n    filter(id => mortgageAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const totalExpenses = compose([\n    sumBy(\"amount\"),\n    reject(\n      tr =>\n        tr.amount > 0 &&\n        !tr.transfer_account_id &&\n        (!tr.category_id ||\n          !categoryGroupsById[categoriesById[tr.category_id].category_group_id])\n    ),\n    reject(tr =>\n      includes(tr.transfer_account_id)(\n        concat(mortgageAccountIds, investmentAccountIds)\n      )\n    ),\n    reject(tr =>\n      includes(tr.account_id)(concat(mortgageAccountIds, investmentAccountIds))\n    ),\n    reject(tr =>\n      includes(getTransactionMonth(tr))([head(months), last(months)])\n    ),\n    reject(matches({ payee_id: startingBalanceId }))\n  ])(transactions);\n\n  return -totalExpenses / (months.length - 2);\n};\n\nexport const getProjection = ({\n  numMonths,\n  returnOnInvestments,\n  averageContribution,\n  currentInvestments\n}) => {\n  const monthlyRate = (1 + returnOnInvestments) ** (1 / 12) - 1;\n  let amount = currentInvestments;\n  let projection = [];\n\n  do {\n    projection.push(amount);\n    amount +=\n      averageContribution + (amount + 0.5 * averageContribution) * monthlyRate;\n  } while (projection.length < numMonths);\n\n  return projection;\n};\n\nexport const getProjectionWithRetirement = ({\n  numMonths,\n  returnOnInvestments,\n  averageContribution,\n  currentInvestments,\n  monthsBeforeRetirement,\n  monthlyExpenses,\n  retirementReturns,\n  retirementTaxRate,\n  remainingMortgagePayments,\n  mortgagePayment\n}) => {\n  const monthlyRate = (1 + returnOnInvestments) ** (1 / 12) - 1;\n  const monthlyRetirementReturn = (1 + retirementReturns) ** (1 / 12) - 1;\n  let amount = currentInvestments;\n  let projection = [];\n\n  do {\n    projection.push(amount);\n    if (projection.length < monthsBeforeRetirement) {\n      amount +=\n        averageContribution +\n        (amount + 0.5 * averageContribution) * monthlyRate;\n    } else {\n      amount +=\n        amount * monthlyRetirementReturn * (1 - retirementTaxRate) -\n        monthlyExpenses;\n      if (projection.length < remainingMortgagePayments) {\n        amount -= mortgagePayment;\n      }\n    }\n  } while (projection.length < numMonths);\n\n  return projection;\n};\n","import styled from \"styled-components\";\n\nconst Section = styled.div`\n  margin: ${props => (props.top ? \"0\" : \"3px\")};\n  padding: ${props =>\n    props.noPadding ? \"0\" : props.top ? \"15px 23px\" : \"15px 20px\"};\n  background-color: #fff;\n  border: 1px solid #e5e5e5;\n  border-width: ${props => (props.top ? \"0 0 1px\" : \"1px\")};\n  border-radius: 2px;\n`;\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport omit from \"lodash/fp/omit\";\nimport ToggleWithLabel from \"./ToggleWithLabel\";\n\nconst AccountsSelectionForm = ({ accounts, value, onChange }) =>\n  accounts.map(({ id, name }) => (\n    <ToggleWithLabel\n      key={id}\n      checked={!!value[id]}\n      name={id}\n      onChange={evt => {\n        const { name, checked } = evt.target;\n\n        onChange(\n          checked\n            ? {\n                ...value,\n                [name]: true\n              }\n            : omit(name)(value)\n        );\n      }}\n      label={name}\n    />\n  ));\n\nAccountsSelectionForm.propTypes = {\n  accounts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  value: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default AccountsSelectionForm;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { MinorText, SecondaryText, StrongText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\nimport EmptyText from \"./EmptyText\";\nimport Modal from \"./Modal\";\nimport AccountsSelectionForm from \"./AccountsSelectionForm\";\nimport { useFlagState } from \"../commonHooks\";\n\nconst SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst SettingsInvestmentAccounts = ({ budget, investmentAccounts, onUpdateAccounts }) => {\n  const [\n    investmentModalOpen,\n    closeInvestmentModal,\n    openInvestmentModal\n  ] = useFlagState(false);\n\n  const potentialInvestmentAccounts = budget.accounts.filter(\n    account => account.type === \"otherAsset\" && !account.on_budget\n  );\n  const investmentAccountsList = budget.accounts.filter(\n    ({ id }) => investmentAccounts[id]\n  );\n\n  return (\n    <Fragment>\n      <SectionHeader>\n        <StrongText>Investment Accounts</StrongText>\n        <span onClick={openInvestmentModal}>\n          <Icon icon=\"pencil\" />\n        </span>\n      </SectionHeader>\n      {investmentAccountsList.length ? (\n        investmentAccountsList.map(({ id, name }) => (\n          <SecondaryText key={id}>{name}</SecondaryText>\n        ))\n      ) : (\n        <EmptyText>No accounts marked as investment</EmptyText>\n      )}\n      <MinorText style={{ marginTop: 10 }}>\n        Transfers to investment accounts are not counted as spending since it's\n        assumed it's for retirement or some other savings goal.\n      </MinorText>\n      <Modal\n        open={investmentModalOpen}\n        onClose={closeInvestmentModal}\n        title=\"Investment Accounts\"\n      >\n        <AccountsSelectionForm\n          accounts={potentialInvestmentAccounts}\n          value={investmentAccounts}\n          onChange={accountsObject => {\n            onUpdateAccounts({\n              type: \"investment\",\n              value: accountsObject\n            });\n          }}\n        />\n      </Modal>\n    </Fragment>\n  );\n};\n\nSettingsInvestmentAccounts.propTypes = {\n  budget: PropTypes.shape({\n    accounts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired,\n        on_budget: PropTypes.bool.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onUpdateAccounts: PropTypes.func.isRequired,\n};\n\nexport default SettingsInvestmentAccounts;\n","import React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { MinorText, SecondaryText, StrongText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\nimport EmptyText from \"./EmptyText\";\nimport Modal from \"./Modal\";\nimport AccountsSelectionForm from \"./AccountsSelectionForm\";\nimport { useFlagState } from \"../commonHooks\";\n\nconst SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst SettingsMortgageAccounts = ({\n  budget,\n  mortgageAccounts,\n  onUpdateAccounts\n}) => {\n  const [\n    mortgageModalOpen,\n    closeMortgageModal,\n    openMortgageModal\n  ] = useFlagState(false);\n\n  const potentialMortageAccounts = budget.accounts.filter(\n    account => account.type === \"otherLiability\" && !account.on_budget\n  );\n  const mortgageAccountList = budget.accounts.filter(\n    ({ id }) => mortgageAccounts[id]\n  );\n\n  return (\n    <Fragment>\n      <SectionHeader>\n        <StrongText>Mortgage Accounts</StrongText>\n        <span onClick={openMortgageModal}>\n          <Icon icon=\"pencil\" />\n        </span>\n      </SectionHeader>\n      {mortgageAccountList.length ? (\n        mortgageAccountList.map(({ id, name }) => (\n          <SecondaryText key={id}>{name}</SecondaryText>\n        ))\n      ) : (\n        <EmptyText>No accounts marked as mortgage</EmptyText>\n      )}\n      <MinorText style={{ marginTop: 10 }}>\n        Mortgage accounts are used in the retirement calculator since it's a\n        significant expense you won't have in your retirement presumably.\n      </MinorText>\n      <Modal\n        open={mortgageModalOpen}\n        onClose={closeMortgageModal}\n        title=\"Mortgage Account\"\n      >\n        <AccountsSelectionForm\n          accounts={potentialMortageAccounts}\n          value={mortgageAccounts}\n          onChange={accountsObject => {\n            onUpdateAccounts({\n              type: \"mortgage\",\n              value: accountsObject\n            });\n          }}\n        />\n      </Modal>\n    </Fragment>\n  );\n};\n\nSettingsMortgageAccounts.propTypes = {\n  budget: PropTypes.shape({\n    accounts: PropTypes.arrayOf(\n      PropTypes.shape({\n        type: PropTypes.string.isRequired,\n        on_budget: PropTypes.bool.isRequired,\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onUpdateAccounts: PropTypes.func.isRequired\n};\n\nexport default SettingsMortgageAccounts;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"./Section\";\nimport PageLayout from \"./PageLayout\";\nimport SettingsInvestmentAccounts from \"./SettingsInvestmentAccounts\";\nimport SettingsMortgageAccounts from \"./SettingsMortgageAccounts\";\n\nconst Space = styled.div`\n  height: 20px;\n`;\n\nconst SettingsPage = ({\n  budget,\n  historyAction,\n  investmentAccounts,\n  location,\n  mortgageAccounts,\n  sidebarTrigger,\n  title,\n  onUpdateAccounts\n}) => {\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <Section>\n            <SettingsInvestmentAccounts\n              budget={budget}\n              investmentAccounts={investmentAccounts}\n              onUpdateAccounts={onUpdateAccounts}\n            />\n            <Space />\n            <SettingsMortgageAccounts\n              budget={budget}\n              mortgageAccounts={mortgageAccounts}\n              onUpdateAccounts={onUpdateAccounts}\n            />\n          </Section>\n        </Fragment>\n      }\n    />\n  );\n};\n\nSettingsPage.propTypes = {\n  budget: PropTypes.shape({\n    accounts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  location: PropTypes.string.isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  onUpdateAccounts: PropTypes.func.isRequired\n};\n\nexport default SettingsPage;\n","import React, { memo } from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport moment from \"moment\";\nimport pages, { makeLink } from \"../pages\";\nimport CurrentMonthPage from \"./CurrentMonthPage\";\nimport IncomePage from \"./IncomePage\";\nimport CurrentMonthGroupPage from \"./CurrentMonthGroupPage\";\nimport CurrentMonthCategoryPage from \"./CurrentMonthCategoryPage\";\nimport GroupsPage from \"./GroupsPage\";\nimport GroupPage from \"./GroupPage\";\nimport { Link } from \"react-router-dom\";\nimport CategoriesState from \"./CategoriesState\";\nimport { notAny, simpleMemoize } from \"../dataUtils\";\nimport {\n  getFirstMonth,\n  getTransactionMonth,\n  isIncome,\n  isStartingBalanceOrReconciliation,\n  isTransfer\n} from \"../budgetUtils\";\nimport { useMonthExclusions } from \"../commonHooks\";\nimport CategoryPage from \"./CategoryPage\";\nimport CategoryPayeePage from \"./CategoryPayeePage\";\nimport IncomeVsExpensesPage from \"./IncomeVsExpensesPage\";\nimport NetWorthPage from \"./NetWorthPage\";\nimport InvestmentsPage from \"./InvestmentsPage\";\nimport ProjectionsPage from \"./ProjectionsPage\";\nimport SettingsPage from \"./SettingsPage\";\n\nconst getFilteredTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) => {\n    const firstMonth = getFirstMonth(budget);\n    const lastMonth = moment().format(\"YYYY-MM\");\n    return budget.transactions.filter(\n      notAny([\n        isStartingBalanceOrReconciliation(budget),\n        isTransfer(investmentAccounts),\n        transaction =>\n          excludeFirstMonth && getTransactionMonth(transaction) === firstMonth,\n        transaction =>\n          excludeLastMonth && getTransactionMonth(transaction) === lastMonth\n      ])\n    );\n  }\n);\n\nconst getFilteredSpendingTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) =>\n    getFilteredTransactions(\n      budget,\n      investmentAccounts,\n      excludeFirstMonth,\n      excludeLastMonth\n    ).filter(transaction => !isIncome(budget)(transaction))\n);\n\nconst PageContent = props => {\n  const {\n    budget,\n    currentMonth,\n    historyAction,\n    investmentAccounts,\n    location,\n    mortgageAccounts,\n    sidebarTrigger,\n    onUpdateAccounts\n  } = props;\n  const {\n    excludeFirstMonth,\n    excludeLastMonth,\n    months,\n    onSetExclusion\n  } = useMonthExclusions(budget);\n\n  if (!budget) {\n    return null;\n  }\n\n  return (\n    <Switch>\n      <Route\n        path={pages.currentMonth.path}\n        exact\n        render={() => (\n          <CurrentMonthPage\n            budget={budget}\n            currentMonth={currentMonth}\n            investmentAccounts={investmentAccounts}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.currentMonth.title}\n          />\n        )}\n      />\n      <Route\n        path={pages.currentMonthGroup.path}\n        exact\n        render={({ match }) => (\n          <CurrentMonthGroupPage\n            budget={budget}\n            categoryGroupId={match.params.categoryGroupId}\n            currentMonth={currentMonth}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.currentMonthGroup.title(match.params, budget)}\n          />\n        )}\n      />\n      <Route\n        path={pages.currentMonthCategory.path}\n        exact\n        render={({ match }) => (\n          <CurrentMonthCategoryPage\n            categoryId={match.params.categoryId}\n            budget={budget}\n            currentMonth={currentMonth}\n            categoryGroupId={match.params.categoryGroupId}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.currentMonthCategory.title(match.params, budget)}\n          />\n        )}\n      />\n      <Route\n        path={pages.income.path}\n        exact\n        render={() => (\n          <IncomePage\n            investmentAccounts={investmentAccounts}\n            budget={budget}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.income.title}\n          />\n        )}\n      />\n      <Route\n        path={pages.incomeVsExpenses.path}\n        exact\n        render={() => {\n          const filteredTransactions = getFilteredTransactions(\n            props.budget,\n            props.investmentAccounts,\n            excludeFirstMonth,\n            excludeLastMonth\n          );\n\n          return (\n            <IncomeVsExpensesPage\n              budget={budget}\n              excludeFirstMonth={excludeFirstMonth}\n              excludeLastMonth={excludeLastMonth}\n              investmentAccounts={investmentAccounts}\n              historyAction={historyAction}\n              location={location}\n              sidebarTrigger={sidebarTrigger}\n              title={pages.incomeVsExpenses.title}\n              transactions={filteredTransactions}\n              onSetExclusion={onSetExclusion}\n            />\n          );\n        }}\n      />\n      <Route\n        path={pages.netWorth.path}\n        exact\n        render={() => (\n          <NetWorthPage\n            budget={budget}\n            historyAction={historyAction}\n            investmentAccounts={investmentAccounts}\n            location={location}\n            mortgageAccounts={mortgageAccounts}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.netWorth.title}\n          />\n        )}\n      />\n      <Route\n        path={pages.investments.path}\n        exact\n        render={() => (\n          <InvestmentsPage\n            budget={budget}\n            investmentAccounts={investmentAccounts}\n            title={pages.investments.title}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n          />\n        )}\n      />\n      <Route\n        path={pages.projections.path}\n        exact\n        render={() => (\n          <ProjectionsPage\n            budget={budget}\n            investmentAccounts={investmentAccounts}\n            mortgageAccounts={mortgageAccounts}\n            title={pages.projections.title}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n          />\n        )}\n      />\n      <Route\n        path={pages.settings.path}\n        exact\n        render={() => (\n          <SettingsPage\n            budget={budget}\n            historyAction={historyAction}\n            investmentAccounts={investmentAccounts}\n            location={location}\n            mortgageAccounts={mortgageAccounts}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.settings.title}\n            onUpdateAccounts={onUpdateAccounts}\n          />\n        )}\n      />\n      <Route\n        path={pages.groups.path}\n        render={() => {\n          const filteredTransactions = getFilteredSpendingTransactions(\n            budget,\n            investmentAccounts,\n            excludeFirstMonth,\n            excludeLastMonth\n          );\n\n          return (\n            <CategoriesState action={historyAction} location={location}>\n              {({\n                selectedMonth,\n                selectedGroupId,\n                selectedCategoryId,\n                selectedPayeeId,\n                onSelectMonth,\n                onSelectGroup,\n                onSelectCategory,\n                onSelectPayee\n              }) => (\n                <Switch>\n                  <Route\n                    path={pages.groups.path}\n                    exact\n                    render={() => (\n                      <GroupsPage\n                        budget={budget}\n                        excludeFirstMonth={excludeFirstMonth}\n                        excludeLastMonth={excludeLastMonth}\n                        historyAction={historyAction}\n                        location={location}\n                        months={months}\n                        selectedGroupId={selectedGroupId}\n                        selectedMonth={selectedMonth}\n                        sidebarTrigger={sidebarTrigger}\n                        title={pages.groups.title}\n                        transactions={filteredTransactions}\n                        onSelectGroup={onSelectGroup}\n                        onSetExclusion={onSetExclusion}\n                        onSelectMonth={onSelectMonth}\n                      />\n                    )}\n                  />\n                  <Route\n                    path={pages.group.path}\n                    exact\n                    render={({ match }) => (\n                      <GroupPage\n                        budget={budget}\n                        categoryGroupId={match.params.categoryGroupId}\n                        excludeFirstMonth={excludeFirstMonth}\n                        excludeLastMonth={excludeLastMonth}\n                        historyAction={historyAction}\n                        location={location}\n                        months={months}\n                        selectedMonth={selectedMonth}\n                        selectedCategoryId={selectedCategoryId}\n                        sidebarTrigger={sidebarTrigger}\n                        title={pages.group.title(match.params, budget)}\n                        transactions={filteredTransactions}\n                        onSelectCategory={onSelectCategory}\n                        onSelectMonth={onSelectMonth}\n                        onSetExclusion={onSetExclusion}\n                      />\n                    )}\n                  />\n                  <Route\n                    path={pages.category.path}\n                    exact\n                    render={({ match }) => (\n                      <CategoryPage\n                        budget={budget}\n                        categoryId={match.params.categoryId}\n                        excludeFirstMonth={excludeFirstMonth}\n                        excludeLastMonth={excludeLastMonth}\n                        historyAction={historyAction}\n                        location={location}\n                        months={months}\n                        selectedMonth={selectedMonth}\n                        selectedPayeeId={selectedPayeeId}\n                        sidebarTrigger={sidebarTrigger}\n                        title={pages.category.title(match.params, budget)}\n                        transactions={filteredTransactions}\n                        onSetExclusion={onSetExclusion}\n                        onSelectMonth={onSelectMonth}\n                        onSelectPayee={onSelectPayee}\n                      />\n                    )}\n                  />\n                  <Route\n                    path={pages.categoryPayee.path}\n                    exact\n                    render={({ match }) => (\n                      <CategoryPayeePage\n                        budget={budget}\n                        categoryId={match.params.categoryId}\n                        excludeFirstMonth={excludeFirstMonth}\n                        excludeLastMonth={excludeLastMonth}\n                        historyAction={historyAction}\n                        location={location}\n                        months={months}\n                        payeeId={match.params.payeeId}\n                        selectedMonth={selectedMonth}\n                        sidebarTrigger={sidebarTrigger}\n                        title={pages.categoryPayee.title(match.params, budget)}\n                        transactions={filteredTransactions}\n                        onSetExclusion={onSetExclusion}\n                        onSelectMonth={onSelectMonth}\n                      />\n                    )}\n                  />\n                </Switch>\n              )}\n            </CategoriesState>\n          );\n        }}\n      />\n      <Route\n        render={() => (\n          <div style={{ padding: 20 }}>\n            <Link\n              to={makeLink(pages.currentMonth.path, {\n                budgetId: budget.id\n              })}\n            >\n              Return to {pages.currentMonth.title}\n            </Link>\n          </div>\n        )}\n      />\n    </Switch>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) =>\n  [\n    \"budget\",\n    \"currentMonth\",\n    \"historyAction\",\n    \"investmentAccounts\",\n    \"location\",\n    \"mortgageAccounts\"\n  ].every(key => prevProps[key] === nextProps[key]);\n\nexport default memo(PageContent, areEqual);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Section from \"./Section\";\nimport { PageTitle, StrongText, SecondaryText } from \"./typeComponents\";\nimport { PrimaryButton } from \"./Button\";\n\nconst Unauthorized = ({ onAuthorize }) => (\n  <Section>\n    <PageTitle>Budget Reports</PageTitle>\n    <div style={{ marginBottom: 10 }}>Get various insights from your YNAB account.</div>\n    <PrimaryButton onClick={onAuthorize}>\n      Authorize YNAB\n    </PrimaryButton>\n    <StrongText style={{ marginTop: 30 }}>Privacy Policy</StrongText>\n    <SecondaryText>\n      This website does not store any information from you or your YNAB account\n      on it's server. All data retrieved from the YNAB API is stored only in\n      your browser's local storage and is never transmitted to any other location or\n      third-party.\n    </SecondaryText>\n  </Section>\n);\n\nUnauthorized.propTypes = {\n  onAuthorize: PropTypes.func.isRequired\n};\n\nexport default Unauthorized;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 10px 20px;\n`;\n\n\nconst ErrorPage = ({ message }) => (\n  <Container>\n    <h3>{message}</h3>\n    <div>\n      <Link to=\"/\">Home</Link>\n    </div>\n  </Container>\n);\n\nErrorPage.propTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default ErrorPage;\n","import React from \"react\";\nimport ErrorPage from \"./ErrorPage\";\n\nconst NotFound = () => <ErrorPage message=\"Page not found\" />;\n\nexport default NotFound;\n","/* global Rollbar */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ErrorPage from \"./ErrorPage\";\n\nclass ErrorBoundary extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    message: PropTypes.string\n  };\n\n  static defaultProps = {\n    message: \"Something went wrong\"\n  };\n\n  state = { hasError: false };\n\n  componentDidCatch(error) {\n    Rollbar.error(error);\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorPage message={this.props.message} />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport pages, { makeLink } from \"../pages\";\nimport { StrongText } from \"./typeComponents\";\nimport Section from \"./Section\";\nimport Loading from \"./Loading\";\n\nclass Budgets extends Component {\n  static propTypes = {\n    budgets: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    budgetsLoaded: PropTypes.bool.isRequired,\n    onRequestBudgets: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    if (!this.props.budgetsLoaded) {\n      this.props.onRequestBudgets();\n    }\n  }\n\n  render() {\n    const { budgets, budgetsLoaded } = this.props;\n\n    if (!budgetsLoaded) {\n      return <Loading />;\n    }\n\n    return (\n      <Section>\n        <StrongText>Select a budget:</StrongText>\n        {budgets.map(({ id, name }) => (\n          <div key={id}>\n            <Link to={makeLink(pages.currentMonth.path, { budgetId: id })}>\n              {name}\n            </Link>\n          </div>\n        ))}\n      </Section>\n    );\n  }\n}\n\nexport default Budgets;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Switch } from \"react-router-dom\";\nimport moment from \"moment\";\nimport get from \"lodash/fp/get\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport {\n  getBudgets,\n  getUpdatedBudget,\n  AUTHORIZE_URL,\n  setLastLocation\n} from \"../ynabRepo\";\nimport { setSetting, getSetting } from \"../uiRepo\";\nimport PageWrapper from \"./PageWrapper\";\nimport PageContent from \"./PageContent\";\nimport Unauthorized from \"./Unauthorized\";\nimport NotFound from \"./NotFound\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport Budgets from \"./Budgets\";\nimport CurrencyContext from \"./CurrencyContext\";\n\nclass App extends Component {\n  static propTypes = {\n    hasToken: PropTypes.bool.isRequired\n  };\n\n  state = {\n    authorized: true,\n    budgetsLoaded: false,\n    budgetIds: [],\n    budgets: {},\n    budgetDetails: {},\n    currentMonth: moment().format(\"YYYY-MM\")\n  };\n\n  handleRequestBudgets = callback => {\n    getBudgets().then(({ budgets }) => {\n      this.setState(\n        {\n          budgetsLoaded: true,\n          budgetIds: budgets.map(b => b.id),\n          budgets: keyBy(\"id\")(budgets)\n        },\n        callback\n      );\n    });\n  };\n\n  handleRequestBudget = id => {\n    getUpdatedBudget(id).then(({ budget, authorized }) => {\n      this.setState(state => ({\n        ...state,\n        authorized,\n        budgetDetails: {\n          ...state.budgetDetails,\n          [id]: budget\n        }\n      }));\n    });\n  };\n\n  handleAuthorize = () => {\n    setLastLocation();\n    window.location.replace(AUTHORIZE_URL);\n  };\n\n  render() {\n    const { hasToken } = this.props;\n    const {\n      authorized,\n      budgetsLoaded,\n      budgetIds,\n      budgets,\n      budgetDetails,\n      currentMonth\n    } = this.state;\n\n    if (!hasToken) {\n      return <Unauthorized onAuthorize={this.handleAuthorize} />;\n    }\n\n    return (\n      <ErrorBoundary>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <Budgets\n                budgets={budgetIds.map(id => budgets[id])}\n                budgetsLoaded={budgetsLoaded}\n                onRequestBudgets={this.handleRequestBudgets}\n              />\n            )}\n          />\n          <Route\n            path=\"/budgets/:budgetId\"\n            render={({ match, history, location }) => {\n              const { budgetId } = match.params;\n              const budget = budgetDetails[budgetId];\n\n              return (\n                <PageWrapper\n                  authorized={authorized}\n                  budgetId={budgetId}\n                  budgetLoaded={!!budget}\n                  hasMultipleBudgets={budgetIds.length > 1}\n                  location={location.pathname}\n                  onAuthorize={this.handleAuthorize}\n                  onRequestBudget={this.handleRequestBudget}\n                >\n                  {({ sidebarTrigger }) => (\n                    <CurrencyContext.Provider\n                      value={get(\"currencyFormat\")(budget)}\n                    >\n                      <PageContent\n                        sidebarTrigger={sidebarTrigger}\n                        historyAction={history.action}\n                        location={location.pathname}\n                        budget={budget}\n                        currentMonth={currentMonth}\n                        investmentAccounts={getSetting(\n                          \"investmentAccounts\",\n                          budgetId\n                        )}\n                        mortgageAccounts={getSetting(\n                          \"mortgageAccounts\",\n                          budgetId\n                        )}\n                        onUpdateAccounts={({ type, value }) => {\n                          if (type === \"investment\") {\n                            setSetting(\"investmentAccounts\", budgetId, value);\n                          }\n                          if (type === \"mortgage\") {\n                            setSetting(\"mortgageAccounts\", budgetId, value);\n                          }\n                          this.forceUpdate();\n                        }}\n                      />\n                    </CurrencyContext.Provider>\n                  )}\n                </PageWrapper>\n              );\n            }}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { getAuthorizeToken, initializeYnabApi } from \"./ynabRepo\";\nimport App from \"./components/App\";\n\nconst token = getAuthorizeToken();\n\nif (token) {\n  initializeYnabApi(token);\n}\n\nReactDOM.render(\n  <HashRouter>\n    <App hasToken={!!token} />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}