{"version":3,"sources":["localstorageUtils.js","uiRepo.js","dataUtils.js","repoUtils.js","localBudgetCache.js","ynabRepo.js","components/typeComponents.js","components/Loading.js","components/EnsureBudgetLoaded.js","styleVariables.js","components/Button.js","components/Icon.js","pages.js","components/SidebarMenuContent.js","components/SidebarMenu.js","components/PageWrapper.js","budgetUtils.js","commonHooks.js","components/Scroller.js","components/PageBreadcrumbs.js","components/PageActions.js","components/PageLayout.js","components/CollapsibleSection.js","components/Chart.js","components/CurrencyContext.js","components/Amount.js","components/ChartNumbers.js","components/SpendingChart.js","components/Modal.js","components/ChartSettingsModal.js","components/DayByDaySection.js","components/ListItem.js","components/EmptyText.js","components/NoTransactions.js","components/LabelWithMinorText.js","components/LabelWithTransactionCount.js","components/AmountWithPercentage.js","components/SeeAll.js","components/GenericEntitiesSection.js","components/DateSummaryTransaction.js","components/ToggleNode.js","components/DateSummary.js","components/RecentSpending.js","components/CurrentMonthPage.js","components/MonthlyChart.js","components/Toggle.js","components/ToggleWithLabel.js","components/MonthByMonthSettingsModal.js","components/MonthByMonthSection.js","components/IncomePage.js","components/Transaction.js","components/TransactionsSection.js","components/CurrentMonthGroupPage.js","components/CurrentMonthCategoryPage.js","components/GroupsPage.js","components/TransactionsByMonthSection.js","components/GroupPage.js","components/CategoriesState.js","components/CategoryPage.js","components/CategoryPayeePage.js","components/IncomeVsExpensesChart.js","components/BreakdownNode.js","components/Breakdown.js","components/ExpensesBreakdown.js","components/IncomeBreakdown.js","components/Breakdowns.js","components/IncomeVsExpensesPage.js","components/NetWorthChart.js","components/NetWorthAccounts.js","components/NetWorthPage.js","components/InvestmentsPage.js","components/ProjectionsChart.js","components/ClickOff.js","components/ProjectionsSlider.js","components/ProjectionsPage.js","projectionUtils.js","components/Section.js","components/AccountsSelectionForm.js","components/SettingsPage.js","components/PageContent.js","components/Unauthorized.js","components/ErrorPage.js","components/NotFound.js","components/ErrorBoundary.js","components/Budgets.js","components/App.js","index.js"],"names":["cache","getStorage","key","raw","localStorage","getItem","parsed","JSON","parse","setStorage","obj","setItem","stringify","e","SETTINGS","excludeFirstMonth","localStorageKey","default","excludeLastMonth","investmentAccounts","lastUpdated","mortgageAccounts","netWorthHiddenAccounts","spendingMonthsToCompare","trendsShowAverage","getSetting","settingsKey","budgetId","setting","Error","get","setSetting","value","previousSetting","Object","objectSpread","defineProperty","groupBy","func","arr","grouped","forEach","push","groupByProp","keyByProp","reduce","acc","curr","sumByProp","simpleMemoize","lastArgs","lastResult","_len","arguments","length","args","Array","_key","every","index","apply","notAny","predicates","arg","predicate","formatCurrency","utils","convertMilliUnitsToCurrencyAmount","GROUPS_TO_HIDE","sanitizeBudget","budget","transactionIdsFromSub","uniq","subtransactions","map","transaction","transaction_id","categoryGroups","category_groups","filter","group","includes","name","categories","category","deleted","activity","balance","budgeted","categoriesById","earliestDate","moment","subtract","MAX_MONTHS_TO_SHOW","format","currencyFormat","symbol","currency_format","currency_symbol","omit","accountsById","accounts","categoryGroupsById","payeesById","payees","months","sortBy","transactions","compose","amount","category_id","flatMap","id","subs","sub","matchesProperty","reverse","dropWhile","date","applyDeltas","deltas","undefined","updater","prev","exists","newArr","item","concat","upsertBy","arraysToUpdate","cachedDetails","getAllBudgetDetails","setBudgetDetails","_ref","server_knowledge","details","newDetails","AUTHORIZE_URL","api","getBudgets","budgets","then","data","catch","matches","error","message","removeItem","getBudget","getBudgetById","_ref2","valueOf","authorized","getUpdatedBudget","budgetDetails","getBudgetDetails","_ref3","mergeBudgets","setLastLocation","window","location","hash","PageTitle","styled","div","_templateObject","LargeNumber","_templateObject2","StrongText","_templateObject3","SecondaryText","_templateObject4","_templateObject5","MinorText","_templateObject6","Loading","react_default","a","createElement","style","height","display","flexDirection","alignItems","justifyContent","EnsureBudgetLoaded","_this$props","this","props","budgetLoaded","onRequestBudget","children","components_Loading","Component","selectedPlotBandColor","tinyColor","lighten","desaturate","toHexString","lighterPrimaryColor","lightPrimaryColor","negativeChartColor","Button","Button_templateObject","PrimaryButton","Button_templateObject2","library","add","faArrowLeft","faBars","faCaretDown","faChevronRight","faCog","faEllipsisV","faEye","faEyeSlash","faPencilAlt","faTimes","ICONS","arrow-left","bars","caret-down","chevron-right","cog","pencil","ellipsis-v","eye","eye-slash","times","PRESET_STYLES","faded","fontWeight","color","fontSize","Icon","icon","other","objectWithoutProperties","react_fontawesome_index_es","assign","makeLink","path","params","replace","_","part","pages","currentMonth","title","currentMonthGroup","categoryGroupId","paramProps","breadcrumbs","currentMonthCategory","categoryId","groups","categoryPayee","payeeId","income","incomeVsExpenses","netWorth","investments","projections","settings","Header","SidebarMenuContent_templateObject","IconWrapper","SidebarMenuContent_templateObject2","StyledLink","NavLink","SidebarMenuContent_templateObject3","active","SidebarMenuContent","hasMultipleBudgets","onCloseSidebar","react","SidebarMenuContent_PureHeader","page","_pages$page","SidebarMenuContent_PureStyledLink","to","matchPath","onClick","PureComponent","PureHeader","_this$props2","components_Icon","react_router_dom","PureStyledLink","SidebarMenu","state","open","handleSetOpen","_this","setState","handleTriggerClick","handleCloseSidebar","react_sidebar_esm","sidebar","components_SidebarMenuContent","onSetOpen","styles","backgroundColor","width","pointerEvents","sidebarTrigger","SidebarMenu_Trigger","Trigger","alignSelf","Container","PageWrapper_templateObject","PageWrapper","onAuthorize","components_EnsureBudgetLoaded","components_SidebarMenu","PageWrapper_Container","padding","flexShrink","borderTop","mapRaw","convert","cap","isStartingBalanceOrReconciliation","startingBalancePayeeId","find","payee","reconciliationPayeeId","payee_id","isIncome","toBeBudgetedId","isTransfer","transfer_account_id","getTransactionMonth","slice","getFirstMonth","getPayeeNodes","divideBy","pick","sanitizeName","trim","useSelectedMonth","_useState","useState","_useState2","slicedToArray","selectedMonth","setSelectedMonth","selectedMonthRef","useRef","current","month","useSelectedEntityId","_useState3","_useState4","selectedEntityId","setSelectedEntityId","entityId","useTrendsShowAverage","_useState5","_useState6","showAverage","setShowAverage","useMonthExclusions","_useState7","_useState8","setExcludeFirstMonth","_useState9","_useState10","setExcludeLastMonth","firstBudgetMonth","firstMonth","lastMonth","m","getMonths","onSetExclusion","exclude","Scroller","toBeScrolled","raf","scrollPositions","scrollTop","prevProps","prevState","snapshot","_this2","action","requestAnimationFrame","cancelAnimationFrame","_this3","ref","el","routes","values","pageKey","PageBreadcrumbs","react_router","exact","render","lineHeight","whiteSpace","match","paddingBottom","PageActions","_ref4","_ref5","_ref6","PageLayout_templateObject","Body","PageLayout_templateObject2","PageLayout","historyAction","fixedContent","content","PageLayout_Header","flexGrow","components_PageBreadcrumbs","components_PageActions","components_Scroller","CollapsibleSection_templateObject","fullWidth","CollapsibleSection_templateObject2","SettingsContainer","CollapsibleSection_templateObject3","CollapsibleSection_templateObject4","CollapsibleSection","actions","hasSettings","noPadding","onClickSettings","expanded","setExpanded","CollapsibleSection_Container","CollapsibleSection_Header","transform","rotate","marginLeft","es","isExpanded","CollapsibleSection_Body","CHART_DEFAULTS","chart","spacing","credits","enabled","legend","text","subtitle","tooltip","xAxis","tickLength","Chart","options","highcharts_react_min_default","highcharts","Highcharts","CurrencyContext","React","createContext","Amount","amountAfterDecimal","positiveIsRed","showCurrencySymbol","components_CurrencyContext","Consumer","nStr","x","split","x1","x2","rgx","test","addCommas","Math","abs","toFixed","defaultProps","ChartNumbers","numbers","alwaysRound","smallNumbers","some","textAlign","marginBottom","label","_ref3$isMoney","isMoney","decimalsToRound","components_Amount","isNumber","DateLabels","SpendingChart_templateObject","getData","transactionsByDate","today","cumulative","range","daysInMonth","numDays","padCharsStart","sumBy","SpendingChart","total","highlightFunction","monthsToCompare","highlightedTransactions","highlightSeries","type","enableMouseTracking","marker","animation","lineWidth","fillOpacity","firstDate","lastDate","lineData","day","firstDayOfWeek","parseInt","plotBands","num","from","comparisonSeries","numMonths","mix","toHex","spent","takeWhile","chartNumbers","components_ChartNumbers","components_Chart","labels","yAxis","visible","endOnTick","startOnTick","series","dashStyle","toConsumableArray","Modal_templateObject","Overlay","Modal_templateObject2","ModalContent","Modal_templateObject3","ensureNextTick","callback","Modal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleTransitionEnd","animationState","document","body","appendChild","removeChild","onClose","shouldShow","createPortal","Modal_Container","opacity","onTransitionEnd","marginTop","ChartSettingsModal","onDecrementMonths","onIncrementMonths","components_Modal","marginRight","components_Button","MAX_MONTHS","DayByDaySection","handleClickSettings","modalOpen","handleCloseModal","handleDecrementMonths","max","saveSetting","handleIncrementMonths","min","_this$state","components_CollapsibleSection","components_SpendingChart","components_ChartSettingsModal","ListItem","ListItem_templateObject","isContinuing","EmptyText","EmptyText_templateObject","NoTransactions","components_EmptyText","LabelWithMinorText","minorText","inLink","bold","overflow","textOverflow","LabelWithTransactionCount","count","selected","showCount","components_LabelWithMinorText","AmountWithPercentage","SeeAll","pluralizedName","showAll","onToggle","mapWithKeys","keyToPluralizedName","category_group_id","GenericEntitiesSection","allMounted","handleToggleShowAll","emptyName","entityKey","entityFunction","entitiesById","linkFunction","limitShowingProp","limitShowing","showAverageToggle","showTransactionCount","onClickEntity","onToggleAverage","_this$state2","entities","LIMIT","topEntities","otherEntities","components_NoTransactions","GenericEntitiesSection_GenericItemLink","components_SeeAll","MaybeLink","GenericItemLink","components_ListItem","components_LabelWithTransactionCount","GenericEntitiesSection_MaybeLink","evt","stopPropagation","components_AmountWithPercentage","StyledListItem","DateSummaryTransaction_templateObject","DateSummaryTransaction","memo","NodeWrapper","ToggleNode_templateObject","isCompact","ToggleNode_templateObject2","ToggleNode","valueRenderer","ToggleNode_IconWrapper","DateSummary_templateObject","DateSummary","onToggleExpanded","DateSummary_Container","components_ToggleNode","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","paddingLeft","components_DateSummaryTransaction","margin","RecentSpending","recentDays","n","startsWith","isAllExpanded","components_DateSummary","CurrentMonthPage","_useSelectedEntityId","_useSelectedEntityId2","selectedGroupId","onSelectGroupId","selectedGroup","transactionsThisMonth","components_PageLayout","components_DayByDaySection","components_RecentSpending","components_GenericEntitiesSection","groupId","MonthlyChart","average","stacked","onSelectMonth","yearLines","d","highlights","zIndex","findIndex","events","click","event","round","plotLines","gridLineColor","plotOptions","stacking","s","valueFunction","borderWidth","states","hover","brightness","Track","Toggle_templateObject","HEIGHT","on","Handle","Toggle_templateObject2","WIDTH","Toggle","ToggleWithLabel_templateObject","Label","ToggleWithLabel_templateObject2","ToggleWithLabel","checked","onChange","ToggleWithLabel_Container","target","components_Toggle","MonthByMonthSettingsModal","components_ToggleWithLabel","MonthByMonthSection","settingsModalOpen","setSettingsModalOpen","selectedMonthTotal","transactionsByMonth","false","highlighted","true","components_MonthlyChart","components_MonthByMonthSettingsModal","getFilteredTransactions","getFilteredIncomeTransactions","IncomePage","_useMonthExclusions","_useSelectedMonth","_useSelectedMonth2","selectedPayeeId","onSelectPayeeId","filteredTransactions","transactionsInSelectedMonth","components_MonthByMonthSection","Transaction","TransactionsSection","components_Transaction","CurrentMonthGroupPage","selectedCategoryId","onSelectCategoryId","allCategories","allTransactions","selectedCategory","categoryIds","transactionsInGroup","transactionsInGroupForMonth","available","components_TransactionsSection","CurrentMonthCategoryPage","transactionsInCategory","transactionsInCategoryForMonth","GroupsPage","onSelectGroup","_useTrendsShowAverage","_useTrendsShowAverage2","onToggleShowAverage","transactionsForMonth","TransactionsByMonthSection","selectedPayee","topTransactions","otherTransactions","GroupPage","onSelectCategory","categoryGroup","components_TransactionsByMonthSection","INITIAL_STATE","CategoriesState","cachedStates","handleSelectMonth","handleSelectGroup","handleSelectCategory","handleSelectPayee","onSelectPayee","handleSetExclusion","CategoryPage","transactionsForCategory","CategoryPayeePage","transactionsForCategoryAndPayee","IncomeVsExpensesChart","expenses","BreakdownNode","childrenMounted","handleToggleExpand","nodes","isTopLevel","hasChildNodes","BreakdownNode_Container","BreakdownNode_LeafNode","BreakdownNode_Nodes","Nodes","node","BreakdownNode_BreakdownNode","BreakdownNode_templateObject","LeafNode","BreakdownNode_NodeWrapper","Breakdown","components_BreakdownNode","ExpensesBreakdown","totalIncome","categoryNodes","payeeNodes","groupNodes","rootPayeeNodes","components_Breakdown","IncomeBreakdown","Breakdowns","expenseTransactions","incomeTransactions","components_ExpensesBreakdown","components_IncomeBreakdown","getSummaries","IncomeVsExpensesPage","showTotals","setShowTotals","allSummaries","summaries","summary","totalExpenses","denominator","components_IncomeVsExpensesChart","components_Breakdowns","CREDIT_ACCOUNTS","NetWorthChart","groupedData","getStack","monthlyData","assets","asset","liabilities","liability","getNodes","accountsByGroup","account","startCase","AccountBreakdown","hiddenAccounts","onToggleAccounts","propEq","ids","NetWorthAccounts","keyBy","visibleNodes","reject","hiddenNodes","NetWorthAccounts_AccountBreakdown","last","NetWorthPage","groupByMonthAndAccount","mapValues","identity","keys","getSummaryByAccount","groupedTransactions","getSelectedBalances","selectedMonthIndex","eq","accountSummaries","handleToggleAccounts","shouldHide","newHiddenAccounts","selectedBalances","filterHidden","omitBy","selectedLiabilities","sum","b","selectedAssets","components_NetWorthChart","constant","components_NetWorthAccounts","isContribution","account_id","isCapitalGainOrLoss","InvestmentsPage","selectedBreakdown","onSelectBreakdown","investmentTransactions","isInvestmentTransaction","transactionsInMonth","contribution","capitalGain","ProjectionsChart","investmentsProjection","mortgageProjection","amountNeededToRetire","yearsUntilRetirement","floor","isDescendant","parent","child","parentNode","ClickOff","handleBodyClick","onClickOff","addEventListener","removeEventListener","bodyEl","getElementsByTagName","ProjectionsSlider_templateObject","ProjectionsSlider","formatter","onBlur","onReset","rangeOptions","components_ClickOff","ProjectionsSlider_Container","ProjectionsSlider_Range","val","Range","adjustableEntries","adjustableEntriesByName","getInitialState","mortgageAccount","t","lastMonthTransactions","takeRightWhile","P","P1","c","prop","r","N","log","rate","paymentsLeft","projection","pow","mortgagePayment","principalProjection","getMortgageRate","remainingMortgagePayments","returnOnInvestments","investmentAccountIds","tr","startForMonth","returnRates","trs","contributions","gains","returns","totalReturn","multiply","getReturnOnInvestments","averageContribution","transferAccountId","_ref7","accountId","diff","head","getAverageContribution","currentInvestments","getCurrentInvestments","averageExpenses","_ref8","startingBalanceId","mortgageAccountIds","getAverageExpensesWithoutMortgage","retirementReturns","retirementTaxRate","maxAverageExpenses","ceil","maxAverageContribution","ProjectionsPage","handleChange","parseFloat","handleSelectAdjusting","adjustingName","handleClearSelection","handleResetCalculation","calculation","_ref9","monthlyRate","getProjection","YEARS_TO_PROJECT","monthlyRetirementReturn","remainingMortgage","projectionWithRetirement","_ref10","monthsBeforeRetirement","monthlyExpenses","getProjectionWithRetirement","hasMortgage","projectionByYear","chunk","mortgageProjectionByYear","nameToRangeOptions","step","components_ProjectionsChart","ProjectionsPage_AdjustableEntry","isAdjusting","onSelect","ProjectionsPage_Entry","components_ProjectionsSlider","AdjustableEntry","highlightValue","isAdjustable","Entry","_ref4$formatter","borderRadius","Section","Section_templateObject","top","AccountsSelectionForm","_evt$target","SectionHeader","SettingsPage_templateObject","Space","SettingsPage_templateObject2","SettingsPage","investmentModalOpen","mortgageModalOpen","handleClickEdit","section","handleCloseInvestmentModal","handleCloseMortgageModal","handleChangeInvestment","accountsObject","onUpdateAccounts","handleChangeMortgage","potentialInvestmentAccounts","on_budget","potentialMortageAccounts","investmentAccountsList","mortgageAccountList","components_Section","components_AccountsSelectionForm","getFilteredSpendingTransactions","components_CurrentMonthPage","components_CurrentMonthGroupPage","components_CurrentMonthCategoryPage","components_IncomePage","components_IncomeVsExpensesPage","components_NetWorthPage","components_InvestmentsPage","components_ProjectionsPage","components_SettingsPage","components_CategoriesState","components_GroupsPage","components_GroupPage","components_CategoryPage","components_CategoryPayeePage","nextProps","Unauthorized","ErrorPage_templateObject","ErrorPage","ErrorPage_Container","NotFound","components_ErrorPage","ErrorBoundary","hasError","Rollbar","token","Budgets","budgetsLoaded","onRequestBudgets","App","budgetIds","handleRequestBudgets","handleRequestBudget","handleAuthorize","hasToken","components_ErrorBoundary","components_Budgets","history","components_PageWrapper","pathname","Provider","components_PageContent","forceUpdate","component","components_Unauthorized","search","substring","decodeURIComponent","getAuthorizeToken","ynab","ReactDOM","components_App","getElementById"],"mappings":"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","file":"static/js/main.904bf01e.chunk.js","sourcesContent":["const cache = {};\n\nexport const getStorage = key => {\n  if (cache[key]) {\n    return cache[key];\n  }\n  const raw = localStorage.getItem(key);\n  if (raw) {\n    const parsed = JSON.parse(raw);\n    cache[key] = parsed;\n    return parsed;\n  }\n  return null;\n};\n\nexport const setStorage = (key, obj) => {\n  delete cache[key];\n\n  try {\n    localStorage.setItem(key, JSON.stringify(obj));\n  } catch (e) {\n    // Most likely exceeds storage quota\n  }\n};\n","import { getStorage, setStorage } from \"./localstorageUtils\";\nimport get from \"lodash/get\";\n\nconst SETTINGS = {\n  excludeFirstMonth: {\n    localStorageKey: \"budget-reports-exclude-first-month\",\n    default: false\n  },\n  excludeLastMonth: {\n    localStorageKey: \"budget-reports-exclude-last-month\",\n    default: false\n  },\n  investmentAccounts: {\n    localStorageKey: \"budget-reports-investment-accounts\",\n    default: {}\n  },\n  lastUpdated: {\n    localStorageKey: \"budget-reports-last-updated\",\n    default: null\n  },\n  mortgageAccounts: {\n    localStorageKey: \"budget-reports-mortgage-accounts\",\n    default: {}\n  },\n  netWorthHiddenAccounts: {\n    localStorageKey: \"budget-reports-networth-hidden-accounts\",\n    default: {}\n  },\n  spendingMonthsToCompare: {\n    localStorageKey: \"budget-reports-spending-months-to-compare\",\n    default: 3\n  },\n  trendsShowAverage: {\n    localStorageKey: \"budget-reports-trends-show-average\",\n    default: true\n  }\n};\n\nexport const getSetting = (settingsKey, budgetId) => {\n  const setting = SETTINGS[settingsKey];\n\n  if (!setting) {\n    throw new Error(\"not a valid settings key\");\n  }\n\n  return get(getStorage(setting.localStorageKey), budgetId, setting.default);\n};\n\nexport const setSetting = (settingsKey, budgetId, value) => {\n  const setting = SETTINGS[settingsKey];\n\n  if (!setting) {\n    throw new Error(\"not a valid settings key\");\n  }\n\n  const previousSetting = getStorage(setting.localStorageKey);\n\n  setStorage(setting.localStorageKey, {\n    ...previousSetting,\n    [budgetId]: value\n  });\n};\n","export const groupBy = func => arr => {\n  const grouped = {};\n  arr.forEach(obj => {\n    const key = func(obj);\n    if (!grouped[key]) {\n      grouped[key] = [];\n    }\n    grouped[key].push(obj);\n  });\n  return grouped;\n};\n\nexport const groupByProp = key => arr => {\n  const grouped = {};\n  arr.forEach(obj => {\n    if (!grouped[obj[key]]) {\n      grouped[obj[key]] = [];\n    }\n    grouped[obj[key]].push(obj);\n  });\n  return grouped;\n};\n\nexport const keyByProp = key => arr =>\n  arr.reduce((acc, curr) => ({ ...acc, [curr[key]]: curr }), {});\n\nexport const sumBy = func => arr =>\n  arr.reduce((acc, curr) => acc + func(curr), 0);\n\nexport const sumByProp = key => arr =>\n  arr.reduce((acc, curr) => acc + curr[key], 0);\n\nexport const simpleMemoize = func => {\n  let lastArgs = null;\n  let lastResult = null;\n  return (...args) => {\n    if (\n      lastArgs !== null &&\n      lastArgs.length === args.length &&\n      args.every((value, index) => value === lastArgs[index])\n    ) {\n      return lastResult;\n    }\n    lastArgs = args;\n    lastResult = func(...args);\n    return lastResult;\n  };\n};\n\nexport const notAny = predicates => arg =>\n  predicates.every(predicate => !predicate(arg));\n\nexport const upsertBy = (arr, key, obj, updater = (prev, curr) => curr) => {\n  let exists = false;\n  const newArr = arr.map(item => {\n    if (item[key] === obj[key]) {\n      exists = true;\n      return updater(item, obj);\n    }\n    return item;\n  });\n  return exists ? newArr : newArr.concat(obj);\n};\n","import { utils } from \"ynab\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport flatMap from \"lodash/fp/flatMap\";\nimport dropWhile from \"lodash/fp/dropWhile\";\nimport matchesProperty from \"lodash/fp/matchesProperty\";\nimport omit from \"lodash/fp/omit\";\nimport reverse from \"lodash/fp/reverse\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport uniq from \"lodash/fp/uniq\";\nimport { upsertBy, keyByProp } from \"./dataUtils\";\n\nconst formatCurrency = utils.convertMilliUnitsToCurrencyAmount;\n\nconst GROUPS_TO_HIDE = [\"Internal Master Category\", \"Credit Card Payments\"];\n\nconst MAX_MONTHS_TO_SHOW = 24;\n\nexport const sanitizeBudget = budget => {\n  const transactionIdsFromSub = uniq(\n    budget.subtransactions.map(transaction => transaction.transaction_id)\n  );\n  const categoryGroups = budget.category_groups.filter(\n    group => !GROUPS_TO_HIDE.includes(group.name)\n  );\n  const categories = budget.categories\n    .filter(category => !category.deleted)\n    .map(category => ({\n      ...category,\n      activity: formatCurrency(category.activity),\n      balance: formatCurrency(category.balance),\n      budgeted: formatCurrency(category.budgeted)\n    }));\n  const categoriesById = keyByProp(\"id\")(categories);\n  const earliestDate = moment()\n    .subtract(MAX_MONTHS_TO_SHOW - 1, \"months\")\n    .format(\"YYYY-MM-01\");\n  const currencyFormat = {\n    symbol: budget.currency_format.currency_symbol\n  };\n\n  return {\n    ...omit([\"category_groups\", \"currency_format\"])(budget),\n    accountsById: keyByProp(\"id\")(budget.accounts),\n    categoryGroups,\n    categoryGroupsById: keyByProp(\"id\")(categoryGroups),\n    categories,\n    categoriesById,\n    currencyFormat,\n    payeesById: keyByProp(\"id\")(budget.payees),\n    months: sortBy(\"month\")(budget.months),\n    transactions: compose([\n      transactions =>\n        transactions.map(transaction => ({\n          ...transaction,\n          amount: formatCurrency(transaction.amount)\n        })),\n      // Not sure how this would happen, but seeing it in production\n      transactions =>\n        transactions.filter(\n          transaction =>\n            !transaction.category_id ||\n            !!categoriesById[transaction.category_id]\n        ),\n      flatMap(\n        transaction =>\n          transactionIdsFromSub.includes(transaction.id)\n            ? compose([\n                subs =>\n                  subs.map(sub =>\n                    omit(\"transaction_id\")({ ...transaction, ...sub })\n                  ),\n                subs =>\n                  subs.filter(matchesProperty(\"transaction_id\", transaction.id))\n              ])(budget.subtransactions)\n            : transaction\n      ),\n      reverse,\n      dropWhile(transaction => transaction.date < earliestDate),\n      sortBy(\"date\"),\n      transactions =>\n        transactions.filter(transaction => transaction.amount !== 0)\n    ])(budget.transactions)\n  };\n};\n\nconst applyDeltas = (arr, deltas, key = \"id\", updater) =>\n  deltas.reduce((acc, curr) => upsertBy(acc, key, curr, updater), arr);\n\nconst arraysToUpdate = [\n  \"accounts\",\n  \"categories\",\n  \"category_groups\",\n  \"payee_locations\",\n  \"payees\",\n  \"scheduled_subtransactions\",\n  \"scheduled_transactions\",\n  \"subtransactions\",\n  \"transactions\"\n];\n\nexport const mergeBudgets = (budget, deltas) => ({\n  ...budget,\n  ...deltas,\n  ...arraysToUpdate.reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr]: applyDeltas(budget[curr], deltas[curr])\n    }),\n    {}\n  ),\n  months: applyDeltas(budget.months, deltas.months, \"month\", (prev, curr) => ({\n    ...prev,\n    ...curr,\n    categories: applyDeltas(prev.categories, curr.categories)\n  }))\n});\n","import get from \"lodash/fp/get\";\nimport { getStorage, setStorage } from \"./localstorageUtils\";\n\nconst BUDGET_DETAILS_STORAGE_KEY = \"ynab_budget_details\";\n\nlet cachedDetails = null;\n\nconst getAllBudgetDetails = () => {\n  if (cachedDetails) {\n    return cachedDetails;\n  }\n  cachedDetails = getStorage(BUDGET_DETAILS_STORAGE_KEY);\n  return cachedDetails;\n};\n\nexport const getBudgetDetails = id => get(id)(getAllBudgetDetails());\n\nexport const setBudgetDetails = ({ id, budget, server_knowledge }) => {\n  const details = getAllBudgetDetails();\n  const newDetails = {\n    ...details,\n    [id]: { budget, server_knowledge }\n  };\n  setStorage(BUDGET_DETAILS_STORAGE_KEY, newDetails);\n  cachedDetails = newDetails;\n};\n","import * as ynab from \"ynab\";\nimport moment from \"moment\";\nimport get from \"lodash/fp/get\";\nimport matches from \"lodash/fp/matches\";\nimport { getStorage, setStorage } from \"./localstorageUtils\";\nimport { setSetting, getSetting } from \"./uiRepo\";\nimport { sanitizeBudget, mergeBudgets } from \"./repoUtils\";\nimport { getBudgetDetails, setBudgetDetails } from \"./localBudgetCache\";\nimport { clientId, redirectUri } from \"./ynabConfig\";\n\nconst TOKEN_STORAGE_KEY = \"ynab_access_token\";\nconst BUDGETS_STORAGE_KEY = \"ynab_budgets\";\nconst LAST_LOCATION_KEY = \"budget-reports-last-location\";\n\nconst TIME_LIMIT_FOR_FULL_REFRESH = 8 * 1000;\n\nexport const AUTHORIZE_URL =\n  \"https://api.youneedabudget.com/oauth/authorize?client_id=\" +\n  clientId +\n  \"&redirect_uri=\" +\n  redirectUri +\n  \"&response_type=token\";\n\nexport const getAuthorizeToken = () => {\n  // check for hash route\n  if (window.location.hash[1] === \"/\") {\n    return localStorage.getItem(TOKEN_STORAGE_KEY);\n  }\n\n  const search = window.location.hash\n    .substring(1)\n    .replace(/&/g, '\",\"')\n    .replace(/=/g, '\":\"');\n\n  if (!search) {\n    return localStorage.getItem(TOKEN_STORAGE_KEY);\n  }\n\n  const token = get(\"access_token\")(\n    JSON.parse(\n      '{\"' + search + '\"}',\n      (key, value) => (key === \"\" ? value : decodeURIComponent(value))\n    )\n  );\n  localStorage.setItem(TOKEN_STORAGE_KEY, token);\n  window.location.hash = localStorage.getItem(LAST_LOCATION_KEY) || \"\";\n  localStorage.removeItem(LAST_LOCATION_KEY);\n\n  return token;\n};\n\nlet api = null;\n\nexport const initializeYnabApi = token => {\n  api = new ynab.api(token);\n};\n\nexport const getBudgets = () =>\n  api.budgets\n    .getBudgets()\n    .then(({ data }) => {\n      setStorage(BUDGETS_STORAGE_KEY, data);\n      return data;\n    })\n    .catch(e => {\n      if (\n        matches({\n          id: \"401\",\n          name: \"unauthorized\"\n        })(e.error) ||\n        e.message === \"Failed to fetch\"\n      ) {\n        localStorage.removeItem(TOKEN_STORAGE_KEY);\n        return getStorage(BUDGETS_STORAGE_KEY) || { budgets: [] };\n      }\n\n      throw e;\n    });\n\nconst getBudget = id =>\n  api.budgets\n    .getBudgetById(id)\n    .then(({ data }) => {\n      const { budget, server_knowledge } = data;\n\n      setBudgetDetails({ id, budget, server_knowledge });\n      setSetting(\"lastUpdated\", id, moment().valueOf());\n\n      return { budget: sanitizeBudget(budget), authorized: true };\n    })\n    .catch(e => {\n      if (\n        matches({ id: \"401\", name: \"unauthorized\" })(e.error) ||\n        e.message === \"Failed to fetch\"\n      ) {\n        localStorage.removeItem(TOKEN_STORAGE_KEY);\n        return {\n          budget: { categories: [], transactions: [], payees: [] },\n          authorized: false\n        };\n      }\n\n      throw e;\n    });\n\nexport const getUpdatedBudget = id => {\n  const budgetDetails = getBudgetDetails(id);\n\n  if (!budgetDetails) {\n    return getBudget(id);\n  }\n\n  if (\n    moment().valueOf() - getSetting(\"lastUpdated\", id) <\n    TIME_LIMIT_FOR_FULL_REFRESH\n  ) {\n    return getBudget(id);\n  }\n\n  return api.budgets\n    .getBudgetById(id, budgetDetails.server_knowledge)\n    .then(({ data }) => {\n      const budget = mergeBudgets(budgetDetails.budget, data.budget);\n\n      setBudgetDetails({ id, budget, server_knowledge: data.server_knowledge });\n      setSetting(\"lastUpdated\", id, moment().valueOf());\n\n      return { budget: sanitizeBudget(budget), authorized: true };\n    })\n    .catch(e => {\n      if (\n        matches({ id: \"401\", name: \"unauthorized\" })(e.error) ||\n        e.message === \"Failed to fetch\"\n      ) {\n        return {\n          budget: sanitizeBudget(budgetDetails.budget),\n          authorized: false\n        };\n      }\n\n      throw e;\n    });\n};\n\nexport const setLastLocation = () => {\n  localStorage.setItem(LAST_LOCATION_KEY, window.location.hash);\n};\n","import styled from \"styled-components\";\n\nexport const PageTitle = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: #222;\n`;\n\nexport const LargeNumber = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: #222;\n`;\n\nexport const StrongText = styled.div`\n  font-size: 14px;\n  line-height: 22px;\n  font-weight: 500;\n  color: #222;\n`;\n\nexport const ListSectionHeader = styled.div`\n  font-size: 12px;\n  line-height: 21px;\n  font-weight: 700;\n  color: #222;\n`;\n\nexport const SecondaryText = styled.div`\n  font-size: 13px;\n  line-height: 21px;\n  font-weight: 400;\n  color: #666;\n`;\n\nexport const MinorText = styled.div`\n  font-size: 11px;\n  line-height: 16px;\n  font-weight: 400;\n  color: #999;\n`;\n","import React from \"react\";\nimport { StrongText, SecondaryText } from \"./typeComponents\";\n\nconst Loading = () => (\n  <div\n    style={{\n      height: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }}\n  >\n    <StrongText>Loading&hellip;</StrongText>\n    <SecondaryText>beep, beep, boop</SecondaryText>\n  </div>\n);\n\nLoading.propTypes = {};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loading from \"./Loading\";\n\nclass EnsureBudgetLoaded extends Component {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    budgetLoaded: PropTypes.bool.isRequired,\n    children: PropTypes.node.isRequired,\n    onRequestBudget: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    const { budgetId, budgetLoaded, onRequestBudget } = this.props;\n\n    if (!budgetLoaded) {\n      onRequestBudget(budgetId);\n    }\n  }\n\n  render() {\n    if (!this.props.budgetLoaded) {\n      return <Loading />\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default EnsureBudgetLoaded;\n","import tinyColor from \"tinycolor2\";\n\nexport const primaryColor = \"#4399ff\";\nexport const positiveColor = \"#2cbc2f\";\nexport const plotBandColor = \"#f2f2f2\";\nexport const negativeColor = \"red\";\nexport const selectedPlotBandColor = tinyColor(primaryColor)\n  .lighten(32)\n  .desaturate()\n  .toHexString();\nexport const lighterPrimaryColor = tinyColor(primaryColor)\n  .lighten(5)\n  .desaturate()\n  .toHexString();\nexport const lightPrimaryColor = tinyColor(primaryColor)\n  .lighten(25)\n  .desaturate()\n  .toHexString();\nexport const negativeChartColor = tinyColor(negativeColor)\n  .lighten(30)\n  .desaturate(60)\n  .toHexString();\n\nexport const iconWidth = 60;\n","import styled from \"styled-components\";\nimport { SecondaryText } from \"./typeComponents\";\nimport { primaryColor } from \"../styleVariables\";\n\nconst Button = styled(SecondaryText)`\n  display: inline-block;\n  user-select: none;\n  border: 1px solid #ccc;\n  padding: 4px 12px;\n  border-radius: 2px;\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nexport const PrimaryButton = styled(Button)`\n  background-color: ${primaryColor};\n  border-color: ${primaryColor};\n  color: #fff;\n`;\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/fp/keys\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons/faArrowLeft\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons/faBars\";\nimport { faCaretDown } from \"@fortawesome/free-solid-svg-icons/faCaretDown\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons/faChevronRight\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons/faCog\";\nimport { faEllipsisV } from \"@fortawesome/free-solid-svg-icons/faEllipsisV\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons/faEye\";\nimport { faEyeSlash } from \"@fortawesome/free-solid-svg-icons/faEyeSlash\";\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons/faPencilAlt\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons/faTimes\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nlibrary.add(\n  faArrowLeft,\n  faBars,\n  faCaretDown,\n  faChevronRight,\n  faCog,\n  faEllipsisV,\n  faEye,\n  faEyeSlash,\n  faPencilAlt,\n  faTimes\n);\n\nconst ICONS = {\n  \"arrow-left\": faArrowLeft,\n  bars: faBars,\n  \"caret-down\": faCaretDown,\n  \"chevron-right\": faChevronRight,\n  cog: faCog,\n  pencil: faPencilAlt,\n  \"ellipsis-v\": faEllipsisV,\n  eye: faEye,\n  \"eye-slash\": faEyeSlash,\n  times: faTimes\n};\n\nconst PRESET_STYLES = {\n  faded: {\n    fontWeight: 400,\n    color: \"#aaa\",\n    fontSize: 10\n  }\n};\n\nconst Icon = ({ icon, style, faded, ...other }) => (\n  <FontAwesomeIcon\n    {...other}\n    icon={ICONS[icon]}\n    style={{ ...style, ...(faded && PRESET_STYLES.faded) }}\n  />\n);\n\nIcon.propTypes = {\n  icon: PropTypes.oneOf(keys(ICONS)).isRequired,\n  faded: PropTypes.bool\n};\n\nexport default Icon;\n","export const makeLink = (path, params) =>\n  path.replace(/:([a-zA-Z]*)/g, (_, part) => params[part]);\n\nconst pages = {\n  currentMonth: {\n    path: \"/budgets/:budgetId/current\",\n    title: \"Current Month Spending\",\n    props: [\"budget\", \"currentMonth\", \"investmentAccounts\"]\n  },\n  currentMonthGroup: {\n    path: \"/budgets/:budgetId/current/:categoryGroupId\",\n    title: (params, budget) =>\n      budget.categoryGroupsById[params.categoryGroupId].name,\n    props: [\"budget\", \"currentMonth\"],\n    paramProps: [\"categoryGroupId\"],\n    breadcrumbs: [\"currentMonth\"]\n  },\n  currentMonthCategory: {\n    path: \"/budgets/:budgetId/current/:categoryGroupId/:categoryId\",\n    title: (params, budget) => budget.categoriesById[params.categoryId].name,\n    props: [\"budget\", \"currentMonth\"],\n    paramProps: [\"categoryId\", \"categoryGroupId\"],\n    breadcrumbs: [\"currentMonth\", \"currentMonthGroup\"]\n  },\n  groups: {\n    path: \"/budgets/:budgetId/groups\",\n    title: \"Spending Trends\",\n    props: [\"budget\"]\n  },\n  group: {\n    path: \"/budgets/:budgetId/groups/:categoryGroupId\",\n    title: (params, budget) =>\n      budget.categoryGroupsById[params.categoryGroupId].name,\n    props: [\"budget\"],\n    paramProps: [\"categoryGroupId\"],\n    breadcrumbs: [\"groups\"]\n  },\n  category: {\n    path: \"/budgets/:budgetId/groups/:categoryGroupId/categories/:categoryId\",\n    title: (params, budget) => budget.categoriesById[params.categoryId].name,\n    props: [\"budget\"],\n    paramProps: [\"categoryId\"],\n    breadcrumbs: [\"groups\", \"group\"]\n  },\n  categoryPayee: {\n    path:\n      \"/budgets/:budgetId/groups/:categoryGroupId/categories/:categoryId/payees/:payeeId\",\n    title: (params, budget) => budget.payeesById[params.payeeId].name,\n    props: [\"budget\"],\n    paramProps: [\"categoryId\", \"payeeId\"],\n    breadcrumbs: [\"groups\", \"group\", \"category\"]\n  },\n  income: {\n    path: \"/budgets/:budgetId/income\",\n    title: \"Income Trends\",\n    props: [\"budget\"]\n  },\n  incomeVsExpenses: {\n    path: \"/budgets/:budgetId/income-vs-expenses\",\n    title: \"Income vs Expenses\",\n    props: [\"budget\", \"investmentAccounts\"]\n  },\n  netWorth: {\n    path: \"/budgets/:budgetId/net-worth\",\n    title: \"Net Worth\",\n    props: [\"budget\", \"investmentAccounts\", \"mortgageAccounts\"]\n  },\n  investments: {\n    path: \"/budgets/:budgetId/investments\",\n    title: \"Investments\",\n    props: [\"budget\", \"investmentAccounts\"]\n  },\n  projections: {\n    path: \"/budgets/:budgetId/projections\",\n    title: \"Retirement Calculator\",\n    props: [\"budget\", \"investmentAccounts\", \"mortgageAccounts\"]\n  },\n  settings: {\n    path: \"/budgets/:budgetId/settings\",\n    title: \"Budget Settings\",\n    props: [\n      \"budget\",\n      \"investmentAccounts\",\n      \"mortgageAccounts\",\n      \"onUpdateAccounts\"\n    ]\n  }\n};\n\nexport default pages;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { matchPath } from \"react-router\";\nimport styled from \"styled-components\";\nimport pages, { makeLink } from \"../pages\";\nimport Icon from \"./Icon\";\nimport { selectedPlotBandColor, iconWidth } from \"../styleVariables\";\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n  height: 60px;\n`;\n\nconst IconWrapper = styled.div`\n  width: ${iconWidth}px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledLink = styled(NavLink)`\n  color: inherit;\n  display: flex;\n  align-items: center;\n  height: 60px;\n  padding: 0 20px;\n  border-top: 1px solid #eee;\n  background-color: ${props => props.active && selectedPlotBandColor};\n  &:last-of-type {\n    border-bottom: 1px solid #eee;\n  }\n`;\n\nclass SidebarMenuContent extends PureComponent {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    hasMultipleBudgets: PropTypes.bool.isRequired,\n    location: PropTypes.string.isRequired,\n    onCloseSidebar: PropTypes.func.isRequired\n  };\n\n  render() {\n    const { budgetId, hasMultipleBudgets, location, onCloseSidebar } = this.props;\n\n    return (\n      <Fragment>\n        <PureHeader onCloseSidebar={onCloseSidebar} budgetId={budgetId} />\n        {[\n          \"currentMonth\",\n          \"groups\",\n          \"income\",\n          \"incomeVsExpenses\",\n          \"netWorth\",\n          \"investments\",\n          \"projections\"\n        ].map(page => {\n          const { path, title } = pages[page];\n\n          return (\n            <PureStyledLink\n              key={path}\n              to={makeLink(path, { budgetId })}\n              active={matchPath(location, { path })}\n              onClick={onCloseSidebar}\n            >\n              {title}\n            </PureStyledLink>\n          );\n        })}\n        {hasMultipleBudgets && (\n          <PureStyledLink to=\"/\">Switch Budgets</PureStyledLink>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nclass PureHeader extends PureComponent {\n  render() {\n    const { onCloseSidebar, budgetId } = this.props;\n    return (\n      <Header>\n        <IconWrapper onClick={onCloseSidebar}>\n          <Icon icon=\"times\" />\n        </IconWrapper>\n        <Link\n          to={makeLink(pages.settings.path, { budgetId })}\n          style={{ display: \"flex\", color: \"inherit\" }}\n          onClick={onCloseSidebar}\n        >\n          <IconWrapper>\n            <Icon icon=\"cog\" />\n          </IconWrapper>\n        </Link>\n      </Header>\n    );\n  }\n}\n\nclass PureStyledLink extends PureComponent {\n  render() {\n    return <StyledLink {...this.props} />;\n  }\n}\n\nexport default SidebarMenuContent;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Sidebar from \"react-sidebar\";\nimport { iconWidth } from \"../styleVariables\";\nimport Icon from \"./Icon\";\nimport SidebarMenuContent from \"./SidebarMenuContent\";\n\nclass SidebarMenu extends Component {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    children: PropTypes.func.isRequired,\n    hasMultipleBudgets: PropTypes.bool.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  state = { open: false };\n\n  handleSetOpen = open => {\n    this.setState({ open });\n  };\n\n  handleTriggerClick = () => {\n    this.setState({ open: true });\n  };\n\n  handleCloseSidebar = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { budgetId, children, hasMultipleBudgets, location } = this.props;\n    const { open } = this.state;\n\n    return (\n      <Sidebar\n        sidebar={\n          <SidebarMenuContent\n            budgetId={budgetId}\n            hasMultipleBudgets={hasMultipleBudgets}\n            location={location}\n            onCloseSidebar={this.handleCloseSidebar}\n          />\n        }\n        open={open}\n        onSetOpen={this.handleSetOpen}\n        styles={{\n          sidebar: {\n            backgroundColor: \"#fff\",\n            width: 280,\n            pointerEvents: !open && \"none\"\n          }\n        }}\n      >\n        {children({\n          sidebarTrigger: <Trigger onClick={this.handleTriggerClick} />\n        })}\n      </Sidebar>\n    );\n  }\n}\n\nconst Trigger = ({ onClick }) => (\n  <div\n    onClick={onClick}\n    style={{\n      alignSelf: \"stretch\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: iconWidth\n    }}\n  >\n    <Icon icon=\"bars\" />\n  </div>\n);\n\nexport default SidebarMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport EnsureBudgetLoaded from \"./EnsureBudgetLoaded\";\nimport { PrimaryButton } from \"./Button\";\nimport SidebarMenu from \"./SidebarMenu\";\n\nconst Container = styled.div`\n  height: 100%;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PageWrapper = ({\n  authorized,\n  budgetId,\n  budgetLoaded,\n  children,\n  hasMultipleBudgets,\n  location,\n  onAuthorize,\n  onRequestBudget\n}) => (\n  <EnsureBudgetLoaded\n    budgetId={budgetId}\n    budgetLoaded={budgetLoaded}\n    onRequestBudget={onRequestBudget}\n  >\n    <SidebarMenu\n      budgetId={budgetId}\n      location={location}\n      hasMultipleBudgets={hasMultipleBudgets}\n    >\n      {({ sidebarTrigger }) => (\n        <Container>\n          {children({ sidebarTrigger })}\n          {!authorized && (\n            <div\n              style={{\n                padding: \"15px 20px\",\n                backgroundColor: \"#fff\",\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                flexShrink: 0,\n                borderTop: \"1px solid #ccc\"\n              }}\n            >\n              Your authorization expired.\n              <PrimaryButton onClick={onAuthorize}>Reauthorize</PrimaryButton>\n            </div>\n          )}\n        </Container>\n      )}\n    </SidebarMenu>\n  </EnsureBudgetLoaded>\n);\n\nPageWrapper.propTypes = {\n  authorized: PropTypes.bool.isRequired,\n  budgetId: PropTypes.string.isRequired,\n  budgetLoaded: PropTypes.bool.isRequired,\n  children: PropTypes.func.isRequired,\n  hasMultipleBudgets: PropTypes.bool.isRequired,\n  location: PropTypes.string.isRequired,\n  onAuthorize: PropTypes.func.isRequired,\n  onRequestBudget: PropTypes.func.isRequired\n};\n\nexport default PageWrapper;\n","import compose from \"lodash/fp/compose\";\nimport pick from \"lodash/fp/pick\";\nimport mapRaw from \"lodash/fp/map\";\nimport get from \"lodash/fp/get\";\nimport { groupByProp, simpleMemoize, sumByProp } from \"./dataUtils\";\n\nconst map = mapRaw.convert({ cap: false });\n\nexport const isStartingBalanceOrReconciliation = simpleMemoize(budget => {\n  const startingBalancePayeeId = get(\"id\")(\n    budget.payees.find(payee => payee.name === \"Starting Balance\")\n  );\n  const reconciliationPayeeId = get(\"id\")(\n    budget.payees.find(\n      payee => payee.name === \"Reconciliation Balance Adjustment\"\n    )\n  );\n\n  return transaction =>\n    transaction.payee_id === startingBalancePayeeId ||\n    transaction.payee_id === reconciliationPayeeId;\n});\n\nexport const isIncome = simpleMemoize(budget => {\n  const toBeBudgetedId = get(\"id\")(\n    budget.categories.find(category => category.name === \"To be Budgeted\")\n  );\n  return transaction => transaction.category_id === toBeBudgetedId;\n});\n\nexport const isTransfer = (investmentAccounts = {}) => transaction =>\n  !transaction.category_id ||\n  !!investmentAccounts[transaction.transfer_account_id];\n\nexport const getTransactionMonth = transaction => transaction.date.slice(0, 7);\n\nexport const getFirstMonth = budget =>\n  budget.transactions.length\n    ? getTransactionMonth(budget.transactions[budget.transactions.length - 1])\n    : undefined;\n\nexport const getPayeeNodes = ({ payeesById, transactions }, divideBy = 1) =>\n  compose([\n    map((transactions, payeeId) => ({\n      ...(payeesById[payeeId]\n        ? pick([\"id\", \"name\"])(payeesById[payeeId])\n        : { id: \"no-payee\", name: \"(no payee)\" }),\n      amount: sumByProp(\"amount\")(transactions) / divideBy\n    })),\n    groupByProp(\"payee_id\")\n  ])(transactions);\n\nexport const sanitizeName = name => name.replace(/[^a-zA-Z0-9 ]/g, \"\").trim();\n","import { useRef, useState } from \"react\";\nimport moment from \"moment\";\nimport { getSetting, setSetting } from \"./uiRepo\";\nimport { getFirstMonth } from \"./budgetUtils\";\n\nexport const useSelectedMonth = () => {\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const selectedMonthRef = useRef(selectedMonth);\n  selectedMonthRef.current = selectedMonth;\n\n  const onSelectMonth = month => {\n    setSelectedMonth(month === selectedMonthRef.current ? null : month);\n  };\n\n  return [selectedMonth, onSelectMonth];\n};\n\nexport const useSelectedEntityId = () => {\n  const [selectedEntityId, setSelectedEntityId] = useState(null);\n  const onSelectEntityId = entityId => {\n    setSelectedEntityId(entityId === selectedEntityId ? null : entityId);\n  };\n\n  return [selectedEntityId, onSelectEntityId];\n};\n\nexport const useTrendsShowAverage = budgetId => {\n  const [showAverage, setShowAverage] = useState(\n    getSetting(\"trendsShowAverage\", budgetId)\n  );\n  const onToggleShowAverage = () => {\n    setShowAverage(!showAverage);\n    setSetting(\"trendsShowAverage\", budgetId, !showAverage);\n  };\n\n  return [showAverage, onToggleShowAverage];\n};\n\nconst getMonths = (firstMonth, lastMonth) => {\n  const months = [firstMonth];\n  let m = firstMonth;\n\n  while (m !== lastMonth) {\n    m = moment(m)\n      .add(1, \"months\")\n      .format(\"YYYY-MM\");\n    months.push(m);\n  }\n\n  return months;\n};\n\nexport const useMonthExclusions = budget => {\n  const [excludeFirstMonth, setExcludeFirstMonth] = useState(\n    getSetting(\"excludeFirstMonth\", budget.id)\n  );\n  const [excludeLastMonth, setExcludeLastMonth] = useState(\n    getSetting(\"excludeLastMonth\", budget.id)\n  );\n\n  const firstBudgetMonth = getFirstMonth(budget);\n  const firstMonth = excludeFirstMonth\n    ? moment(firstBudgetMonth)\n        .add(1, \"months\")\n        .format(\"YYYY-MM\")\n    : firstBudgetMonth;\n  const lastMonth = excludeLastMonth\n    ? moment()\n        .subtract(1, \"months\")\n        .format(\"YYYY-MM\")\n    : moment().format(\"YYYY-MM\");\n  const months = getMonths(firstMonth, lastMonth);\n\n  const onSetExclusion = ({ month, exclude }) => {\n    if (month === \"first\") {\n      setExcludeFirstMonth(exclude);\n      setSetting(\"excludeFirstMonth\", budget.id, exclude);\n    } else {\n      setExcludeLastMonth(exclude);\n      setSetting(\"excludeLastMonth\", budget.id, exclude);\n    }\n  };\n\n  return { excludeFirstMonth, excludeLastMonth, months, onSetExclusion };\n};\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Scroller extends Component {\n  static propTypes = {\n    action: PropTypes.string.isRequired,\n    children: PropTypes.func.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  toBeScrolled = null;\n\n  raf = null;\n\n  scrollPositions = {};\n\n  getSnapshotBeforeUpdate() {\n    return { scrollTop: this.toBeScrolled.scrollTop };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { action, location } = this.props;\n\n    if (location === prevProps.location) {\n      return;\n    }\n\n    if (action === \"POP\") {\n      this.scrollPositions[prevProps.location] = snapshot.scrollTop;\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = this.scrollPositions[location] || 0;\n      });\n    }\n\n    if (action === \"PUSH\") {\n      this.scrollPositions[prevProps.location] = snapshot.scrollTop;\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = 0;\n      });\n    }\n\n    if (action === \"REPLACE\") {\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = 0;\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.raf);\n  }\n\n  render() {\n    return this.props.children({\n      ref: el => {\n        this.toBeScrolled = el;\n      }\n    });\n  }\n}\n\nexport default Scroller;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport values from \"lodash/fp/values\";\nimport pages, { makeLink } from \"../pages\";\nimport { MinorText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\n\nconst routes = values(pages)\n  .filter(page => !!page.breadcrumbs)\n  .map(page => ({\n    path: page.path,\n    breadcrumbs: page.breadcrumbs.map(pageKey => ({\n      title: pages[pageKey].title,\n      path: pages[pageKey].path\n    }))\n  }));\n\nconst PageBreadcrumbs = ({ budget }) =>\n  budget ? (\n    <Switch>\n      {routes.map(({ path, breadcrumbs }) => (\n        <Route\n          key={path}\n          path={path}\n          exact\n          render={props => (\n            <MinorText style={{ lineHeight: 1, whiteSpace: \"normal\" }}>\n              {breadcrumbs.map(({ title, path }, index) => (\n                <Fragment key={path}>\n                  <Link\n                    to={makeLink(path, props.match.params)}\n                    style={{\n                      paddingBottom: 8,\n                      display: \"inline-block\"\n                    }}\n                  >\n                    {typeof title === \"function\"\n                      ? title(props.match.params, budget)\n                      : title}\n                  </Link>\n                  {index !== breadcrumbs.length - 1 && (\n                    <Icon\n                      icon=\"chevron-right\"\n                      style={{ padding: \"0 5px\", fontSize: 8 }}\n                    />\n                  )}\n                </Fragment>\n              ))}\n            </MinorText>\n          )}\n        />\n      ))}\n    </Switch>\n  ) : null;\n\nPageBreadcrumbs.propTypes = {\n  budget: PropTypes.object\n};\n\nexport default PageBreadcrumbs;\n","import React from \"react\";\nimport pages, { makeLink } from \"../pages\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { SecondaryText } from \"./typeComponents\";\n\nconst PageActions = () => (\n  <Switch>\n    <Route\n      path={pages.currentMonth.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.groups.path, match.params)}>\n            Past Months\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.currentMonthGroup.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.group.path, match.params)}>Past Months</Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.currentMonthCategory.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.category.path, match.params)}>\n            Past Months\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.groups.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonth.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.group.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonthGroup.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.category.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonthCategory.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n  </Switch>\n);\n\nPageActions.propTypes = {};\n\nexport default PageActions;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { PageTitle } from \"./typeComponents\";\nimport Scroller from \"./Scroller\";\nimport PageBreadcrumbs from \"./PageBreadcrumbs\";\nimport PageActions from \"./PageActions\";\n\nconst Header = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  height: 60px;\n  padding-left: 0;\n  padding-right: 20px;\n  background-color: #fff;\n  border-bottom: 1px solid #ccc;\n  white-space: pre;\n  user-select: none;\n`;\n\nconst Body = styled.div`\n  flex-grow: 1;\n  overflow-y: auto;\n`;\n\nconst PageLayout = ({\n  sidebarTrigger, // from PageWrapper\n  historyAction, // from PageWrapper\n  location, // from PageWrapper\n  budget,\n  title,\n  breadcrumbs,\n  fixedContent,\n  content\n}) => (\n  <Fragment>\n    <Header>\n      {sidebarTrigger}\n      <div style={{ flexGrow: 1 }}>\n        <PageBreadcrumbs budget={budget} />\n        <PageTitle style={{ lineHeight: 1 }}>{title}</PageTitle>\n      </div>\n      <PageActions />\n    </Header>\n    {fixedContent}\n    <Scroller action={historyAction} location={location}>\n      {({ ref }) => <Body ref={ref}>{content}</Body>}\n    </Scroller>\n  </Fragment>\n);\n\nPageLayout.propTypes = {\n  sidebarTrigger: PropTypes.node.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  budget: PropTypes.object,\n  breadcrumbs: PropTypes.node,\n  fixedContent: PropTypes.node,\n  content: PropTypes.node\n};\n\nexport default PageLayout;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { StrongText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\n\nconst Container = styled.div`\n  margin: ${props => (props.fullWidth ? \"0\" : \"2px\")};\n  background-color: #fff;\n  border: ${props => (props.fullWidth ? \"0\" : \"1px\")} solid #e5e5e5;\n  border-bottom-width: 1px;\n  border-radius: 2px;\n`;\n\nconst Header = styled(StrongText)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px 20px;\n  user-select: none;\n`;\n\nconst SettingsContainer = styled.div`\n  padding: 0 10px;\n  margin-right: -10px;\n  align-self: stretch;\n  display: flex;\n  align-items: center;\n  margin-left: 5px;\n`;\n\nconst Body = styled.div`\n  padding: 0 ${props => (props.fullWidth ? \"22px\" : \"20px\")} 15px;\n`;\n\nconst CollapsibleSection = ({\n  actions,\n  children,\n  fullWidth,\n  hasSettings,\n  noPadding,\n  title,\n  onClickSettings\n}) => {\n  const [expanded, setExpanded] = useState(true);\n\n  return (\n    <Container fullWidth={fullWidth}>\n      <Header>\n        <div\n          style={{ display: \"flex\", alignItems: \"center\" }}\n          onClick={() => {\n            setExpanded(!expanded);\n          }}\n        >\n          {title}\n          <Icon\n            icon=\"chevron-right\"\n            transform={{ rotate: expanded ? 90 : 0 }}\n            style={{ marginLeft: 10 }}\n            faded\n          />\n        </div>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          {expanded && actions}\n          {hasSettings &&\n            expanded && (\n              <SettingsContainer onClick={onClickSettings}>\n                <Icon icon=\"cog\" faded />\n              </SettingsContainer>\n            )}\n        </div>\n      </Header>\n      <AnimateHeight isExpanded={expanded}>\n        <Body style={{ padding: noPadding && 0 }}>{children}</Body>\n      </AnimateHeight>\n    </Container>\n  );\n};\n\nCollapsibleSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  actions: PropTypes.node,\n  fullWidth: PropTypes.bool,\n  hasSettings: PropTypes.bool,\n  noPadding: PropTypes.bool,\n  onClickSettings: PropTypes.func\n};\n\nexport default CollapsibleSection;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst CHART_DEFAULTS = {\n  chart: { height: 240, spacing: [0, 0, 0, 0] },\n  credits: { enabled: false },\n  legend: { enabled: false },\n  title: { text: \"\" },\n  subtitle: { text: \"\" },\n  tooltip: { enabled: false },\n  xAxis: { tickLength: 0 }\n};\n\nconst Chart = ({ options }) => (\n  <HighchartsReact\n    highcharts={Highcharts}\n    options={{\n      ...CHART_DEFAULTS,\n      ...options,\n      chart: { ...CHART_DEFAULTS.chart, ...options.chart },\n      xAxis: { ...CHART_DEFAULTS.xAxis, ...options.xAxis }\n    }}\n  />\n);\n\nChart.propTypes = {\n  options: PropTypes.object\n};\n\nexport default Chart;\n","import React from \"react\";\n\nconst CurrencyContext = React.createContext();\n\nexport default CurrencyContext;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport get from \"lodash/fp/get\";\nimport { positiveColor, negativeColor } from \"../styleVariables\";\nimport CurrencyContext from \"./CurrencyContext\";\n\nexport const addCommas = nStr => {\n  nStr += \"\";\n\n  const x = nStr.split(\".\");\n  let x1 = x[0];\n  const x2 = x.length > 1 ? \".\" + x[1] : \"\";\n  const rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, \"$1,$2\");\n  }\n  return x1 + x2;\n};\n\nconst Amount = ({\n  amount,\n  amountAfterDecimal,\n  positiveIsRed,\n  showCurrencySymbol,\n  style\n}) => (\n  <CurrencyContext.Consumer>\n    {currencyFormat => (\n      <span\n        style={{\n          ...style,\n          color: amount > 0 && (positiveIsRed ? negativeColor : positiveColor)\n        }}\n      >\n        {amount > 0 && (positiveIsRed ? \"-\" : \"+\")}\n        {showCurrencySymbol && (get(\"symbol\")(currencyFormat) || \"$\")}\n        {addCommas(Math.abs(amount).toFixed(amountAfterDecimal))}\n      </span>\n    )}\n  </CurrencyContext.Consumer>\n);\n\nAmount.propTypes = {\n  amount: PropTypes.number.isRequired,\n  amountAfterDecimal: PropTypes.number,\n  positiveIsRed: PropTypes.bool,\n  showCurrencySymbol: PropTypes.bool,\n  style: PropTypes.object\n};\n\nAmount.defaultProps = {\n  amountAfterDecimal: 2\n};\n\nexport default Amount;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport isNumber from \"lodash/fp/isNumber\";\nimport { MinorText, LargeNumber } from \"./typeComponents\";\nimport Amount from \"./Amount\";\n\nconst ChartNumbers = ({ numbers, alwaysRound }) => {\n  const smallNumbers = numbers.some(({ amount }) => Math.abs(amount) < 100);\n  return (\n    <div\n      style={{\n        textAlign: \"right\",\n        lineHeight: \"16px\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        flexDirection: \"row-reverse\",\n        marginBottom: 8\n      }}\n    >\n      {numbers.map(({ amount, label, isMoney = true, decimalsToRound }) => (\n        <div key={label} style={{ marginLeft: 20 }}>\n          <LargeNumber style={{ lineHeight: \"16px\" }}>\n            <Amount\n              amount={amount}\n              amountAfterDecimal={\n                isNumber(decimalsToRound)\n                  ? decimalsToRound\n                  : smallNumbers && !alwaysRound\n                    ? 2\n                    : 0\n              }\n              showCurrencySymbol={isMoney}\n              positiveIsRed\n            />\n          </LargeNumber>\n          <MinorText>{label}</MinorText>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nChartNumbers.propTypes = {\n  numbers: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      label: PropTypes.string.isRequired,\n      alwaysRound: PropTypes.bool,\n      decimalsToRound: PropTypes.number,\n      isMoney: PropTypes.bool\n    })\n  ).isRequired,\n  alwaysRound: PropTypes.bool\n};\n\nexport default ChartNumbers;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport tinyColor from \"tinycolor2\";\nimport compose from \"lodash/fp/compose\";\nimport isNumber from \"lodash/fp/isNumber\";\nimport padCharsStart from \"lodash/fp/padCharsStart\";\nimport range from \"lodash/fp/range\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport { groupByProp, sumByProp } from \"../dataUtils\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport { primaryColor, plotBandColor } from \"../styleVariables\";\nimport { MinorText } from \"./typeComponents\";\nimport Chart from \"./Chart\";\nimport ChartNumbers from \"./ChartNumbers\";\n\nconst DateLabels = styled.div`\n  border-top: 1px solid #ddd;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst getData = ({ month, transactionsByDate }) => {\n  const today = moment().format(\"YYYY-MM-DD\");\n  let cumulative = 0;\n  return range(-1, moment(month).daysInMonth()).map(numDays => {\n    const date =\n      numDays === -1\n        ? moment(month).add(-1, \"days\")\n        : `${month}-${padCharsStart(\"0\")(2)(numDays + 1)}`;\n\n    if (date > today) {\n      return null;\n    }\n\n    cumulative += -sumBy(\"amount\")(transactionsByDate[date] || []);\n\n    return cumulative;\n  });\n};\n\nclass SpendingChart extends PureComponent {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    currentMonth: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        date: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    total: PropTypes.number\n  };\n\n  render() {\n    const {\n      total,\n      transactions,\n      highlightFunction,\n      currentMonth,\n      monthsToCompare\n    } = this.props;\n\n    const highlightedTransactions = highlightFunction\n      ? transactions.filter(highlightFunction)\n      : [];\n    const highlightData = getData({\n      month: currentMonth,\n      transactionsByDate: groupByProp(\"date\")(highlightedTransactions)\n    });\n    const highlightSeries = {\n      type: \"areaspline\",\n      data: highlightData,\n      enableMouseTracking: false,\n      marker: { enabled: false },\n      animation: false,\n      color: primaryColor,\n      lineWidth: 0,\n      fillOpacity: 0.8\n    };\n    const daysInMonth = moment(currentMonth).daysInMonth();\n    const firstDate = moment(currentMonth).add(-1, \"days\");\n    const lastDate = moment(currentMonth).add(daysInMonth - 1, \"days\");\n\n    const transactionsByDate = groupByProp(\"date\")(transactions);\n    const data = getData({ month: currentMonth, transactionsByDate });\n    const lineData = range(0, daysInMonth + 1).map(\n      day => (day / daysInMonth) * total\n    );\n    const firstDayOfWeek = parseInt(firstDate.format(\"d\"), 10);\n    const plotBands = range(0, 6).map(num => ({\n      color: plotBandColor,\n      from: num * 7 - 1.5 - firstDayOfWeek,\n      to: num * 7 + 0.5 - firstDayOfWeek\n    }));\n\n    const comparisonSeries = range(monthsToCompare, 0).map(numMonths => ({\n      type: \"spline\",\n      data: getData({\n        month: moment(currentMonth)\n          .subtract(numMonths, \"months\")\n          .format(\"YYYY-MM\"),\n        transactionsByDate\n      }),\n      enableMouseTracking: false,\n      color:\n        \"#\" +\n        tinyColor\n          .mix(\n            primaryColor,\n            \"#f2f2f2\",\n            30 + ((numMonths - 1) * 70) / monthsToCompare\n          )\n          .toHex(),\n      lineWidth: 1,\n      marker: { enabled: false },\n      animation: false\n    }));\n\n    const spent = compose([\n      sumByProp(\"amount\"),\n      takeWhile(\n        transaction => getTransactionMonth(transaction) === currentMonth\n      )\n    ])(transactions);\n    const chartNumbers = [{ amount: spent, label: \"spent\" }];\n    if (isNumber(total)) {\n      chartNumbers.push({ amount: -(total + spent), label: \"available\" });\n    }\n\n    return (\n      <Fragment>\n        <ChartNumbers numbers={chartNumbers} />\n        <Chart\n          key={monthsToCompare}\n          options={{\n            chart: { spacing: [0, 0, 0, 0], height: 140, animation: false },\n            xAxis: {\n              labels: { enabled: false },\n              plotBands\n            },\n            yAxis: { visible: false, endOnTick: false, startOnTick: false },\n            series: [\n              {\n                type: \"line\",\n                color: \"#aaa\",\n                dashStyle: \"Dot\",\n                lineWidth: 1,\n                data: lineData,\n                enableMouseTracking: false,\n                marker: { enabled: false },\n                animation: false\n              },\n              ...comparisonSeries,\n              {\n                type: \"spline\",\n                data,\n                enableMouseTracking: false,\n                color: primaryColor,\n                marker: { enabled: false },\n                animation: false,\n                ...(highlightFunction && {\n                  type: \"areaspline\",\n                  fillOpacity: 0.2\n                })\n              },\n              highlightSeries\n            ]\n          }}\n        />\n        <DateLabels>\n          <MinorText>{firstDate.format(\"MMM D\")}</MinorText>\n          <MinorText>{lastDate.format(\"MMM D\")}</MinorText>\n        </DateLabels>\n      </Fragment>\n    );\n  }\n}\n\nexport default SpendingChart;\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { StrongText } from \"./typeComponents\";\nimport { PrimaryButton } from \"./Button\";\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  opacity: 0;\n  transition: opacity 0.2s ease-in-out;\n`;\n\nconst ModalContent = styled.div`\n  position: relative;\n  min-width: 200px;\n  padding: 15px 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  background-color: #fff;\n  border-radius: 2px;\n  transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out;\n`;\n\nconst ensureNextTick = callback =>\n  requestAnimationFrame(() => {\n    requestAnimationFrame(callback);\n  });\n\nclass Modal extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    width: PropTypes.number\n  };\n\n  constructor() {\n    super();\n    this.el = document.createElement(\"div\");\n    this.state = { animationState: \"left\" };\n  }\n\n  componentDidMount() {\n    document.body.appendChild(this.el);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.open && this.props.open) {\n      ensureNextTick(() => {\n        this.setState({ animationState: \"entering\" });\n      });\n    }\n    if (prevProps.open && !this.props.open) {\n      ensureNextTick(() => {\n        this.setState({ animationState: \"leaving\" });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.el);\n  }\n\n  handleTransitionEnd = () => {\n    const { animationState } = this.state;\n\n    if (animationState === \"entering\") {\n      this.setState({ animationState: \"entered\" });\n    } else if (animationState === \"leaving\") {\n      this.setState({ animationState: \"left\" });\n    }\n  };\n\n  render() {\n    const { open, children, title, onClose, width } = this.props;\n    const { animationState } = this.state;\n\n    if (!open && animationState === \"left\") {\n      return null;\n    }\n\n    const shouldShow = [\"entering\", \"entered\"].includes(animationState);\n\n    return createPortal(\n      <Container>\n        <Overlay\n          onClick={onClose}\n          style={{ opacity: shouldShow ? 1 : 0 }}\n          onTransitionEnd={this.handleTransitionEnd}\n        />\n        <ModalContent\n          style={{\n            opacity: shouldShow ? 1 : 0,\n            transform: `translate3d(0, ${shouldShow ? \"0\" : \"20px\"}, 0)`,\n            width\n          }}\n        >\n          {title && (\n            <StrongText style={{ marginBottom: 10 }}>{title}</StrongText>\n          )}\n          {children}\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              marginTop: 20\n            }}\n          >\n            <PrimaryButton onClick={onClose}>Done</PrimaryButton>\n          </div>\n        </ModalContent>\n      </Container>,\n      this.el\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"./Modal\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Button from \"./Button\";\n\nconst ChartSettingsModal = ({\n  open,\n  monthsToCompare,\n  onClose,\n  onDecrementMonths,\n  onIncrementMonths\n}) => (\n  <Modal open={open} title=\"Chart Settings\" onClose={onClose}>\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <div style={{ marginRight: 10 }}>\n        <Button onClick={onDecrementMonths}>-</Button>\n        <Button onClick={onIncrementMonths}>+</Button>\n      </div>\n      <SecondaryText>\n        Compare with the last {monthsToCompare} month\n        {monthsToCompare === 1 ? \"\" : \"s\"}\n      </SecondaryText>\n    </div>\n  </Modal>\n);\n\nChartSettingsModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  monthsToCompare: PropTypes.number.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onDecrementMonths: PropTypes.func.isRequired,\n  onIncrementMonths: PropTypes.func.isRequired\n};\n\nexport default ChartSettingsModal;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getSetting, setSetting } from \"../uiRepo\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport SpendingChart from \"./SpendingChart\";\nimport ChartSettingsModal from \"./ChartSettingsModal\";\n\nconst MAX_MONTHS = 12;\n\nclass DayByDaySection extends Component {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    currentMonth: PropTypes.string.isRequired,\n    transactions: PropTypes.array.isRequired,\n    highlightFunction: PropTypes.func,\n    title: PropTypes.string,\n    total: PropTypes.number\n  };\n\n  static defaultProps = { title: \"Day by Day\" };\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      modalOpen: false,\n      monthsToCompare: getSetting(\"spendingMonthsToCompare\", props.budgetId)\n    };\n  }\n\n  handleClickSettings = () => {\n    this.setState({ modalOpen: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ modalOpen: false });\n  };\n\n  handleDecrementMonths = () => {\n    this.setState(\n      state => ({\n        ...state,\n        monthsToCompare: Math.max(state.monthsToCompare - 1, 0)\n      }),\n      this.saveSetting\n    );\n  };\n\n  handleIncrementMonths = () => {\n    this.setState(\n      state => ({\n        ...state,\n        monthsToCompare: Math.min(state.monthsToCompare + 1, MAX_MONTHS)\n      }),\n      this.saveSetting\n    );\n  };\n\n  saveSetting = () => {\n    setSetting(\n      \"spendingMonthsToCompare\",\n      this.props.budgetId,\n      this.state.monthsToCompare\n    );\n  };\n\n  render() {\n    const {\n      transactions,\n      budgetId,\n      currentMonth,\n      highlightFunction,\n      title,\n      total\n    } = this.props;\n    const { modalOpen, monthsToCompare } = this.state;\n\n    return (\n      <Fragment>\n        <CollapsibleSection\n          title={title}\n          hasSettings\n          onClickSettings={this.handleClickSettings}\n        >\n          <SpendingChart\n            budgetId={budgetId}\n            currentMonth={currentMonth}\n            highlightFunction={highlightFunction}\n            monthsToCompare={monthsToCompare}\n            total={total}\n            transactions={transactions}\n          />\n        </CollapsibleSection>\n        <ChartSettingsModal\n          open={modalOpen}\n          monthsToCompare={monthsToCompare}\n          onClose={this.handleCloseModal}\n          onDecrementMonths={this.handleDecrementMonths}\n          onIncrementMonths={this.handleIncrementMonths}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default DayByDaySection;\n","import styled from \"styled-components\";\n\nconst ListItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 0;\n  border-top: 1px dotted #ddd;\n  user-select: none;\n\n  &:first-child {\n    border-top: ${props => !props.isContinuing && 0};\n    padding-top: ${props => !props.isContinuing && 0};\n  }\n`;\n\nexport default ListItem;\n","import styled from \"styled-components\";\nimport { SecondaryText } from \"./typeComponents\";\n\nconst EmptyText = styled(SecondaryText)`\n  text-align: center;\n  margin: 10px;\n  opacity: 0.5;\n`;\n\nexport default EmptyText;\n","import React from \"react\";\nimport EmptyText from \"./EmptyText\";\n\nconst NoTransactions = () => <EmptyText>No transactions this month</EmptyText>;\n\nexport default NoTransactions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\n\nconst LabelWithMinorText = ({ label, minorText, inLink, to, bold }) => (\n  <SecondaryText\n    style={{\n      fontWeight: bold && 700,\n      display: \"flex\",\n      alignItems: \"baseline\",\n      whiteSpace: \"pre\",\n      overflow: \"hidden\",\n      color: inLink && \"inherit\"\n    }}\n  >\n    {to ? <Link to={to}>{label}</Link> : label}\n    {minorText && (\n      <MinorText\n        style={{\n          fontWeight: bold && 700,\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\"\n        }}\n      >\n        &nbsp;&ndash; {minorText}\n      </MinorText>\n    )}\n  </SecondaryText>\n);\n\nLabelWithMinorText.propTypes = {\n  label: PropTypes.string.isRequired,\n  bold: PropTypes.bool,\n  inLink: PropTypes.bool,\n  minorText: PropTypes.string,\n  to: PropTypes.string\n};\n\nexport default LabelWithMinorText;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LabelWithMinorText from \"./LabelWithMinorText\";\n\nconst LabelWithTransactionCount = ({\n  label,\n  count,\n  inLink,\n  selected,\n  showCount,\n  to\n}) => (\n  <LabelWithMinorText\n    bold={selected}\n    label={label}\n    minorText={showCount && `${count} transaction${count === 1 ? \"\" : \"s\"}`}\n    inLink={inLink}\n    to={to}\n  />\n);\n\nLabelWithTransactionCount.propTypes = {\n  count: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n  inLink: PropTypes.bool,\n  selected: PropTypes.bool,\n  showCount: PropTypes.bool,\n  to: PropTypes.string\n};\n\nLabelWithTransactionCount.defaultProps = { showCount: true };\n\nexport default LabelWithTransactionCount;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\n\nconst AmountWithPercentage = ({\n  amount,\n  positiveIsRed,\n  total,\n  faded,\n  selected\n}) => (\n  <SecondaryText\n    style={{\n      display: \"flex\",\n      alignItems: \"baseline\",\n      opacity: faded ? 0.3 : 1,\n      fontWeight: selected && 700\n    }}\n  >\n    <Amount amount={amount} positiveIsRed={positiveIsRed} />\n    <MinorText\n      style={{ width: 44, textAlign: \"right\", fontWeight: selected && 700 }}\n    >\n      {total ? `${((amount / total) * 100).toFixed(1)}%` : `–`}\n    </MinorText>\n  </SecondaryText>\n);\n\nAmountWithPercentage.propTypes = {\n  amount: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveIsRed: PropTypes.bool,\n  faded: PropTypes.bool,\n  selected: PropTypes.bool\n};\n\nexport default AmountWithPercentage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MinorText } from \"./typeComponents\";\n\nconst SeeAll = ({ count, pluralizedName, showAll, onToggle }) => (\n  <MinorText style={{ textAlign: \"center\", marginTop: 5 }} onClick={onToggle}>\n    {showAll ? \"see less\" : `see all ${count} ${pluralizedName}`}\n  </MinorText>\n);\n\nSeeAll.propTypes = {\n  count: PropTypes.number.isRequired,\n  pluralizedName: PropTypes.string.isRequired,\n  showAll: PropTypes.bool.isRequired,\n  onToggle: PropTypes.func.isRequired\n};\n\nexport default SeeAll;\n","import React, { Component, PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport get from \"lodash/fp/get\";\nimport map from \"lodash/fp/map\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { groupBy, groupByProp, sumByProp } from \"../dataUtils\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { Link } from \"react-router-dom\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport { SecondaryText } from \"./typeComponents\";\nimport ListItem from \"./ListItem\";\nimport NoTransactions from \"./NoTransactions\";\nimport LabelWithTransactionCount from \"./LabelWithTransactionCount\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\nimport SeeAll from \"./SeeAll\";\n\nconst mapWithKeys = map.convert({ cap: false });\nconst LIMIT = 5;\n\nconst keyToPluralizedName = {\n  category_group_id: \"category groups\",\n  category_id: \"categories\",\n  payee_id: \"payees\"\n};\n\nclass GenericEntitiesSection extends Component {\n  static propTypes = {\n    entitiesById: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    entityKey: PropTypes.oneOf([\n      \"category_id\",\n      \"category_group_id\",\n      \"payee_id\"\n    ]),\n    emptyName: PropTypes.string,\n    entityFunction: PropTypes.func,\n    positiveIsRed: PropTypes.bool,\n    linkFunction: PropTypes.func,\n    limitShowing: PropTypes.bool,\n    numMonths: PropTypes.number,\n    selectedEntityId: PropTypes.string,\n    showAverage: PropTypes.bool,\n    showAverageToggle: PropTypes.bool,\n    showTransactionCount: PropTypes.bool,\n    onClickEntity: PropTypes.func,\n    onToggleAverage: PropTypes.func\n  };\n\n  static defaultProps = { emptyName: \"(none)\" };\n\n  state = { showAll: false, allMounted: false };\n\n  handleToggleShowAll = () => {\n    const { allMounted, showAll } = this.state;\n    if (allMounted) {\n      this.setState({ showAll: !showAll });\n    } else {\n      this.setState({ allMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ showAll: true });\n      });\n    }\n  };\n\n  render() {\n    const {\n      emptyName,\n      entityKey,\n      entityFunction,\n      entitiesById,\n      positiveIsRed,\n      linkFunction,\n      limitShowing: limitShowingProp,\n      numMonths,\n      selectedEntityId,\n      showAverage,\n      showAverageToggle,\n      showTransactionCount,\n      title,\n      transactions,\n      onClickEntity,\n      onToggleAverage\n    } = this.props;\n    const { allMounted, showAll } = this.state;\n    let total = 0;\n    const entities = compose([\n      sortBy(\"amount\"),\n      mapWithKeys((transactions, entityId) => {\n        const amount = sumByProp(\"amount\")(transactions);\n        total += amount;\n\n        return {\n          entityId,\n          transactions: transactions.length,\n          amount\n        };\n      }),\n      entityFunction ? groupBy(entityFunction) : groupByProp(entityKey)\n    ])(transactions);\n\n    const limitShowing = limitShowingProp && entities.length > LIMIT + 1;\n    const topEntities = entities.slice(0, LIMIT);\n    const otherEntities = entities.slice(LIMIT);\n\n    return (\n      <CollapsibleSection\n        title={title}\n        actions={\n          showAverageToggle && (\n            <SecondaryText onClick={onToggleAverage}>\n              {showAverage ? \"average\" : \"total\"}\n            </SecondaryText>\n          )\n        }\n      >\n        {entities.length === 0 && <NoTransactions />}\n        {(limitShowing ? topEntities : entities).map(\n          ({ entityId, transactions, amount }) => (\n            <GenericItemLink\n              key={entityId}\n              showTransactionCount={showTransactionCount}\n              to={\n                linkFunction && !!entitiesById[entityId]\n                  ? linkFunction(entityId)\n                  : null\n              }\n              transactions={transactions}\n              name={get(\"name\")(entitiesById[entityId]) || emptyName}\n              amount={showAverage ? amount / numMonths : amount}\n              positiveIsRed={positiveIsRed}\n              selected={entityId === selectedEntityId}\n              total={showAverage ? total / numMonths : total}\n              id={entityId}\n              onClick={onClickEntity}\n            />\n          )\n        )}\n        {allMounted && (\n          <AnimateHeight isExpanded={showAll}>\n            <Fragment>\n              {otherEntities.map(({ entityId, transactions, amount }) => (\n                <GenericItemLink\n                  key={entityId}\n                  showTransactionCount={showTransactionCount}\n                  to={\n                    linkFunction && !!entitiesById[entityId]\n                      ? linkFunction(entityId)\n                      : null\n                  }\n                  transactions={transactions}\n                  name={get(\"name\")(entitiesById[entityId]) || emptyName}\n                  amount={showAverage ? amount / numMonths : amount}\n                  positiveIsRed={positiveIsRed}\n                  selected={entityId === selectedEntityId}\n                  total={total}\n                  id={entityId}\n                  onClick={onClickEntity}\n                  isContinuing\n                />\n              ))}\n            </Fragment>\n          </AnimateHeight>\n        )}\n        {!!otherEntities.length &&\n          limitShowing && (\n            <SeeAll\n              count={entities.length}\n              pluralizedName={keyToPluralizedName[entityKey]}\n              showAll={showAll}\n              onToggle={this.handleToggleShowAll}\n            />\n          )}\n      </CollapsibleSection>\n    );\n  }\n}\n\nconst MaybeLink = ({ to, children, ...other }) =>\n  to ? (\n    <Link {...other} to={to}>\n      {children}\n    </Link>\n  ) : (\n    <span {...other}>{children}</span>\n  );\n\nclass GenericItemLink extends PureComponent {\n  render() {\n    const {\n      showTransactionCount,\n      to,\n      transactions,\n      name,\n      amount,\n      positiveIsRed,\n      total,\n      selected,\n      id,\n      onClick,\n      isContinuing\n    } = this.props;\n    return (\n      <ListItem\n        isContinuing={isContinuing}\n        onClick={onClick && (() => onClick(id))}\n      >\n        {showTransactionCount ? (\n          <LabelWithTransactionCount\n            count={transactions}\n            label={name}\n            selected={selected}\n            to={to}\n          />\n        ) : (\n          <MaybeLink\n            to={to}\n            onClick={\n              to &&\n              (evt => {\n                evt.stopPropagation();\n              })\n            }\n          >\n            <SecondaryText\n              style={{\n                whiteSpace: \"pre\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                color: \"inherit\",\n                fontWeight: selected && 700\n              }}\n            >\n              {name}\n            </SecondaryText>\n          </MaybeLink>\n        )}\n        <AmountWithPercentage\n          amount={amount}\n          positiveIsRed={positiveIsRed}\n          selected={selected}\n          total={total}\n        />\n      </ListItem>\n    );\n  }\n}\n\nGenericItemLink.propTypes = {\n  amount: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  total: PropTypes.number.isRequired,\n  transactions: PropTypes.number.isRequired,\n  id: PropTypes.string,\n  isContinuing: PropTypes.bool,\n  selected: PropTypes.bool,\n  showTransactionCount: PropTypes.bool,\n  to: PropTypes.string\n};\n\nexport default GenericEntitiesSection;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport get from \"lodash/fp/get\";\nimport { SecondaryText } from \"./typeComponents\";\nimport ListItem from \"./ListItem\";\nimport Amount from \"./Amount\";\nimport LabelWithMinorText from \"./LabelWithMinorText\";\n\nconst StyledListItem = styled(ListItem)`\n  border-top: 0;\n  padding-bottom: 0;\n`;\n\nconst DateSummaryTransaction = ({ category, payee, memo, amount }) => (\n  <StyledListItem isContinuing>\n    <div style={{ overflow: \"hidden\" }}>\n      <LabelWithMinorText\n        label={get(\"name\")(payee) || \"(no payee)\"}\n        minorText={\n          get(\"name\")(category) || \"(no category)\" + (memo ? ` (${memo})` : \"\")\n        }\n      />\n    </div>\n    <SecondaryText>\n      <Amount amount={amount} />\n    </SecondaryText>\n  </StyledListItem>\n);\n\nDateSummaryTransaction.propTypes = {\n  amount: PropTypes.number.isRequired,\n  category: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  }),\n  isContinuing: PropTypes.bool,\n  memo: PropTypes.string,\n  payee: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })\n};\n\nexport default DateSummaryTransaction;\n","import React from \"react\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\nimport Amount from \"./Amount\";\nimport styled from \"styled-components\";\nimport ListItem from \"./ListItem\";\n\nconst INDENTATION = 18;\n\nconst NodeWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${props => (props.isCompact ? \"0\" : \"8px 0\")};\n  user-select: none;\n\n  ${ListItem}:first-child > & {\n    padding-top: 0;\n  }\n`;\n\nconst IconWrapper = styled.div`\n  box-sizing: border-box;\n  padding-left: 3px;\n  width: ${INDENTATION}px;\n  font-weight: 400;\n  color: #888;\n  font-size: 10px;\n`;\n\nconst ToggleNode = ({\n  expanded,\n  name,\n  id,\n  amount,\n  valueRenderer,\n  onToggle,\n  isCompact\n}) => (\n  <NodeWrapper onClick={onToggle} isCompact={isCompact}>\n    <SecondaryText\n      style={{ whiteSpace: \"pre\", display: \"flex\", alignItems: \"center\" }}\n    >\n      <IconWrapper>\n        <Icon icon=\"chevron-right\" transform={{ rotate: expanded ? 90 : 0 }} />\n      </IconWrapper>\n      {typeof name === \"function\" ? name({ expanded }) : name}\n    </SecondaryText>\n    {valueRenderer ? (\n      valueRenderer({ amount, id, faded: expanded })\n    ) : (\n      <SecondaryText style={{ opacity: expanded ? 0.3 : 1 }}>\n        <Amount amount={amount} />\n      </SecondaryText>\n    )}\n  </NodeWrapper>\n);\n\nexport default ToggleNode;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport ListItem from \"./ListItem\";\nimport moment from \"moment\";\nimport { sumByProp } from \"../dataUtils\";\nimport EmptyText from \"./EmptyText\";\nimport DateSummaryTransaction from \"./DateSummaryTransaction\";\nimport ToggleNode from \"./ToggleNode\";\n\nconst Container = styled(ListItem)`\n  display: block;\n`;\n\nconst DateSummary = ({\n  categoriesById,\n  date,\n  expanded,\n  payeesById,\n  transactions,\n  onToggleExpanded\n}) => (\n  <Container>\n    <ToggleNode\n      amount={sumByProp(\"amount\")(transactions)}\n      expanded={expanded}\n      name={moment(date).calendar(null, {\n        sameDay: \"[Today]\",\n        nextDay: \"[Tomorrow]\",\n        nextWeek: \"dddd\",\n        lastDay: \"[Yesterday]\",\n        lastWeek: \"[Last] dddd\",\n        sameElse: \"DD/MM/YYYY\"\n      })}\n      onToggle={onToggleExpanded}\n      isCompact\n    />\n    <AnimateHeight isExpanded={expanded}>\n      <div style={{ paddingLeft: 18 }}>\n        {transactions.length ? (\n          transactions.map(transaction => (\n            <DateSummaryTransaction\n              key={transaction.id}\n              amount={transaction.amount}\n              payee={payeesById[transaction.payee_id]}\n              category={categoriesById[transaction.category_id]}\n              memo={transaction.memo}\n            />\n          ))\n        ) : (\n          <EmptyText style={{ margin: 0 }}>no transactions</EmptyText>\n        )}\n      </div>\n    </AnimateHeight>\n  </Container>\n);\n\nDateSummary.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  date: PropTypes.string.isRequired,\n  expanded: PropTypes.bool.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      category_id: PropTypes.string,\n      payee_id: PropTypes.string\n    })\n  ).isRequired,\n  onToggleExpanded: PropTypes.func.isRequired\n};\n\nexport default DateSummary;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { groupByProp } from \"../dataUtils\";\nimport moment from \"moment\";\nimport range from \"lodash/fp/range\";\nimport values from \"lodash/fp/values\";\nimport { SecondaryText } from \"./typeComponents\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport DateSummary from \"./DateSummary\";\n\nconst NUM_DAYS = 5;\n\nconst RecentSpending = ({\n  categoriesById,\n  currentMonth,\n  payeesById,\n  transactions\n}) => {\n  const transactionsByDate = groupByProp(\"date\")(transactions);\n  const recentDays = range(0, NUM_DAYS)\n    .map(n =>\n      moment()\n        .subtract(n, \"days\")\n        .format(\"YYYY-MM-DD\")\n    )\n    .filter(date => date.startsWith(currentMonth));\n\n  const [expanded, setExpanded] = useState(\n    recentDays.reduce((acc, date) => ({ ...acc, [date]: false }), {})\n  );\n\n  const isAllExpanded = values(expanded).every(e => e);\n\n  return (\n    <CollapsibleSection\n      title=\"Recent Spending\"\n      actions={\n        <SecondaryText\n          onClick={() => {\n            setExpanded(\n              recentDays.reduce(\n                (acc, date) => ({ ...acc, [date]: !isAllExpanded }),\n                {}\n              )\n            );\n          }}\n        >\n          {isAllExpanded ? \"collapse all\" : \"expand all\"}\n        </SecondaryText>\n      }\n    >\n      {recentDays.map(date => (\n        <DateSummary\n          key={date}\n          categoriesById={categoriesById}\n          date={date}\n          expanded={!!expanded[date]}\n          onToggleExpanded={() => {\n            setExpanded({ ...expanded, [date]: !expanded[date] });\n          }}\n          payeesById={payeesById}\n          transactions={transactionsByDate[date] || []}\n        />\n      ))}\n    </CollapsibleSection>\n  );\n};\n\nRecentSpending.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      date: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nexport default RecentSpending;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport {\n  getTransactionMonth,\n  isTransfer,\n  isStartingBalanceOrReconciliation,\n  isIncome,\n  sanitizeName\n} from \"../budgetUtils\";\nimport { notAny } from \"../dataUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport { useSelectedEntityId } from \"../commonHooks\";\nimport PageLayout from \"./PageLayout\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport RecentSpending from \"./RecentSpending\";\n\nconst CurrentMonthPage = ({\n  budget,\n  currentMonth,\n  historyAction,\n  investmentAccounts,\n  location,\n  sidebarTrigger,\n  title\n}) => {\n  const [selectedGroupId, onSelectGroupId] = useSelectedEntityId();\n\n  const {\n    categoryGroupsById,\n    categoriesById,\n    payeesById,\n    id: budgetId\n  } = budget;\n  const selectedGroup = selectedGroupId && categoryGroupsById[selectedGroupId];\n  const transactions = budget.transactions.filter(\n    notAny([\n      isIncome(budget),\n      isTransfer(investmentAccounts),\n      isStartingBalanceOrReconciliation(budget)\n    ])\n  );\n  const transactionsThisMonth = takeWhile(\n    transaction => getTransactionMonth(transaction) === currentMonth\n  )(transactions);\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <DayByDaySection\n            budgetId={budget.id}\n            currentMonth={currentMonth}\n            transactions={transactions}\n            highlightFunction={\n              selectedGroupId &&\n              (transaction =>\n                categoriesById[transaction.category_id].category_group_id ===\n                selectedGroupId)\n            }\n            title={\n              selectedGroup\n                ? `Day by Day: ${sanitizeName(selectedGroup.name)}`\n                : \"Day by Day\"\n            }\n          />\n          <RecentSpending\n            categoriesById={categoriesById}\n            currentMonth={currentMonth}\n            payeesById={payeesById}\n            transactions={transactionsThisMonth}\n          />\n          <GenericEntitiesSection\n            entitiesById={categoryGroupsById}\n            entityFunction={transaction =>\n              categoriesById[transaction.category_id].category_group_id\n            }\n            entityKey=\"category_group_id\"\n            linkFunction={groupId =>\n              makeLink(pages.currentMonthGroup.path, {\n                budgetId,\n                categoryGroupId: groupId\n              })\n            }\n            selectedEntityId={selectedGroupId}\n            title=\"Category Groups\"\n            transactions={transactionsThisMonth}\n            showTransactionCount\n            onClickEntity={onSelectGroupId}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nCurrentMonthPage.propTypes = {\n  budget: PropTypes.object.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.object.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default CurrentMonthPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport findIndex from \"lodash/fp/findIndex\";\nimport { selectedPlotBandColor } from \"../styleVariables\";\nimport Chart from \"./Chart\";\n\nconst MonthlyChart = ({\n  average,\n  data,\n  height,\n  series,\n  selectedMonth,\n  stacked,\n  onSelectMonth\n}) => {\n  const yearLines = [];\n  const plotBands = [];\n  const categories = data.map(d => moment(d.month).format(\"MMM\"));\n  let highlights = null;\n\n  if (selectedMonth) {\n    highlights = { months: [selectedMonth], color: selectedPlotBandColor };\n  }\n\n  data.forEach(({ month }, index) => {\n    if (moment(month).format(\"MMM\") === \"Jan\") {\n      yearLines.push({\n        color: \"#ccc\",\n        width: 1,\n        value: index - 0.5,\n        zIndex: 3\n      });\n    }\n  });\n\n  if (highlights) {\n    highlights.months.forEach(month => {\n      const index = findIndex(d => d.month === month)(data);\n      plotBands.push({\n        color: highlights.color,\n        from: index - 0.5,\n        to: index + 0.5\n      });\n    });\n  }\n\n  return (\n    <Chart\n      key={data.length}\n      options={{\n        chart: {\n          animation: false,\n          height,\n          type: \"column\",\n          events: {\n            click: event => {\n              onSelectMonth &&\n                onSelectMonth(data[Math.round(event.xAxis[0].value)].month);\n            }\n          }\n        },\n        xAxis: {\n          categories,\n          plotBands,\n          plotLines: yearLines\n        },\n        yAxis: {\n          endOnTick: false,\n          startOnTick: false,\n          gridLineColor: \"transparent\",\n          labels: { enabled: false },\n          title: { text: null },\n          plotLines: average && [\n            {\n              color: \"#aaa\",\n              dashStyle: \"Dot\",\n              width: 1,\n              value: -average,\n              zIndex: 2\n            }\n          ]\n        },\n        plotOptions: {\n          series: { animation: false, stacking: stacked ? \"normal\" : null }\n        },\n        series: series.map(s => {\n          if (s.type === \"line\") {\n            return {\n              color: s.color,\n              data: data.map(s.valueFunction),\n              enableMouseTracking: false,\n              type: \"line\"\n            };\n          }\n\n          return {\n            borderWidth: 0,\n            color: s.color,\n            data: data.map(s.valueFunction),\n            enableMouseTracking: false,\n            states: { hover: { brightness: 0 } }\n          };\n        })\n      }}\n    />\n  );\n};\n\nMonthlyChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      month: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  series: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string.isRequired,\n      valueFunction: PropTypes.func.isRequired,\n      type: PropTypes.oneOf([\"line\"])\n    })\n  ).isRequired,\n  average: PropTypes.number,\n  height: PropTypes.number,\n  selectedMonth: PropTypes.string,\n  stacked: PropTypes.bool,\n  onSelectMonth: PropTypes.func\n};\n\nMonthlyChart.defaultProps = { height: 140, stacked: true };\n\nexport default MonthlyChart;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { primaryColor } from \"../styleVariables\";\n\nconst PADDING = 2;\nconst WIDTH = 32;\nconst HEIGHT = 18;\n\nconst Track = styled.div`\n  box-sizing: border-box;\n  padding: ${PADDING}px;\n  display: inline-block;\n  width: ${WIDTH}px;\n  height: ${HEIGHT}px;\n  border-radius: ${HEIGHT / 2}px;\n  background-color: ${props => (props.on ? primaryColor : \"#ddd\")};\n  transition: background-color 0.15s ease-in-out;\n`;\n\nconst Handle = styled.div`\n  box-sizing: border-box;\n  height: ${HEIGHT - 2 * PADDING}px;\n  width: ${HEIGHT - 2 * PADDING}px;\n  border-radius: 50%;\n  background-color: #fff;\n  transform: translate3d(${props => (props.on ? WIDTH - HEIGHT : 0)}px, 0, 0);\n  transition: transform 0.15s ease-in-out;\n`;\n\nconst Toggle = ({ on, onClick }) => (\n  <Track on={on} onClick={onClick}>\n    <Handle on={on} />\n  </Track>\n);\n\nToggle.propTypes = {\n  on: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Toggle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Toggle from \"./Toggle\";\n\nconst Container = styled.div`\n  user-select: none;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px 0;\n`;\n\nconst Label = styled.div``;\n\nconst ToggleWithLabel = ({ label, name, checked, onChange }) => (\n  <Container\n    onClick={() => {\n      onChange({ target: { name, checked: !checked } });\n    }}\n  >\n    <Label>{label}</Label>\n    <Toggle\n      on={checked}\n      onClick={() => {\n        onChange({ target: { name, checked: !checked } });\n      }}\n    />\n  </Container>\n);\n\nToggleWithLabel.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default ToggleWithLabel;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"./Modal\";\nimport ToggleWithLabel from \"./ToggleWithLabel\";\nimport { MinorText } from \"./typeComponents\";\n\nconst MonthByMonthSettingsModal = ({\n  excludeFirstMonth,\n  excludeLastMonth,\n  open,\n  onClose,\n  onSetExclusion\n}) => (\n  <Modal open={open} onClose={onClose} title=\"Chart Settings\" width={240}>\n    <ToggleWithLabel\n      checked={excludeFirstMonth}\n      label=\"Exclude first month\"\n      name=\"excludeFirstMonth\"\n      onChange={() => {\n        onSetExclusion({ month: \"first\", exclude: !excludeFirstMonth });\n      }}\n    />\n    <ToggleWithLabel\n      checked={excludeLastMonth}\n      label=\"Exclude last month\"\n      name=\"excludeLastMonth\"\n      onChange={() => {\n        onSetExclusion({ month: \"last\", exclude: !excludeLastMonth });\n      }}\n    />\n    <MinorText style={{ marginTop: 5 }}>\n      Excluding incomplete months may lead to more representative averages\n    </MinorText>\n  </Modal>\n);\n\nMonthByMonthSettingsModal.propTypes = {\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired\n};\n\nexport default MonthByMonthSettingsModal;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport { groupBy, sumByProp } from \"../dataUtils\";\nimport { lightPrimaryColor, lighterPrimaryColor } from \"../styleVariables\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport MonthlyChart from \"./MonthlyChart\";\nimport MonthByMonthSettingsModal from \"./MonthByMonthSettingsModal\";\n\nconst MonthByMonthSection = ({\n  excludeFirstMonth,\n  excludeLastMonth,\n  highlightFunction,\n  months,\n  selectedMonth,\n  title,\n  transactions,\n  onSelectMonth,\n  onSetExclusion\n}) => {\n  const [settingsModalOpen, setSettingsModalOpen] = useState(false);\n\n  let total = 0;\n  let selectedMonthTotal = 0;\n\n  const transactionsByMonth = groupBy(getTransactionMonth)(transactions);\n  const data = months.map(month => {\n    const grouped = groupBy(highlightFunction || (() => false))(\n      transactionsByMonth[month] || []\n    );\n    const amount = sumByProp(\"amount\")(grouped.false || []);\n    const highlighted = sumByProp(\"amount\")(grouped.true || []);\n    total += highlightFunction ? highlighted : amount;\n    if (month === selectedMonth) {\n      selectedMonthTotal = highlightFunction ? highlighted : amount;\n    }\n\n    return { month, amount: -amount, highlighted: -highlighted };\n  });\n\n  const chartNumbers = selectedMonth\n    ? [\n        { amount: total / months.length, label: \"average\" },\n        {\n          amount: selectedMonthTotal,\n          label: moment(selectedMonth).format(\"MMM YYYY\")\n        }\n      ]\n    : [\n        { amount: total / months.length, label: \"average\" },\n        {\n          amount: total,\n          label: \"total\"\n        }\n      ];\n  const series = [\n    {\n      color: highlightFunction ? lightPrimaryColor : lighterPrimaryColor,\n      valueFunction: d => d.amount\n    }\n  ];\n\n  if (highlightFunction) {\n    series.push({\n      color: lighterPrimaryColor,\n      valueFunction: d => d.highlighted\n    });\n  }\n\n  return (\n    <CollapsibleSection\n      title={title}\n      hasSettings\n      onClickSettings={() => {\n        setSettingsModalOpen(true);\n      }}\n    >\n      <ChartNumbers numbers={chartNumbers} />\n      <MonthlyChart\n        data={data}\n        average={total / months.length}\n        series={series}\n        selectedMonth={selectedMonth}\n        onSelectMonth={onSelectMonth}\n      />\n      <MonthByMonthSettingsModal\n        excludeFirstMonth={excludeFirstMonth}\n        excludeLastMonth={excludeLastMonth}\n        open={settingsModalOpen}\n        onClose={() => {\n          setSettingsModalOpen(false);\n        }}\n        onSetExclusion={onSetExclusion}\n      />\n    </CollapsibleSection>\n  );\n};\n\nMonthByMonthSection.propTypes = {\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  highlightFunction: PropTypes.func,\n  selectedMonth: PropTypes.string,\n  title: PropTypes.string\n};\n\nMonthByMonthSection.defaultProps = { title: \"Month by Month\" };\n\nexport default MonthByMonthSection;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport {\n  useMonthExclusions,\n  useSelectedEntityId,\n  useSelectedMonth\n} from \"../commonHooks\";\nimport { notAny, simpleMemoize } from \"../dataUtils\";\nimport {\n  getFirstMonth,\n  getTransactionMonth,\n  isIncome,\n  isStartingBalanceOrReconciliation,\n  isTransfer,\n  sanitizeName\n} from \"../budgetUtils\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nconst getFilteredTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) => {\n    const firstMonth = getFirstMonth(budget);\n    const lastMonth = moment().format(\"YYYY-MM\");\n    return budget.transactions.filter(\n      notAny([\n        isStartingBalanceOrReconciliation(budget),\n        isTransfer(investmentAccounts),\n        transaction =>\n          excludeFirstMonth && getTransactionMonth(transaction) === firstMonth,\n        transaction =>\n          excludeLastMonth && getTransactionMonth(transaction) === lastMonth\n      ])\n    );\n  }\n);\n\nconst getFilteredIncomeTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) =>\n    getFilteredTransactions(\n      budget,\n      investmentAccounts,\n      excludeFirstMonth,\n      excludeLastMonth\n    )\n      .filter(transaction => isIncome(budget)(transaction))\n      .map(transaction => ({ ...transaction, amount: -transaction.amount }))\n);\n\nconst IncomePage = ({\n  budget,\n  historyAction,\n  investmentAccounts,\n  location,\n  sidebarTrigger,\n  title\n}) => {\n  const {\n    excludeFirstMonth,\n    excludeLastMonth,\n    months,\n    onSetExclusion\n  } = useMonthExclusions(budget);\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\n  const [selectedPayeeId, onSelectPayeeId] = useSelectedEntityId();\n\n  const { payeesById } = budget;\n  const filteredTransactions = getFilteredIncomeTransactions(\n    budget,\n    investmentAccounts,\n    excludeFirstMonth,\n    excludeLastMonth\n  );\n  const transactionsInSelectedMonth =\n    selectedMonth &&\n    filteredTransactions.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            highlightFunction={\n              selectedPayeeId &&\n              (transaction => transaction.payee_id === selectedPayeeId)\n            }\n            months={months}\n            selectedMonth={selectedMonth}\n            title={\n              selectedPayeeId\n                ? `Month by Month: ${sanitizeName(\n                    budget.payeesById[selectedPayeeId].name\n                  )}`\n                : \"Month by Month\"\n            }\n            transactions={filteredTransactions}\n            onSelectMonth={onSelectMonth}\n            onSetExclusion={onSetExclusion}\n          />\n          <GenericEntitiesSection\n            key={`payee-${selectedMonth || \"all\"}`}\n            entityKey=\"payee_id\"\n            entitiesById={payeesById}\n            title={\n              selectedMonth\n                ? `Payees: ${moment(selectedMonth).format(\"MMMM\")}`\n                : \"Payees\"\n            }\n            transactions={transactionsInSelectedMonth || filteredTransactions}\n            selectedEntityId={selectedPayeeId}\n            onClickEntity={onSelectPayeeId}\n            showAverageToggle={false}\n            showAverage={!selectedMonth}\n            numMonths={months.length}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nIncomePage.propTypes = {\n  budget: PropTypes.object.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.object.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default IncomePage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport get from \"lodash/fp/get\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\nimport ListItem from \"./ListItem\";\nimport Amount from \"./Amount\";\nimport LabelWithMinorText from \"./LabelWithMinorText\";\n\nconst Transaction = ({ category, payee, memo, date, amount, isContinuing }) => (\n  <ListItem isContinuing={isContinuing}>\n    <div style={{ overflow: \"hidden\" }}>\n      <LabelWithMinorText\n        label={get(\"name\")(payee) || \"(no payee)\"}\n        minorText={(get(\"name\")(category) || \"\") + (memo ? ` (${memo})` : \"\")}\n      />\n      <MinorText>{moment(date).format(\"dddd, MMM D\")}</MinorText>\n    </div>\n    <SecondaryText>\n      <Amount amount={amount} />\n    </SecondaryText>\n  </ListItem>\n);\n\nTransaction.propTypes = {\n  amount: PropTypes.number.isRequired,\n  date: PropTypes.string.isRequired,\n  category: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  }),\n  isContinuing: PropTypes.bool,\n  memo: PropTypes.string,\n  payee: PropTypes.shape({\n    name: PropTypes.string.isRequired\n  })\n};\n\nexport default Transaction;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Transaction from \"./Transaction\";\nimport NoTransactions from \"./NoTransactions\";\n\nconst TransactionsSection = ({\n  transactions,\n  title,\n  categoriesById,\n  payeesById\n}) => (\n  <CollapsibleSection title={title}>\n    {transactions.length ? (\n      transactions.map(\n        ({\n          id,\n          category_id: categoryId,\n          payee_id: payeeId,\n          date,\n          memo,\n          amount\n        }) => (\n          <Transaction\n            key={id}\n            amount={amount}\n            category={categoriesById[categoryId]}\n            date={date}\n            memo={memo}\n            payee={payeesById[payeeId]}\n          />\n        )\n      )\n    ) : (\n      <NoTransactions />\n    )}\n  </CollapsibleSection>\n);\n\nTransactionsSection.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      category_id: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      payee_id: PropTypes.string\n    })\n  ).isRequired,\n  title: PropTypes.string\n};\n\nTransactionsSection.defaultProps = { title: \"Transactions\" };\n\nexport default TransactionsSection;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport { sumByProp } from \"../dataUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport PageLayout from \"./PageLayout\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport TransactionsSection from \"./TransactionsSection\";\nimport { useSelectedEntityId } from \"../commonHooks\";\n\nconst CurrentMonthGroupPage = ({\n  budget,\n  categoryGroupId,\n  currentMonth,\n  historyAction,\n  location,\n  sidebarTrigger,\n  title\n}) => {\n  const [selectedCategoryId, onSelectCategoryId] = useSelectedEntityId();\n  const {\n    id: budgetId,\n    payeesById,\n    categories: allCategories,\n    categoriesById,\n    transactions: allTransactions\n  } = budget;\n\n  const selectedCategory =\n    selectedCategoryId && categoriesById[selectedCategoryId];\n  const categories = allCategories.filter(\n    category => category.category_group_id === categoryGroupId\n  );\n  const categoryIds = categories.map(category => category.id);\n  const transactionsInGroup = allTransactions.filter(transaction =>\n    categoryIds.includes(transaction.category_id)\n  );\n  const transactionsInGroupForMonth = transactionsInGroup.filter(\n    transaction => getTransactionMonth(transaction) === currentMonth\n  );\n  const highlightedTransactions =\n    selectedCategoryId &&\n    transactionsInGroupForMonth.filter(\n      transaction => transaction.category_id === selectedCategoryId\n    );\n\n  const spent = -sumByProp(\"activity\")(categories);\n  const available = sumByProp(\"balance\")(categories);\n\n  return (\n    <PageLayout\n      location={location}\n      historyAction={historyAction}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <DayByDaySection\n            budgetId={budgetId}\n            currentMonth={currentMonth}\n            highlightFunction={\n              selectedCategoryId &&\n              (transaction => transaction.category_id === selectedCategoryId)\n            }\n            title={\n              selectedCategory\n                ? `Day by Day: ${sanitizeName(selectedCategory.name)}`\n                : \"Day by Day\"\n            }\n            transactions={transactionsInGroup}\n            total={spent + available}\n          />\n          <GenericEntitiesSection\n            entityKey=\"category_id\"\n            entitiesById={categoriesById}\n            linkFunction={categoryId =>\n              makeLink(pages.currentMonthCategory.path, {\n                budgetId,\n                categoryGroupId,\n                categoryId\n              })\n            }\n            selectedEntityId={selectedCategoryId}\n            title=\"Categories\"\n            transactions={transactionsInGroupForMonth}\n            showTransactionCount\n            onClickEntity={onSelectCategoryId}\n          />\n          <TransactionsSection\n            categoriesById={categoriesById}\n            payeesById={payeesById}\n            transactions={\n              highlightedTransactions || transactionsInGroupForMonth\n            }\n            title={\n              selectedCategory\n                ? `Transactions: ${sanitizeName(selectedCategory.name)}`\n                : \"Transactions\"\n            }\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nCurrentMonthGroupPage.propTypes = {\n  budget: PropTypes.shape({\n    categories: PropTypes.array.isRequired,\n    id: PropTypes.string.isRequired,\n    payeesById: PropTypes.object.isRequired,\n    transactions: PropTypes.array.isRequired\n  }).isRequired,\n  categoryGroupId: PropTypes.string.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default CurrentMonthGroupPage;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport PageLayout from \"./PageLayout\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport TransactionsSection from \"./TransactionsSection\";\n\nconst CurrentMonthCategoryPage = ({\n  budget,\n  currentMonth,\n  categoryId,\n  historyAction,\n  location,\n  sidebarTrigger,\n  title\n}) => {\n  const {\n    id: budgetId,\n    payeesById,\n    categoriesById,\n    transactions: allTransactions\n  } = budget;\n\n  const category = categoriesById[categoryId];\n  const transactionsInCategory = allTransactions.filter(\n    transaction => transaction.category_id === categoryId\n  );\n  const transactionsInCategoryForMonth = transactionsInCategory.filter(\n    transaction => getTransactionMonth(transaction) === currentMonth\n  );\n\n  const spent = -category.activity;\n  const available = category.balance;\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <DayByDaySection\n            key={category ? category.name : \"day-by-day\"}\n            budgetId={budgetId}\n            currentMonth={currentMonth}\n            title=\"Day by Day\"\n            transactions={transactionsInCategory}\n            total={spent + available}\n          />\n          <TransactionsSection\n            categoriesById={categoriesById}\n            payeesById={payeesById}\n            transactions={transactionsInCategoryForMonth}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nCurrentMonthCategoryPage.propTypes = {\n  budget: PropTypes.shape({\n    categories: PropTypes.array.isRequired,\n    id: PropTypes.string.isRequired,\n    payeesById: PropTypes.object.isRequired,\n    transactions: PropTypes.array.isRequired\n  }).isRequired,\n  categoryGroupId: PropTypes.string.isRequired,\n  categoryId: PropTypes.string.isRequired,\n  currentMonth: PropTypes.string.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default CurrentMonthCategoryPage;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport { useTrendsShowAverage } from \"../commonHooks\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nconst GroupsPage = ({\n  budget,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  location,\n  months,\n  sidebarTrigger,\n  title,\n  transactions,\n  selectedMonth,\n  selectedGroupId,\n  onSelectGroup,\n  onSelectMonth,\n  onSetExclusion\n}) => {\n  const [showAverage, onToggleShowAverage] = useTrendsShowAverage(budget.id);\n\n  const { categoryGroupsById, categoriesById, id: budgetId } = budget;\n  const selectedGroup = selectedGroupId && categoryGroupsById[selectedGroupId];\n\n  const transactionsForMonth =\n    selectedMonth &&\n    transactions.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            highlightFunction={\n              selectedGroupId &&\n              (transaction =>\n                categoriesById[transaction.category_id].category_group_id ===\n                selectedGroupId)\n            }\n            months={months}\n            selectedMonth={selectedMonth}\n            title={\n              selectedGroup\n                ? `Month by Month: ${sanitizeName(selectedGroup.name)}`\n                : \"Month by Month\"\n            }\n            transactions={transactions}\n            onSelectMonth={onSelectMonth}\n            onSetExclusion={onSetExclusion}\n          />\n          <GenericEntitiesSection\n            key={selectedMonth || \"all\"}\n            entityFunction={transaction =>\n              categoriesById[transaction.category_id].category_group_id\n            }\n            entityKey=\"category_group_id\"\n            entitiesById={categoryGroupsById}\n            linkFunction={categoryGroupId =>\n              makeLink(pages.group.path, { budgetId, categoryGroupId })\n            }\n            selectedEntityId={selectedGroupId}\n            title={\n              selectedMonth\n                ? `Category Groups: ${moment(selectedMonth).format(\"MMMM\")}`\n                : \"Category Groups\"\n            }\n            transactions={transactionsForMonth || transactions}\n            onClickEntity={onSelectGroup}\n            numMonths={months.length}\n            showAverageToggle={!selectedMonth}\n            showAverage={showAverage && !selectedMonth}\n            onToggleAverage={onToggleShowAverage}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nGroupsPage.propTypes = {\n  budget: PropTypes.object.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectGroup: PropTypes.func.isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedGroupId: PropTypes.string,\n  selectedMonth: PropTypes.string\n};\n\nexport default GroupsPage;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Transaction from \"./Transaction\";\nimport NoTransactions from \"./NoTransactions\";\nimport SeeAll from \"./SeeAll\";\n\nconst LIMIT = 3;\n\nclass TransactionsByMonthSection extends Component {\n  static propTypes = {\n    categoriesById: PropTypes.object.isRequired,\n    payeesById: PropTypes.object.isRequired,\n    selectedMonth: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    limitShowing: PropTypes.bool,\n    selectedCategoryId: PropTypes.string,\n    selectedPayeeId: PropTypes.string\n  };\n\n  static defaultProps = { limitShowing: true };\n\n  state = { allMounted: false, showAll: false };\n\n  handleToggleShowAll = () => {\n    const { allMounted, showAll } = this.state;\n\n    if (allMounted) {\n      this.setState({ showAll: !showAll });\n    } else {\n      this.setState({ allMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ showAll: true });\n      });\n    }\n  };\n\n  render() {\n    const {\n      categoriesById,\n      payeesById,\n      selectedCategoryId,\n      selectedPayeeId,\n      selectedMonth,\n      transactions,\n      limitShowing: limitShowingProp\n    } = this.props;\n    const { allMounted, showAll } = this.state;\n\n    const selectedCategory =\n      selectedCategoryId && categoriesById[selectedCategoryId];\n    const selectedPayee = selectedPayeeId && payeesById[selectedPayeeId];\n    const month = moment(selectedMonth).format(\"MMMM\");\n    const transactionsForMonth = compose([\n      limitShowingProp\n        ? sortBy(\"amount\")\n        : transactions => transactions.reverse(),\n      transactions =>\n        transactions.filter(\n          transaction =>\n            getTransactionMonth(transaction) === selectedMonth &&\n            (!selectedCategoryId ||\n              transaction.category_id === selectedCategoryId) &&\n            (!selectedPayeeId || transaction.payee_id === selectedPayeeId)\n        )\n    ])(transactions);\n    const limitShowing =\n      limitShowingProp && transactionsForMonth.length > LIMIT + 2;\n    const topTransactions = limitShowing\n      ? transactionsForMonth.slice(0, LIMIT)\n      : transactionsForMonth;\n    const otherTransactions = limitShowing\n      ? transactionsForMonth.slice(LIMIT)\n      : [];\n\n    return (\n      <CollapsibleSection\n        title={\n          selectedPayee\n            ? `Transactions: ${month}, ${selectedPayee.name}`\n            : selectedCategory\n              ? `Transactions: ${month}, ${selectedCategory.name}`\n              : `Transactions: ${month}`\n        }\n      >\n        {topTransactions.length ? (\n          topTransactions.map(\n            ({\n              id,\n              date,\n              amount,\n              memo,\n              payee_id: payeeId,\n              category_id: categoryId\n            }) => (\n              <Transaction\n                key={id}\n                amount={amount}\n                category={categoriesById[categoryId]}\n                date={date}\n                memo={memo}\n                payee={payeesById[payeeId]}\n              />\n            )\n          )\n        ) : (\n          <NoTransactions />\n        )}\n        {allMounted && (\n          <AnimateHeight isExpanded={showAll}>\n            <Fragment>\n              {otherTransactions.map(\n                ({\n                  id,\n                  date,\n                  amount,\n                  payee_id: payeeId,\n                  category_id: categoryId\n                }) => (\n                  <Transaction\n                    key={id}\n                    amount={amount}\n                    category={categoriesById[categoryId]}\n                    date={date}\n                    payee={payeesById[payeeId]}\n                    isContinuing\n                  />\n                )\n              )}\n            </Fragment>\n          </AnimateHeight>\n        )}\n        {!!otherTransactions.length && (\n          <SeeAll\n            count={transactionsForMonth.length}\n            pluralizedName=\"transactions\"\n            showAll={showAll}\n            onToggle={this.handleToggleShowAll}\n          />\n        )}\n      </CollapsibleSection>\n    );\n  }\n}\n\nexport default TransactionsByMonthSection;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport { useTrendsShowAverage } from \"../commonHooks\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nconst GroupPage = ({\n  budget,\n  categoryGroupId,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  location,\n  months,\n  selectedMonth,\n  selectedCategoryId,\n  sidebarTrigger,\n  title,\n  transactions,\n  onSelectMonth,\n  onSelectCategory,\n  onSetExclusion\n}) => {\n  const [showAverage, onToggleShowAverage] = useTrendsShowAverage(budget.id);\n\n  const {\n    categories,\n    categoriesById,\n    categoryGroupsById,\n    payeesById,\n    id: budgetId\n  } = budget;\n  const categoryGroup = categoryGroupsById[categoryGroupId];\n  const selectedCategory =\n    selectedCategoryId && categoriesById[selectedCategoryId];\n  const categoriesInGroup = categories.filter(\n    category => category.category_group_id === categoryGroup.id\n  );\n  const categoryIds = categoriesInGroup.map(category => category.id);\n  const transactionsInGroup = transactions.filter(transaction =>\n    categoryIds.includes(transaction.category_id)\n  );\n  const transactionsInSelectedMonth =\n    selectedMonth &&\n    compose([\n      sortBy(\"amount\"),\n      transactions =>\n        transactions.filter(\n          transaction => getTransactionMonth(transaction) === selectedMonth\n        )\n    ])(transactionsInGroup);\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            months={months}\n            highlightFunction={\n              selectedCategoryId &&\n              (transaction => transaction.category_id === selectedCategoryId)\n            }\n            selectedMonth={selectedMonth}\n            title={\n              selectedCategory\n                ? `Month by Month: ${sanitizeName(selectedCategory.name)}`\n                : \"Month by Month\"\n            }\n            transactions={transactionsInGroup}\n            onSelectMonth={onSelectMonth}\n            onSetExclusion={onSetExclusion}\n          />\n          <GenericEntitiesSection\n            key={`categories-${selectedMonth || \"all\"}`}\n            entityKey=\"category_id\"\n            entitiesById={categoriesById}\n            linkFunction={categoryId =>\n              makeLink(pages.category.path, {\n                budgetId,\n                categoryGroupId: categoryGroup.id,\n                categoryId\n              })\n            }\n            title={\n              selectedMonth\n                ? `Categories: ${moment(selectedMonth).format(\"MMMM\")}`\n                : \"Categories\"\n            }\n            transactions={transactionsInSelectedMonth || transactionsInGroup}\n            selectedEntityId={selectedCategoryId}\n            onClickEntity={onSelectCategory}\n            showAverageToggle={!selectedMonth}\n            showAverage={showAverage && !selectedMonth}\n            numMonths={months.length}\n            onToggleAverage={onToggleShowAverage}\n            limitShowing\n          />\n          {selectedMonth &&\n            transactionsInSelectedMonth.length > 0 && (\n              <TransactionsByMonthSection\n                key={`transactions-${selectedMonth ||\n                  \"all\"}-${selectedCategoryId || \"all\"}`}\n                categoriesById={categoriesById}\n                payeesById={payeesById}\n                selectedMonth={selectedMonth}\n                selectedCategoryId={selectedCategoryId}\n                transactions={transactionsInSelectedMonth}\n              />\n            )}\n        </Fragment>\n      }\n    />\n  );\n};\n\nGroupPage.propTypes = {\n  budget: PropTypes.shape({\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        categoryId: PropTypes.string\n      })\n    ).isRequired,\n    payeesById: PropTypes.object.isRequired,\n    categoryGroupsById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  categoryGroupId: PropTypes.string.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectCategory: PropTypes.func.isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedCategoryId: PropTypes.string,\n  selectedMonth: PropTypes.string\n};\n\nexport default GroupPage;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst INITIAL_STATE = {\n  selectedMonth: null,\n  selectedGroupId: null,\n  selectedCategoryId: null,\n  selectedPayeeId: null\n};\n\nclass CategoriesState extends Component {\n  static propTypes = {\n    action: PropTypes.oneOf([\"PUSH\", \"POP\", \"REPLACE\"]).isRequired,\n    children: PropTypes.func.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  state = INITIAL_STATE;\n\n  cachedStates = {};\n\n  getSnapshotBeforeUpdate() {\n    return this.state;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { location, action } = this.props;\n\n    if (location === prevProps.location) {\n      return;\n    }\n\n    if (action === \"POP\") {\n      this.cachedStates[prevProps.location] = snapshot;\n      this.setState(this.cachedStates[location]);\n    }\n\n    if (action === \"PUSH\") {\n      this.cachedStates[prevProps.location] = snapshot;\n      this.setState(INITIAL_STATE);\n    }\n\n    if (action === \"REPLACE\") {\n      this.setState(INITIAL_STATE);\n    }\n  }\n\n  handleSelectMonth = month => {\n    this.setState(state => ({\n      ...state,\n      selectedMonth: state.selectedMonth === month ? null : month\n    }));\n  };\n\n  handleSelectGroup = groupId => {\n    this.setState(state => ({\n      ...state,\n      selectedGroupId: state.selectedGroupId === groupId ? null : groupId\n    }));\n  };\n\n  handleSelectCategory = categoryId => {\n    this.setState(state => ({\n      ...state,\n      selectedCategoryId:\n        state.selectedCategoryId === categoryId ? null : categoryId\n    }));\n  };\n\n  handleSelectPayee = payeeId => {\n    this.setState(state => ({\n      ...state,\n      selectedPayeeId: state.selectedPayeeId === payeeId ? null : payeeId\n    }));\n  };\n\n  render() {\n    return this.props.children({\n      ...this.state,\n      onSelectMonth: this.handleSelectMonth,\n      onSelectGroup: this.handleSelectGroup,\n      onSelectCategory: this.handleSelectCategory,\n      onSelectPayee: this.handleSelectPayee,\n      onSetExclusion: this.handleSetExclusion\n    });\n  }\n}\n\nexport default CategoriesState;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\n\nconst CategoryPage = ({\n  categoryId,\n  budget,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  location,\n  months,\n  selectedMonth,\n  selectedPayeeId,\n  sidebarTrigger,\n  title,\n  transactions,\n  onSelectMonth,\n  onSelectPayee,\n  onSetExclusion\n}) => {\n  const { categoriesById, payeesById, id: budgetId } = budget;\n  const category = categoriesById[categoryId];\n  const selectedPayee = selectedPayeeId && payeesById[selectedPayeeId];\n  const transactionsForCategory = transactions.filter(\n    transaction => transaction.category_id === categoryId\n  );\n  const transactionsForMonth =\n    selectedMonth &&\n    transactionsForCategory.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            months={months}\n            onSetExclusion={onSetExclusion}\n            highlightFunction={\n              selectedPayeeId &&\n              (transaction => transaction.payee_id === selectedPayeeId)\n            }\n            selectedMonth={selectedMonth}\n            title={\n              selectedPayee\n                ? `Month by Month: ${sanitizeName(selectedPayee.name)}`\n                : \"Month by Month\"\n            }\n            transactions={transactionsForCategory}\n            onSelectMonth={onSelectMonth}\n          />\n          <GenericEntitiesSection\n            key={`payees-${selectedMonth || \"all\"}`}\n            emptyName=\"(no payee)\"\n            entitiesById={payeesById}\n            entityKey=\"payee_id\"\n            linkFunction={payeeId =>\n              makeLink(pages.categoryPayee.path, {\n                budgetId,\n                categoryGroupId: category.category_group_id,\n                categoryId: categoryId,\n                payeeId\n              })\n            }\n            title={\n              selectedMonth\n                ? `Payees: ${moment(selectedMonth).format(\"MMMM\")}`\n                : \"Payees\"\n            }\n            transactions={transactionsForMonth || transactionsForCategory}\n            selectedEntityId={selectedPayeeId}\n            onClickEntity={onSelectPayee}\n            limitShowing\n          />\n          {selectedMonth &&\n            transactionsForMonth.length > 0 && (\n              <TransactionsByMonthSection\n                key={`transactions-${selectedMonth ||\n                  \"all\"}-${selectedPayeeId || \"all\"}`}\n                categoriesById={categoriesById}\n                payeesById={payeesById}\n                transactions={transactionsForMonth}\n                selectedMonth={selectedMonth}\n                selectedPayeeId={selectedPayeeId}\n              />\n            )}\n        </Fragment>\n      }\n    />\n  );\n};\n\nCategoryPage.propTypes = {\n  budget: PropTypes.shape({\n    categoriesById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        payee_id: PropTypes.string\n      })\n    ).isRequired,\n    payeesById: PropTypes.object.isRequired\n  }).isRequired,\n  categoryId: PropTypes.string.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSelectPayee: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string,\n  selectedPayeeId: PropTypes.string\n};\n\nexport default CategoryPage;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\n\nconst CategoryPayeePage = ({\n  budget,\n  categoryId,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  location,\n  months,\n  payeeId,\n  selectedMonth,\n  sidebarTrigger,\n  title,\n  transactions,\n  onSelectMonth,\n  onSetExclusion\n}) => {\n  const { categoriesById, payeesById } = budget;\n  const transactionsForCategoryAndPayee = transactions.filter(\n    transaction =>\n      transaction.category_id === categoryId && transaction.payee_id === payeeId\n  );\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      budget={budget}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            months={months}\n            selectedMonth={selectedMonth}\n            transactions={transactionsForCategoryAndPayee}\n            onSelectMonth={onSelectMonth}\n            onSetExclusion={onSetExclusion}\n          />\n          {selectedMonth && (\n            <TransactionsByMonthSection\n              categoriesById={categoriesById}\n              payeesById={payeesById}\n              selectedMonth={selectedMonth}\n              transactions={transactionsForCategoryAndPayee}\n              limitShowing={false}\n            />\n          )}\n        </Fragment>\n      }\n    />\n  );\n};\n\nCategoryPayeePage.propTypes = {\n  budget: PropTypes.shape({\n    payeesById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    categoriesById: PropTypes.objectOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  categoryId: PropTypes.string.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  payeeId: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      payee_id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string\n};\n\nexport default CategoryPayeePage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  primaryColor,\n  lightPrimaryColor,\n  negativeChartColor\n} from \"../styleVariables\";\nimport MonthlyChart from \"./MonthlyChart\";\n\nconst IncomeVsExpensesChart = ({ data, onSelectMonth, selectedMonth }) => (\n  <MonthlyChart\n    data={data}\n    height={160}\n    selectedMonth={selectedMonth}\n    series={[\n      { color: lightPrimaryColor, valueFunction: d => d.income },\n      { color: negativeChartColor, valueFunction: d => d.expenses },\n      {\n        type: \"line\",\n        color: primaryColor,\n        valueFunction: d => d.income + d.expenses\n      }\n    ]}\n    onSelectMonth={onSelectMonth}\n  />\n);\n\nIncomeVsExpensesChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      expenses: PropTypes.number.isRequired,\n      income: PropTypes.number.isRequired,\n      month: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string\n};\n\nexport default IncomeVsExpensesChart;\n","import React, { Component, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\nimport ListItem from \"./ListItem\";\nimport ToggleNode from \"./ToggleNode\";\n\nconst INDENTATION = 18;\n\nclass BreakdownNode extends Component {\n  static propTypes = {\n    amount: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n    isTopLevel: PropTypes.bool.isRequired,\n    name: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n    nodes: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ),\n    valueRenderer: PropTypes.func\n  };\n\n  state = { expanded: false, childrenMounted: false };\n\n  handleToggleExpand = () => {\n    const { expanded, childrenMounted } = this.state;\n\n    if (childrenMounted) {\n      this.setState({ expanded: !expanded });\n    } else {\n      this.setState({ childrenMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ expanded: true });\n      });\n    }\n  };\n\n  render() {\n    const { name, id, amount, nodes, isTopLevel, valueRenderer } = this.props;\n    const { expanded, childrenMounted } = this.state;\n    const hasChildNodes = !!nodes && nodes.length > 0;\n\n    return (\n      <Container hasChildNodes={hasChildNodes} isTopLevel={isTopLevel}>\n        {hasChildNodes ? (\n          <ToggleNode\n            id={id}\n            name={name}\n            amount={amount}\n            expanded={expanded}\n            onToggle={this.handleToggleExpand}\n            valueRenderer={valueRenderer}\n          />\n        ) : (\n          <LeafNode\n            id={id}\n            name={name}\n            amount={amount}\n            valueRenderer={valueRenderer}\n          />\n        )}\n\n        {hasChildNodes &&\n          childrenMounted && (\n            <AnimateHeight isExpanded={expanded}>\n              <Nodes nodes={nodes} valueRenderer={valueRenderer} />\n            </AnimateHeight>\n          )}\n      </Container>\n    );\n  }\n}\n\nclass Nodes extends PureComponent {\n  render() {\n    const { nodes, valueRenderer } = this.props;\n    return (\n      <div style={{ paddingLeft: INDENTATION }}>\n        {nodes.map(node => (\n          <BreakdownNode\n            {...node}\n            key={node.id}\n            isTopLevel={false}\n            valueRenderer={valueRenderer}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst NodeWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n  user-select: none;\n\n  ${ListItem}:first-child > & {\n    padding-top: 0;\n  }\n`;\n\nconst LeafNode = ({ name, id, amount, valueRenderer }) => (\n  <NodeWrapper>\n    <SecondaryText>{name}</SecondaryText>\n    {valueRenderer ? (\n      valueRenderer({ amount, id })\n    ) : (\n      <SecondaryText>\n        <Amount amount={amount} />\n      </SecondaryText>\n    )}\n  </NodeWrapper>\n);\n\nconst Container = ({ isTopLevel, hasChildNodes, children }) =>\n  isTopLevel ? (\n    <ListItem style={{ display: \"block\", padding: 0 }}>{children}</ListItem>\n  ) : (\n    children\n  );\n\nexport default BreakdownNode;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BreakdownNode from \"./BreakdownNode\";\n\nconst Breakdown = ({ nodes, valueRenderer }) =>\n  nodes.map(({ id, name, amount, nodes }) => (\n    <BreakdownNode\n      key={id}\n      id={id}\n      name={name}\n      amount={amount}\n      nodes={nodes}\n      valueRenderer={valueRenderer}\n      isTopLevel\n    />\n  ));\n\nBreakdown.propTypes = {\n  nodes: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n      name: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n      nodes: PropTypes.array\n    })\n  ).isRequired,\n  valueRenderer: PropTypes.func\n};\n\nBreakdown.defaultProps = { reverse: false };\n\nexport default Breakdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport concat from \"lodash/fp/concat\";\nimport mapRaw from \"lodash/fp/map\";\nimport omit from \"lodash/fp/omit\";\nimport pick from \"lodash/fp/pick\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { sumByProp, groupByProp } from \"../dataUtils\";\nimport { getPayeeNodes } from \"../budgetUtils\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\n\nconst map = mapRaw.convert({ cap: false });\n\nconst ExpensesBreakdown = ({\n  categoriesById,\n  categoryGroupsById,\n  transactions,\n  totalIncome,\n  payeesById,\n  divideBy\n}) => {\n  const categoryNodes = compose([\n    map((transactions, categoryId) => {\n      const payeeNodes = getPayeeNodes({ payeesById, transactions }, divideBy);\n      return {\n        ...pick([\"id\", \"name\", \"category_group_id\"])(\n          categoriesById[categoryId]\n        ),\n        nodes: sortBy(\"amount\")(payeeNodes),\n        amount: sumByProp(\"amount\")(payeeNodes)\n      };\n    }),\n    groupByProp(\"category_id\")\n  ])(transactions);\n\n  const groupNodes = compose([\n    map((nodes, categoryGroupId) => {\n      const categoryNodes = map(omit(\"category_group_id\"))(nodes);\n      return {\n        ...pick([\"id\", \"name\"])(categoryGroupsById[categoryGroupId]),\n        nodes: sortBy(\"amount\")(categoryNodes),\n        amount: sumByProp(\"amount\")(categoryNodes)\n      };\n    }),\n    groupByProp(\"category_group_id\")\n  ])(categoryNodes);\n\n  const rootPayeeNodes = getPayeeNodes(\n    {\n      payeesById,\n      transactions: transactions.filter(transaction => !transaction.category_id)\n    },\n    divideBy\n  );\n\n  const nodes = compose([\n    nodes =>\n      concat(nodes)([\n        {\n          id: \"net\",\n          amount: -totalIncome - sumByProp(\"amount\")(nodes),\n          name: \"Net Income\"\n        }\n      ]),\n    sortBy(\"amount\"),\n    concat(rootPayeeNodes)\n  ])(groupNodes);\n\n  return (\n    <CollapsibleSection title=\"Expenses Breakdown\">\n      <Breakdown\n        nodes={nodes}\n        valueRenderer={node => (\n          <AmountWithPercentage {...node} positiveIsRed total={-totalIncome} />\n        )}\n      />\n    </CollapsibleSection>\n  );\n};\n\nExpensesBreakdown.propTypes = {\n  categoriesById: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      category_group_id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  categoryGroupsById: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  divideBy: PropTypes.number.isRequired,\n  payeesById: PropTypes.objectOf(PropTypes.object).isRequired,\n  totalIncome: PropTypes.number.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      category_id: PropTypes.string\n    })\n  ).isRequired\n};\n\nExpensesBreakdown.defaultProps = { divideBy: 1 };\n\nexport default ExpensesBreakdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport { getPayeeNodes } from \"../budgetUtils\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\n\nconst IncomeBreakdown = ({ transactions, payeesById, divideBy }) => {\n  const nodes = getPayeeNodes({ payeesById, transactions }, divideBy);\n  const total = sumBy(\"amount\")(nodes);\n  return (\n    <CollapsibleSection title=\"Income Breakdown\">\n      <Breakdown\n        nodes={sortBy(\"amount\")(nodes).reverse()}\n        total={total}\n        valueRenderer={node => <AmountWithPercentage {...node} total={total} />}\n      />\n    </CollapsibleSection>\n  );\n};\n\nIncomeBreakdown.propTypes = {\n  divideBy: PropTypes.number.isRequired,\n  payeesById: PropTypes.objectOf(PropTypes.object).isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      categoryId: PropTypes.string\n    })\n  ).isRequired\n};\n\nIncomeBreakdown.defaultProps = { divideBy: 1 };\n\nexport default IncomeBreakdown;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { sumByProp } from \"../dataUtils\";\nimport ExpensesBreakdown from \"./ExpensesBreakdown\";\nimport IncomeBreakdown from \"./IncomeBreakdown\";\n\nconst Breakdowns = ({\n  categoriesById,\n  categoryGroupsById,\n  payeesById,\n  expenseTransactions,\n  incomeTransactions,\n  divideBy\n}) => (\n  <Fragment>\n    <ExpensesBreakdown\n      categoriesById={categoriesById}\n      categoryGroupsById={categoryGroupsById}\n      payeesById={payeesById}\n      transactions={expenseTransactions}\n      totalIncome={sumByProp(\"amount\")(incomeTransactions) / divideBy}\n      divideBy={divideBy}\n    />\n    <IncomeBreakdown\n      payeesById={payeesById}\n      transactions={incomeTransactions}\n      divideBy={divideBy}\n    />\n  </Fragment>\n);\n\nBreakdowns.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  categoryGroupsById: PropTypes.object.isRequired,\n  expenseTransactions: PropTypes.array.isRequired,\n  incomeTransactions: PropTypes.array.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  divideBy: PropTypes.number.isRequired\n};\n\nexport default Breakdowns;\n","import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport find from \"lodash/fp/find\";\nimport flatMap from \"lodash/fp/flatMap\";\nimport mapRaw from \"lodash/fp/map\";\nimport matchesProperty from \"lodash/fp/matchesProperty\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { sumByProp, groupBy, simpleMemoize } from \"../dataUtils\";\nimport { getTransactionMonth, isIncome } from \"../budgetUtils\";\nimport { SecondaryText } from \"./typeComponents\";\nimport PageLayout from \"./PageLayout\";\nimport IncomeVsExpensesChart from \"./IncomeVsExpensesChart\";\nimport Breakdowns from \"./Breakdowns\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport MonthByMonthSettingsModal from \"./MonthByMonthSettingsModal\";\nimport { useSelectedMonth } from \"../commonHooks\";\n\nconst map = mapRaw.convert({ cap: false });\n\nconst getSummaries = simpleMemoize((transactions, investmentAccounts, budget) =>\n  compose([\n    sortBy(\"month\"),\n    map((transactions, month) => {\n      const grouped = groupBy(isIncome(budget))(transactions);\n\n      return {\n        month,\n        expenseTransactions: grouped.false || [],\n        incomeTransactions: grouped.true || [],\n        income: sumByProp(\"amount\")(grouped.true || []),\n        expenses: sumByProp(\"amount\")(grouped.false || [])\n      };\n    }),\n    groupBy(getTransactionMonth)\n  ])(transactions)\n);\n\nconst IncomeVsExpensesPage = ({\n  budget,\n  excludeFirstMonth,\n  excludeLastMonth,\n  historyAction,\n  investmentAccounts,\n  location,\n  sidebarTrigger,\n  title,\n  transactions,\n  onSetExclusion\n}) => {\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\n  const [settingsModalOpen, setSettingsModalOpen] = useState(false);\n  const [showTotals, setShowTotals] = useState(false);\n  const { categoriesById, categoryGroupsById, payeesById } = budget;\n\n  const allSummaries = getSummaries(transactions, investmentAccounts, budget);\n  const summaries = selectedMonth\n    ? [find(matchesProperty(\"month\", selectedMonth))(allSummaries)]\n    : allSummaries;\n\n  const incomeTransactions = flatMap(summary => summary.incomeTransactions)(\n    summaries\n  );\n  const expenseTransactions = flatMap(summary => summary.expenseTransactions)(\n    summaries\n  );\n\n  const totalExpenses = sumByProp(\"amount\")(expenseTransactions);\n  const totalIncome = sumByProp(\"amount\")(incomeTransactions);\n  const denominator = showTotals ? 1 : summaries.length;\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <CollapsibleSection\n            title=\"Monthly Trend\"\n            hasSettings\n            onClickSettings={() => {\n              setSettingsModalOpen(true);\n            }}\n            actions={\n              <SecondaryText\n                onClick={() => {\n                  setShowTotals(!showTotals);\n                }}\n              >\n                {showTotals ? \"show average\" : \"show total\"}\n              </SecondaryText>\n            }\n          >\n            <ChartNumbers\n              numbers={[\n                {\n                  label: \"net income\",\n                  amount: -(totalExpenses + totalIncome) / denominator\n                },\n                {\n                  label: \"expenses\",\n                  amount: totalExpenses / denominator\n                },\n                {\n                  label: \"income\",\n                  amount: -totalIncome / denominator\n                }\n              ]}\n            />\n            <IncomeVsExpensesChart\n              data={allSummaries}\n              selectedMonth={selectedMonth}\n              onSelectMonth={onSelectMonth}\n            />\n            <MonthByMonthSettingsModal\n              excludeFirstMonth={excludeFirstMonth}\n              excludeLastMonth={excludeLastMonth}\n              open={settingsModalOpen}\n              onClose={() => {\n                setSettingsModalOpen(false);\n              }}\n              onSetExclusion={onSetExclusion}\n            />\n          </CollapsibleSection>\n          <Breakdowns\n            categoriesById={categoriesById}\n            categoryGroupsById={categoryGroupsById}\n            payeesById={payeesById}\n            expenseTransactions={expenseTransactions}\n            incomeTransactions={incomeTransactions}\n            divideBy={showTotals ? 1 : summaries.length}\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nIncomeVsExpensesPage.propTypes = {\n  budget: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    months: PropTypes.arrayOf(\n      PropTypes.shape({\n        month: PropTypes.string.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.object.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onSetExclusion: PropTypes.func.isRequired\n};\n\nexport default IncomeVsExpensesPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport includes from \"lodash/fp/includes\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport { groupBy } from \"../dataUtils\";\nimport {\n  primaryColor,\n  lightPrimaryColor,\n  negativeChartColor\n} from \"../styleVariables\";\nimport MonthlyChart from \"./MonthlyChart\";\n\nconst CREDIT_ACCOUNTS = [\"mortgage\", \"creditCard\"];\nconst getStack = ({ type, id, mortgageAccounts }) => {\n  if (mortgageAccounts[id]) {\n    return \"liability\";\n  }\n\n  return includes(type)(CREDIT_ACCOUNTS) ? \"liability\" : \"asset\";\n};\n\nconst NetWorthChart = ({\n  data,\n  months,\n  mortgageAccounts,\n  selectedMonth,\n  onSelectMonth\n}) => {\n  const groupedData = groupBy(d =>\n    getStack({ type: d.type, id: d.id, mortgageAccounts })\n  )(data);\n  const monthlyData = months.map((month, index) => ({\n    month,\n    assets: sumBy(d => d.data[index])(groupedData.asset),\n    liabilities: sumBy(d => d.data[index])(groupedData.liability)\n  }));\n\n  return (\n    <MonthlyChart\n      selectedMonth={selectedMonth}\n      onSelectMonth={onSelectMonth}\n      data={monthlyData}\n      height={160}\n      series={[\n        {\n          color: negativeChartColor,\n          valueFunction: d => Math.max(-d.liabilities, 0)\n        },\n        {\n          color: lightPrimaryColor,\n          valueFunction: d => Math.max(d.assets, 0)\n        },\n        {\n          color: primaryColor,\n          type: \"line\",\n          valueFunction: d => d.assets + d.liabilities\n        }\n      ]}\n      stacked={false}\n    />\n  );\n};\n\nNetWorthChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(PropTypes.number).isRequired,\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string\n};\n\nexport default NetWorthChart;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport every from \"lodash/fp/every\";\nimport filter from \"lodash/fp/filter\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport mapRaw from \"lodash/fp/map\";\nimport propEq from \"lodash/fp/propEq\";\nimport reject from \"lodash/fp/reject\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport startCase from \"lodash/fp/startCase\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport values from \"lodash/fp/values\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\nimport Icon from \"./Icon\";\n\nconst map = mapRaw.convert({ cap: false });\n\nconst getNodes = ({ accounts, investmentAccounts, mortgageAccounts }) => {\n  const accountsByGroup = groupBy(account => {\n    if (investmentAccounts[account.id]) {\n      return \"Investments\";\n    }\n\n    if (mortgageAccounts[account.id]) {\n      return \"Mortgages\";\n    }\n\n    return startCase(account.type);\n  })(accounts);\n\n  return compose([\n    accounts => accounts.reverse(),\n    sortBy(\"amount\"),\n    map((accounts, name) => ({\n      name,\n      accounts,\n      amount: sumBy(\"balance\")(accounts),\n      id: name,\n      nodes: compose([\n        sortBy(\"balance\"),\n        map(({ id, name, balance }) => ({\n          amount: balance,\n          id,\n          name\n        }))\n      ])(accounts)\n    }))\n  ])(accountsByGroup);\n};\n\nconst NetWorthAccounts = ({\n  accounts,\n  hiddenAccounts,\n  onToggleAccounts,\n  investmentAccounts,\n  mortgageAccounts\n}) => {\n  const accountsById = keyBy(\"id\")(accounts);\n  const visibleNodes = getNodes({\n    accounts: reject(account => hiddenAccounts[account.id])(accounts),\n    investmentAccounts,\n    mortgageAccounts\n  });\n  const hiddenNodes = getNodes({\n    accounts: filter(account => hiddenAccounts[account.id])(accounts),\n    investmentAccounts,\n    mortgageAccounts\n  });\n\n  return (\n    <Fragment>\n      <CollapsibleSection title=\"Accounts\">\n        <AccountBreakdown\n          accountsById={accountsById}\n          hiddenAccounts={hiddenAccounts}\n          nodes={visibleNodes}\n          onToggleAccounts={onToggleAccounts}\n        />\n      </CollapsibleSection>\n\n      {values(hiddenNodes).length > 0 && (\n        <CollapsibleSection title=\"Hidden Accounts\">\n          <AccountBreakdown\n            accountsById={accountsById}\n            hiddenAccounts={hiddenAccounts}\n            nodes={hiddenNodes}\n            onToggleAccounts={onToggleAccounts}\n          />\n        </CollapsibleSection>\n      )}\n    </Fragment>\n  );\n};\n\nNetWorthAccounts.propTypes = {\n  accounts: PropTypes.arrayOf(\n    PropTypes.shape({\n      balance: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  hiddenAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onToggleAccounts: PropTypes.func.isRequired\n};\n\nconst AccountBreakdown = ({\n  accountsById,\n  hiddenAccounts,\n  nodes,\n  onToggleAccounts\n}) => (\n  <Breakdown\n    nodes={nodes}\n    valueRenderer={({ id, amount }) => {\n      const node = nodes.find(propEq(\"id\", id));\n      const accounts = node ? node.accounts : [accountsById[id]];\n\n      return (\n        <SecondaryText style={{ display: \"flex\", alignItems: \"center\" }}>\n          <Amount amount={amount} />\n          <div\n            style={{ width: 36, textAlign: \"center\" }}\n            onClick={evt => {\n              evt.stopPropagation();\n              onToggleAccounts({ ids: map(\"id\")(accounts) });\n            }}\n          >\n            {every(account => hiddenAccounts[account.id])(accounts) ? (\n              <Icon icon=\"eye-slash\" />\n            ) : (\n              <Icon icon=\"eye\" />\n            )}\n          </div>\n        </SecondaryText>\n      );\n    }}\n  />\n);\n\nexport default NetWorthAccounts;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport constant from \"lodash/fp/constant\";\nimport eq from \"lodash/fp/eq\";\nimport filter from \"lodash/fp/filter\";\nimport findIndex from \"lodash/fp/findIndex\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport identity from \"lodash/fp/identity\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport keys from \"lodash/fp/keys\";\nimport last from \"lodash/fp/last\";\nimport map from \"lodash/fp/map\";\nimport mapValues from \"lodash/fp/mapValues\";\nimport omitBy from \"lodash/fp/omitBy\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sum from \"lodash/fp/sum\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport values from \"lodash/fp/values\";\nimport { simpleMemoize } from \"../dataUtils\";\nimport { getSetting, setSetting } from \"../uiRepo\";\nimport PageLayout from \"./PageLayout\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport NetWorthChart from \"./NetWorthChart\";\nimport NetWorthAccounts from \"./NetWorthAccounts\";\n\nconst cumulative = arr =>\n  arr.reduce(\n    (acc, curr) => (acc.length === 0 ? [curr] : acc.concat(last(acc) + curr)),\n    []\n  );\n\nclass NetWorthPage extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      accounts: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          name: PropTypes.string.isRequired,\n          type: PropTypes.string.isRequired\n        })\n      ).isRequired,\n      accountsById: PropTypes.objectOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          name: PropTypes.string.isRequired,\n          type: PropTypes.string.isRequired\n        })\n      ).isRequired,\n      transactions: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          account_id: PropTypes.string.isRequired,\n          amount: PropTypes.number.isRequired,\n          date: PropTypes.string.isRequired\n        })\n      ).isRequired\n    }).isRequired,\n    historyAction: PropTypes.string.isRequired,\n    investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    location: PropTypes.string.isRequired,\n    mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    sidebarTrigger: PropTypes.node.isRequired,\n    title: PropTypes.string.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hiddenAccounts: getSetting(\"netWorthHiddenAccounts\", props.budget.id),\n      selectedMonth: null\n    };\n  }\n\n  groupByMonthAndAccount = simpleMemoize(\n    compose([\n      mapValues(groupBy(\"account_id\")),\n      groupBy(({ date }) => date.slice(0, 7))\n    ])\n  );\n\n  getMonths = simpleMemoize(budget =>\n    compose([sortBy(identity), keys, this.groupByMonthAndAccount])(\n      budget.transactions\n    )\n  );\n\n  getSummaryByAccount = simpleMemoize(budget => {\n    const groupedTransactions = this.groupByMonthAndAccount(\n      budget.transactions\n    );\n    const months = this.getMonths(budget);\n    return map(({ id }) => ({\n      id,\n      data: compose([\n        cumulative,\n        map(month => sumBy(\"amount\")(groupedTransactions[month][id]))\n      ])(months)\n    }))(budget.accounts);\n  });\n\n  getSelectedBalances = simpleMemoize((selectedMonth, budget) => {\n    const months = this.getMonths(budget);\n    const selectedMonthIndex = findIndex(eq(selectedMonth))(months);\n    const accountSummaries = this.getSummaryByAccount(budget);\n\n    return compose([\n      mapValues(\n        ({ data }) =>\n          selectedMonthIndex > -1 ? data[selectedMonthIndex] : last(data)\n      ),\n      keyBy(\"id\")\n    ])(accountSummaries);\n  });\n\n  handleSelectMonth = month => {\n    this.setState(state => ({\n      ...state,\n      selectedMonth: state.selectedMonth === month ? null : month\n    }));\n  };\n\n  handleToggleAccounts = ({ ids }) => {\n    const { budget } = this.props;\n    const { hiddenAccounts } = this.state;\n    const shouldHide = ids.some(id => !hiddenAccounts[id]);\n    const newHiddenAccounts = ids.reduce(\n      (acc, id) => ({ ...acc, [id]: shouldHide }),\n      hiddenAccounts\n    );\n\n    this.setState({ hiddenAccounts: newHiddenAccounts });\n    setSetting(\"netWorthHiddenAccounts\", budget.id, newHiddenAccounts);\n  };\n\n  render() {\n    const {\n      budget,\n      historyAction,\n      investmentAccounts,\n      location,\n      mortgageAccounts,\n      sidebarTrigger,\n      title\n    } = this.props;\n    const { hiddenAccounts, selectedMonth } = this.state;\n\n    const months = this.getMonths(budget);\n    const accountSummaries = this.getSummaryByAccount(budget);\n    const selectedBalances = this.getSelectedBalances(selectedMonth, budget);\n    const filterHidden = omitBy((_, id) => hiddenAccounts[id]);\n    const selectedLiabilities = compose([\n      sum,\n      filter(b => b < 0),\n      values,\n      filterHidden\n    ])(selectedBalances);\n    const selectedAssets = compose([\n      sum,\n      filter(b => b > 0),\n      values,\n      filterHidden\n    ])(selectedBalances);\n\n    return (\n      <PageLayout\n        historyAction={historyAction}\n        location={location}\n        sidebarTrigger={sidebarTrigger}\n        title={title}\n        content={\n          <Fragment>\n            <CollapsibleSection title=\"Monthly Trend\">\n              <ChartNumbers\n                numbers={[\n                  {\n                    amount: -(selectedAssets + selectedLiabilities),\n                    label: \"Net Worth\"\n                  },\n                  { amount: -selectedAssets, label: \"Assets\" },\n                  { amount: selectedLiabilities, label: \"Liabilities\" }\n                ]}\n                alwaysRound\n              />\n              <NetWorthChart\n                data={map(({ id, data }) => ({\n                  data: hiddenAccounts[id] ? data.map(constant(0)) : data,\n                  type: budget.accountsById[id].type,\n                  id\n                }))(accountSummaries)}\n                months={months}\n                mortgageAccounts={mortgageAccounts}\n                selectedMonth={selectedMonth}\n                onSelectMonth={this.handleSelectMonth}\n              />\n            </CollapsibleSection>\n            <NetWorthAccounts\n              accounts={map(account => ({\n                ...account,\n                balance: selectedBalances[account.id]\n              }))(budget.accounts)}\n              hiddenAccounts={hiddenAccounts}\n              investmentAccounts={investmentAccounts}\n              mortgageAccounts={mortgageAccounts}\n              onToggleAccounts={this.handleToggleAccounts}\n            />\n          </Fragment>\n        }\n      />\n    );\n  }\n}\n\nexport default NetWorthPage;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/fp/keys\";\nimport get from \"lodash/fp/get\";\nimport EmptyText from \"./EmptyText\";\nimport { Link } from \"react-router-dom\";\nimport pages, { makeLink } from \"../pages\";\nimport PageLayout from \"./PageLayout\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport {\n  useMonthExclusions,\n  useSelectedEntityId,\n  useSelectedMonth\n} from \"../commonHooks\";\n\nconst isContribution = investmentAccounts => transaction =>\n  !!investmentAccounts[transaction.account_id] &&\n  !!transaction.transfer_account_id &&\n  !investmentAccounts[transaction.transfer_account_id];\n\nconst isCapitalGainOrLoss = (investmentAccounts, payeesById) => transaction =>\n  !!investmentAccounts[transaction.account_id] &&\n  !transaction.transfer_account_id &&\n  get([transaction.payee_id, \"name\"])(payeesById) !== \"Starting Balance\";\n\nconst isInvestmentTransaction = (\n  investmentAccounts,\n  payeesById\n) => transaction =>\n  isContribution(investmentAccounts)(transaction) ||\n  isCapitalGainOrLoss(investmentAccounts, payeesById)(transaction);\n\nconst InvestmentsPage = ({\n  budget,\n  historyAction,\n  investmentAccounts,\n  location,\n  sidebarTrigger,\n  title\n}) => {\n  const {\n    excludeFirstMonth,\n    excludeLastMonth,\n    months,\n    onSetExclusion\n  } = useMonthExclusions(budget);\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\n  const [selectedBreakdown, onSelectBreakdown] = useSelectedEntityId();\n\n  const { payeesById } = budget;\n\n  if (keys(investmentAccounts).length === 0) {\n    return (\n      <EmptyText>\n        You don't have any accounts marked as investment accounts.{\" \"}\n        <Link to={makeLink(pages.settings.path, { budgetId: budget.id })}>\n          Go to Settings\n        </Link>\n      </EmptyText>\n    );\n  }\n\n  const investmentTransactions = budget.transactions\n    .filter(isInvestmentTransaction(investmentAccounts, payeesById))\n    .map(transaction => ({ ...transaction, amount: -transaction.amount }));\n  const transactionsInMonth =\n    selectedMonth &&\n    investmentTransactions.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <PageLayout\n      historyAction={historyAction}\n      location={location}\n      sidebarTrigger={sidebarTrigger}\n      title={title}\n      content={\n        <Fragment>\n          <MonthByMonthSection\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            highlightFunction={\n              selectedBreakdown &&\n              (transaction =>\n                selectedBreakdown === \"contribution\"\n                  ? isContribution(investmentAccounts)(transaction)\n                  : isCapitalGainOrLoss(investmentAccounts, payeesById)(\n                      transaction\n                    ))\n            }\n            months={months}\n            selectedMonth={selectedMonth}\n            transactions={investmentTransactions}\n            onSelectMonth={onSelectMonth}\n            onSetExclusion={onSetExclusion}\n          />\n          <GenericEntitiesSection\n            transactions={transactionsInMonth || investmentTransactions}\n            entitiesById={{\n              contribution: { name: \"Contributions\" },\n              capitalGain: { name: \"Capital Gains/Losses\" }\n            }}\n            title=\"Growth Breakdown\"\n            onClickEntity={onSelectBreakdown}\n            selectedEntityId={selectedBreakdown}\n            entityFunction={transaction =>\n              isContribution(investmentAccounts)(transaction)\n                ? \"contribution\"\n                : \"capitalGain\"\n            }\n            positiveIsRed\n          />\n        </Fragment>\n      }\n    />\n  );\n};\n\nInvestmentsPage.propTypes = {\n  budget: PropTypes.object.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  investmentAccounts: PropTypes.object.isRequired,\n  location: PropTypes.string.isRequired,\n  sidebarTrigger: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default InvestmentsPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  primaryColor,\n  negativeColor,\n  selectedPlotBandColor\n} from \"../styleVariables\";\nimport Chart from \"./Chart\";\n\nconst ProjectionsChart = ({\n  investmentsProjection,\n  mortgageProjection,\n  amountNeededToRetire,\n  yearsUntilRetirement\n}) => (\n  <Chart\n    options={{\n      chart: {\n        type: \"column\"\n      },\n      xAxis: {\n        type: \"category\",\n        plotBands: [\n          {\n            color: selectedPlotBandColor,\n            from: Math.floor(yearsUntilRetirement) - 0.5,\n            to: Math.floor(yearsUntilRetirement) + 0.5\n          }\n        ]\n      },\n      yAxis: {\n        title: { text: null },\n        endOnTick: false,\n        plotLines: [\n          {\n            value: amountNeededToRetire,\n            color: \"#ccc\",\n            width: 1\n          }\n        ]\n      },\n      legend: {\n        enabled: false\n      },\n      series: [\n        { data: investmentsProjection, color: primaryColor, borderWidth: 0 },\n        { data: mortgageProjection, color: negativeColor, borderWidth: 0 }\n      ]\n    }}\n  />\n);\n\nProjectionsChart.propTypes = {\n  amountNeededToRetire: PropTypes.number.isRequired,\n  investmentsProjection: PropTypes.arrayOf(PropTypes.number).isRequired,\n  mortgageProjection: PropTypes.arrayOf(PropTypes.number).isRequired,\n  yearsUntilRetirement: PropTypes.number.isRequired\n};\n\nexport default ProjectionsChart;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst isDescendant = (parent, child) => {\n  let node = child.parentNode;\n  while (node !== null) {\n    if (node === parent) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n  return false;\n};\n\nclass ClickOff extends Component {\n  static propTypes = {\n    children: PropTypes.func.isRequired,\n    onClickOff: PropTypes.func\n  };\n\n  parent = null;\n\n  componentDidMount() {\n    document.body.addEventListener(\"click\", this.handleBodyClick);\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener(\"click\", this.handleBodyClick);\n  }\n\n  handleBodyClick = evt => {\n    if (this.props.onClickOff && !isDescendant(this.parent, evt.target)) {\n      this.props.onClickOff();\n    }\n  };\n\n  render() {\n    return this.props.children({\n      ref: el => {\n        this.parent = el;\n      }\n    });\n  }\n}\n\nexport default ClickOff;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport ClickOff from \"./ClickOff\";\nimport Button from \"./Button\";\n\nconst bodyEl = document.getElementsByTagName(\"body\")[0];\n\nconst Container = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: #fff;\n`;\n\nconst ProjectionsSlider = ({\n  name,\n  formatter,\n  label,\n  value,\n  onBlur,\n  onChange,\n  onReset,\n  rangeOptions\n}) =>\n  createPortal(\n    <ClickOff onClickOff={name && onBlur}>\n      {({ ref }) => (\n        <Container ref={ref}>\n          <AnimateHeight isExpanded={!!name}>\n            <div style={{ borderTop: \"1px solid #bbb\", padding: \"15px 20px\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  marginBottom: 15\n                }}\n              >\n                {label}: {formatter(value || 0)}\n                <Button\n                  onClick={() => {\n                    onReset(name);\n                  }}\n                >\n                  reset\n                </Button>\n              </div>\n              <Range\n                {...rangeOptions}\n                name={name}\n                value={value || 0}\n                onChange={onChange}\n              />\n            </div>\n          </AnimateHeight>\n        </Container>\n      )}\n    </ClickOff>,\n    bodyEl\n  );\n\nProjectionsSlider.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n  formatter: PropTypes.func,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.number\n};\n\nProjectionsSlider.defaultProps = {\n  formatter: val => val\n};\n\nconst Range = ({ name, onReset, ...other }) => (\n  <input\n    {...other}\n    name={name}\n    type=\"range\"\n    style={{ display: \"block\", width: \"100%\" }}\n  />\n);\n\nexport default ProjectionsSlider;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport chunk from \"lodash/fp/chunk\";\nimport compose from \"lodash/fp/compose\";\nimport get from \"lodash/fp/get\";\nimport head from \"lodash/fp/head\";\nimport map from \"lodash/fp/map\";\nimport pick from \"lodash/fp/pick\";\nimport range from \"lodash/fp/range\";\nimport { simpleMemoize, keyByProp } from \"../dataUtils\";\nimport { selectedPlotBandColor } from \"../styleVariables\";\nimport {\n  getMortgageRate,\n  getReturnOnInvestments,\n  getAverageContribution,\n  getCurrentInvestments,\n  getAverageExpensesWithoutMortgage,\n  getProjection,\n  getProjectionWithRetirement\n} from \"../projectionUtils\";\nimport PageLayout from \"./PageLayout\";\nimport Icon from \"./Icon\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ProjectionsChart from \"./ProjectionsChart\";\nimport ProjectionsSlider from \"./ProjectionsSlider\";\nimport ChartNumbers from \"./ChartNumbers\";\n\nconst YEARS_TO_PROJECT = 50;\n\nconst adjustableEntries = [\n  {\n    label: \"Average monthly contribution\",\n    name: \"averageContribution\",\n    formatter: val => `$${Math.round(val)}`\n  },\n  {\n    label: \"Average return on investments\",\n    name: \"returnOnInvestments\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  },\n  {\n    label: \"Average expenses without mortgage\",\n    name: \"averageExpenses\",\n    formatter: val => `$${Math.round(val)}`\n  },\n  {\n    label: \"Return on investment after retirement\",\n    name: \"retirementReturns\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  },\n  {\n    label: \"Average tax rate after retirement\",\n    name: \"retirementTaxRate\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  }\n];\n\nconst adjustableEntriesByName = keyByProp(\"name\")(adjustableEntries);\n\nconst getInitialState = simpleMemoize(\n  (budget, investmentAccounts, mortgageAccounts) => {\n    const {\n      paymentsLeft: remainingMortgagePayments,\n      mortgagePayment,\n      principalProjection: mortgageProjection\n    } = getMortgageRate(budget, mortgageAccounts) || {};\n    const returnOnInvestments = getReturnOnInvestments(\n      budget,\n      investmentAccounts\n    );\n    const averageContribution = getAverageContribution(\n      budget,\n      investmentAccounts\n    );\n    const currentInvestments = getCurrentInvestments(\n      budget,\n      investmentAccounts\n    );\n    const averageExpenses = getAverageExpensesWithoutMortgage(\n      budget,\n      investmentAccounts,\n      mortgageAccounts\n    );\n\n    return {\n      mortgagePayment,\n      remainingMortgagePayments,\n      mortgageProjection,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      averageExpenses,\n      retirementReturns: 0.04,\n      retirementTaxRate: 0.15,\n      maxAverageExpenses: Math.ceil((averageExpenses * 2) / 1000) * 1000,\n      maxAverageContribution: Math.ceil((averageContribution * 2) / 1000) * 1000\n    };\n  }\n);\n\nclass ProjectionsPage extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      transactions: PropTypes.array.isRequired\n    }).isRequired,\n    historyAction: PropTypes.string.isRequired,\n    investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    location: PropTypes.string.isRequired,\n    mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    sidebarTrigger: PropTypes.node.isRequired,\n    title: PropTypes.string.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...getInitialState(\n        props.budget,\n        props.investmentAccounts,\n        props.mortgageAccounts\n      ),\n      adjustingName: null\n    };\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: parseFloat(e.target.value) });\n  };\n\n  handleSelectAdjusting = name => {\n    this.setState(state => ({\n      adjustingName: state.adjustingName === name ? null : name\n    }));\n  };\n\n  handleClearSelection = () => {\n    this.setState({ adjustingName: null });\n  };\n\n  handleResetCalculation = calculation => {\n    const { budget, investmentAccounts, mortgageAccounts } = this.props;\n    this.setState(\n      pick(calculation)(\n        getInitialState(budget, investmentAccounts, mortgageAccounts)\n      )\n    );\n  };\n\n  render() {\n    const { historyAction, location, sidebarTrigger, title } = this.props;\n    const {\n      mortgagePayment,\n      remainingMortgagePayments,\n      mortgageProjection,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      averageExpenses,\n      retirementReturns,\n      retirementTaxRate,\n      maxAverageExpenses,\n      maxAverageContribution,\n      adjustingName\n    } = this.state;\n\n    const projection = getProjection({\n      numMonths: YEARS_TO_PROJECT * 12,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments\n    });\n    const monthlyRetirementReturn = (1 + retirementReturns) ** (1 / 12) - 1;\n    const amountNeededToRetire =\n      averageExpenses / (monthlyRetirementReturn * (1 - retirementTaxRate));\n    let m = 0;\n\n    while (m < projection.length) {\n      if (m < remainingMortgagePayments) {\n        const remainingMortgage = range(\n          0,\n          remainingMortgagePayments - m\n        ).reduce(\n          (acc, curr) =>\n            acc +\n            mortgagePayment /\n              (1 + monthlyRetirementReturn * (1 - retirementTaxRate)) ** curr,\n          0\n        );\n        if (\n          (projection[m] - remainingMortgage) *\n            monthlyRetirementReturn *\n            (1 - retirementTaxRate) >\n          averageExpenses\n        ) {\n          break;\n        }\n      } else {\n        if (\n          projection[m] * monthlyRetirementReturn * (1 - retirementTaxRate) >\n          averageExpenses\n        ) {\n          break;\n        }\n      }\n      m += 1;\n    }\n\n    const projectionWithRetirement = getProjectionWithRetirement({\n      numMonths: YEARS_TO_PROJECT * 12,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      monthsBeforeRetirement: m,\n      monthlyExpenses: averageExpenses,\n      retirementReturns,\n      retirementTaxRate,\n      remainingMortgagePayments,\n      mortgagePayment\n    });\n    const hasMortgage = !!mortgagePayment;\n\n    const yearsUntilRetirement = m / 12;\n    const projectionByYear = compose([map(head), chunk(12)])(\n      projectionWithRetirement\n    );\n    const mortgageProjectionByYear = compose([map(head), chunk(12)])(\n      mortgageProjection\n    );\n\n    const nameToRangeOptions = {\n      averageContribution: { min: 0, max: maxAverageContribution, step: 50 },\n      returnOnInvestments: { min: 0, max: 0.2, step: 0.001 },\n      averageExpenses: { min: 0, max: maxAverageExpenses, step: 50 },\n      retirementReturns: { min: 0, max: 0.2, step: 0.001 },\n      retirementTaxRate: { min: 0, max: 0.5, step: 0.001 }\n    };\n\n    return (\n      <PageLayout\n        historyAction={historyAction}\n        location={location}\n        sidebarTrigger={sidebarTrigger}\n        title={title}\n        content={\n          <Fragment>\n            <CollapsibleSection title=\"Projection\">\n              <ChartNumbers\n                numbers={[\n                  {\n                    amount: -amountNeededToRetire,\n                    label: \"needed for retirement\",\n                    decimalsToRound: 0\n                  },\n                  {\n                    amount: -yearsUntilRetirement,\n                    label: \"years to retirement\",\n                    isMoney: false,\n                    decimalsToRound: 1\n                  }\n                ]}\n              />\n              <ProjectionsChart\n                investmentsProjection={projectionByYear}\n                mortgageProjection={mortgageProjectionByYear}\n                amountNeededToRetire={amountNeededToRetire}\n                yearsUntilRetirement={yearsUntilRetirement}\n              />\n            </CollapsibleSection>\n            <CollapsibleSection title=\"Assumptions\">\n              {adjustableEntries.map(({ label, name, formatter }) => (\n                <AdjustableEntry\n                  key={name}\n                  label={label}\n                  name={name}\n                  value={this.state[name]}\n                  formatter={formatter}\n                  isAdjusting={adjustingName === name}\n                  onSelect={this.handleSelectAdjusting}\n                  onReset={this.handleResetCalculation}\n                  onChange={this.handleChange}\n                />\n              ))}\n              {hasMortgage && (\n                <Fragment>\n                  <Entry\n                    label=\"Mortgage payment\"\n                    value={mortgagePayment}\n                    formatter={val => `$${val.toFixed(2)}`}\n                  />\n                  <Entry\n                    label=\"Time remaining on mortgage\"\n                    value={remainingMortgagePayments}\n                    formatter={val => `${(val / 12).toFixed(1)} years`}\n                  />\n                </Fragment>\n              )}\n            </CollapsibleSection>\n            <ProjectionsSlider\n              name={adjustingName}\n              label={get([adjustingName, \"label\"])(adjustableEntriesByName)}\n              onReset={this.handleResetCalculation}\n              onChange={this.handleChange}\n              onBlur={this.handleClearSelection}\n              formatter={get([adjustingName, \"formatter\"])(\n                adjustableEntriesByName\n              )}\n              value={this.state[adjustingName]}\n              rangeOptions={nameToRangeOptions[adjustingName]}\n            />\n          </Fragment>\n        }\n      />\n    );\n  }\n}\n\nconst AdjustableEntry = ({\n  label,\n  value,\n  formatter,\n  name,\n  onSelect,\n  isAdjusting\n}) => (\n  <Entry\n    label={label}\n    value={value}\n    formatter={formatter}\n    onClick={() => {\n      onSelect(name);\n    }}\n    highlightValue={isAdjusting}\n    isAdjustable\n  />\n);\n\nconst Entry = ({\n  label,\n  value,\n  onClick,\n  highlightValue,\n  isAdjustable,\n  formatter = a => a\n}) => (\n  <div\n    style={{\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      padding: \"2px 0\"\n    }}\n  >\n    {label}:\n    <div style={{ display: \"flex\", alignItems: \"center\" }} onClick={onClick}>\n      <strong\n        style={{\n          backgroundColor: highlightValue ? selectedPlotBandColor : null,\n          padding: isAdjustable && \"0 4px\",\n          borderRadius: 2\n        }}\n      >\n        {formatter(value)}\n      </strong>\n      {isAdjustable && <Icon icon=\"pencil\" faded style={{ marginLeft: 4 }} />}\n    </div>\n  </div>\n);\n\nexport default ProjectionsPage;\n","import moment from \"moment\";\nimport add from \"lodash/fp/add\";\nimport compose from \"lodash/fp/compose\";\nimport concat from \"lodash/fp/concat\";\nimport filter from \"lodash/fp/filter\";\nimport find from \"lodash/fp/find\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport head from \"lodash/fp/head\";\nimport identity from \"lodash/fp/identity\";\nimport includes from \"lodash/fp/includes\";\nimport keys from \"lodash/fp/keys\";\nimport last from \"lodash/fp/last\";\nimport map from \"lodash/fp/map\";\nimport matches from \"lodash/fp/matches\";\nimport multiply from \"lodash/fp/multiply\";\nimport prop from \"lodash/fp/prop\";\nimport range from \"lodash/fp/range\";\nimport reduce from \"lodash/fp/reduce\";\nimport reject from \"lodash/fp/reject\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport takeRightWhile from \"lodash/fp/takeRightWhile\";\nimport uniq from \"lodash/fp/uniq\";\nimport { getTransactionMonth } from \"./budgetUtils\";\n\nexport const getMortgageRate = (\n  { accounts, transactions: allTransactions },\n  mortgageAccounts\n) => {\n  const mortgageAccount = find(account => mortgageAccounts[account.id])(\n    accounts\n  );\n\n  if (!mortgageAccount) {\n    return null;\n  }\n\n  const transactions = compose([\n    sortBy(\"date\"),\n    filter(matches({ account_id: mortgageAccount.id }))\n  ])(allTransactions);\n  const lastMonth = compose([t => t.date.slice(0, 7), last])(transactions);\n  const lastMonthTransactions = takeRightWhile(\n    t => t.date.slice(0, 7) === lastMonth\n  )(transactions);\n\n  const P = -compose([\n    sumBy(\"amount\"),\n    takeWhile(t => t.date.slice(0, 7) !== lastMonth)\n  ])(transactions);\n  const P1 = P - sumBy(\"amount\")(lastMonthTransactions);\n  const c = compose([prop(\"amount\"), find(prop(\"transfer_account_id\"))])(\n    lastMonthTransactions\n  );\n  const r = (P1 + c) / P - 1;\n  const N = -Math.log(1 - (r * P) / c) / Math.log(1 + r);\n\n  const rate = r * 12;\n  const paymentsLeft = N - 1;\n\n  const projection = map(n => (1 + r) ** n * P - (((1 + r) ** n - 1) / r) * c)(\n    range(1, N)\n  );\n\n  return {\n    rate,\n    mortgagePayment: c,\n    paymentsLeft,\n    principalProjection: projection\n  };\n};\n\nexport const getCurrentInvestments = (\n  { accounts, transactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  return compose([\n    sumBy(\"amount\"),\n    filter(({ account_id: accountId }) =>\n      includes(accountId)(investmentAccountIds)\n    )\n  ])(transactions);\n};\n\nexport const getReturnOnInvestments = (\n  { accounts, payees, transactions: allTransactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const transactionsByMonth = compose([\n    groupBy(tr => tr.date.slice(0, 7)),\n    reject(t => includes(t.transfer_account_id)(investmentAccountIds)), // remove transfers between investment accounts\n    filter(t => includes(t.account_id)(investmentAccountIds))\n  ])(allTransactions);\n\n  let startForMonth = 0;\n  const returnRates = [];\n\n  const months = compose([sortBy(identity), keys])(transactionsByMonth);\n  map(month => transactionsByMonth[month])(months).forEach(trs => {\n    const contributions = compose([\n      sumBy(\"amount\"),\n      filter(prop(\"transfer_account_id\"))\n    ])(trs);\n    const gains = reject(prop(\"transfer_account_id\"))(trs);\n    const returns = sumBy(\"amount\")(gains);\n\n    if (startForMonth && gains.length) {\n      returnRates.push(returns / (startForMonth + 0.5 * contributions));\n    }\n\n    startForMonth += returns + contributions;\n  });\n\n  const totalReturn = compose([reduce(multiply, 1), map(add(1))])(returnRates);\n  const numMonths = returnRates.length;\n\n  return totalReturn ** (12 / numMonths) - 1;\n};\n\nexport const getAverageContribution = (\n  { accounts, transactions: allTransactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const contributions = compose([\n    filter(\n      ({ transfer_account_id: transferAccountId }) =>\n        transferAccountId && !includes(transferAccountId)(investmentAccountIds)\n    ),\n    filter(({ account_id: accountId }) =>\n      includes(accountId)(investmentAccountIds)\n    )\n  ])(allTransactions);\n\n  const months = compose([\n    sortBy(identity),\n    uniq,\n    map(d => d.slice(0, 7)),\n    map(\"date\")\n  ])(contributions);\n\n  const totalContributions = sumBy(\"amount\")(contributions);\n  const numMonths =\n    moment(last(months)).diff(moment(head(months)), \"months\") + 1;\n\n  return totalContributions / numMonths;\n};\n\nexport const getAverageExpensesWithoutMortgage = (\n  { transactions, accounts, payees, categoriesById, categoryGroupsById },\n  investmentAccounts,\n  mortgageAccounts\n) => {\n  const startingBalanceId = compose([\n    prop(\"id\"),\n    find(matches({ name: \"Starting Balance\" }))\n  ])(payees);\n  const months = compose([sortBy(identity), uniq, map(getTransactionMonth)])(\n    transactions\n  );\n\n  const mortgageAccountIds = compose([\n    filter(id => mortgageAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const totalExpenses = compose([\n    sumBy(\"amount\"),\n    reject(\n      tr =>\n        tr.amount > 0 &&\n        !tr.transfer_account_id &&\n        (!tr.category_id ||\n          !categoryGroupsById[categoriesById[tr.category_id].category_group_id])\n    ),\n    reject(tr =>\n      includes(tr.transfer_account_id)(\n        concat(mortgageAccountIds, investmentAccountIds)\n      )\n    ),\n    reject(tr =>\n      includes(tr.account_id)(concat(mortgageAccountIds, investmentAccountIds))\n    ),\n    reject(tr =>\n      includes(getTransactionMonth(tr))([head(months), last(months)])\n    ),\n    reject(matches({ payee_id: startingBalanceId }))\n  ])(transactions);\n\n  return -totalExpenses / (months.length - 2);\n};\n\nexport const getProjection = ({\n  numMonths,\n  returnOnInvestments,\n  averageContribution,\n  currentInvestments\n}) => {\n  const monthlyRate = (1 + returnOnInvestments) ** (1 / 12) - 1;\n  let amount = currentInvestments;\n  let projection = [];\n\n  do {\n    projection.push(amount);\n    amount +=\n      averageContribution + (amount + 0.5 * averageContribution) * monthlyRate;\n  } while (projection.length < numMonths);\n\n  return projection;\n};\n\nexport const getProjectionWithRetirement = ({\n  numMonths,\n  returnOnInvestments,\n  averageContribution,\n  currentInvestments,\n  monthsBeforeRetirement,\n  monthlyExpenses,\n  retirementReturns,\n  retirementTaxRate,\n  remainingMortgagePayments,\n  mortgagePayment\n}) => {\n  const monthlyRate = (1 + returnOnInvestments) ** (1 / 12) - 1;\n  const monthlyRetirementReturn = (1 + retirementReturns) ** (1 / 12) - 1;\n  let amount = currentInvestments;\n  let projection = [];\n\n  do {\n    projection.push(amount);\n    if (projection.length < monthsBeforeRetirement) {\n      amount +=\n        averageContribution +\n        (amount + 0.5 * averageContribution) * monthlyRate;\n    } else {\n      amount +=\n        amount * monthlyRetirementReturn * (1 - retirementTaxRate) -\n        monthlyExpenses;\n      if (projection.length < remainingMortgagePayments) {\n        amount -= mortgagePayment;\n      }\n    }\n  } while (projection.length < numMonths);\n\n  return projection;\n};\n","import styled from \"styled-components\";\n\nconst Section = styled.div`\n  margin: ${props => (props.top ? \"0\" : \"3px\")};\n  padding: ${props =>\n    props.noPadding ? \"0\" : props.top ? \"15px 23px\" : \"15px 20px\"};\n  background-color: #fff;\n  border: 1px solid #e5e5e5;\n  border-width: ${props => (props.top ? \"0 0 1px\" : \"1px\")};\n  border-radius: 2px;\n`;\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport omit from \"lodash/fp/omit\";\nimport ToggleWithLabel from \"./ToggleWithLabel\";\n\nconst AccountsSelectionForm = ({ accounts, value, onChange }) =>\n  accounts.map(({ id, name }) => (\n    <ToggleWithLabel\n      key={id}\n      checked={!!value[id]}\n      name={id}\n      onChange={evt => {\n        const { name, checked } = evt.target;\n\n        onChange(\n          checked\n            ? {\n                ...value,\n                [name]: true\n              }\n            : omit(name)(value)\n        );\n      }}\n      label={name}\n    />\n  ));\n\nAccountsSelectionForm.propTypes = {\n  accounts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  value: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default AccountsSelectionForm;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"./Section\";\nimport PageLayout from \"./PageLayout\";\nimport { StrongText, MinorText } from \"./typeComponents\";\nimport AccountsSelectionForm from \"./AccountsSelectionForm\";\nimport Modal from \"./Modal\";\nimport EmptyText from \"./EmptyText\";\nimport Icon from \"./Icon\";\n\nconst SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Space = styled.div`\n  height: 20px;\n`;\n\nclass SettingsPage extends Component {\n  static propTypes = {\n    budget: PropTypes.shape({\n      accounts: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          name: PropTypes.string.isRequired\n        })\n      ).isRequired\n    }).isRequired,\n    historyAction: PropTypes.string.isRequired,\n    investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    location: PropTypes.string.isRequired,\n    mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    sidebarTrigger: PropTypes.node.isRequired,\n    title: PropTypes.string.isRequired,\n    onUpdateAccounts: PropTypes.func.isRequired\n  };\n\n  state = {\n    investmentModalOpen: false,\n    mortgageModalOpen: false\n  };\n\n  handleClickEdit = section => {\n    if (section === \"investment\") {\n      this.setState({ investmentModalOpen: true });\n    }\n    if (section === \"mortgage\") {\n      this.setState({ mortgageModalOpen: true });\n    }\n  };\n\n  handleCloseInvestmentModal = () => {\n    this.setState({ investmentModalOpen: false });\n  };\n\n  handleCloseMortgageModal = () => {\n    this.setState({ mortgageModalOpen: false });\n  };\n\n  handleChangeInvestment = accountsObject => {\n    this.props.onUpdateAccounts({ type: \"investment\", value: accountsObject });\n  };\n\n  handleChangeMortgage = accountsObject => {\n    this.props.onUpdateAccounts({ type: \"mortgage\", value: accountsObject });\n  };\n\n  render() {\n    const {\n      budget,\n      historyAction,\n      investmentAccounts,\n      location,\n      mortgageAccounts,\n      sidebarTrigger,\n      title\n    } = this.props;\n    const { investmentModalOpen, mortgageModalOpen } = this.state;\n\n    const potentialInvestmentAccounts = budget.accounts.filter(\n      account => account.type === \"otherAsset\" && !account.on_budget\n    );\n    const potentialMortageAccounts = budget.accounts.filter(\n      account => account.type === \"otherLiability\" && !account.on_budget\n    );\n    const investmentAccountsList = budget.accounts.filter(\n      ({ id }) => investmentAccounts[id]\n    );\n    const mortgageAccountList = budget.accounts.filter(\n      ({ id }) => mortgageAccounts[id]\n    );\n\n    return (\n      <PageLayout\n        historyAction={historyAction}\n        location={location}\n        sidebarTrigger={sidebarTrigger}\n        title={title}\n        content={\n          <Fragment>\n            <Section>\n              <SectionHeader>\n                <StrongText>Investment Accounts</StrongText>\n                <span\n                  onClick={() => {\n                    this.handleClickEdit(\"investment\");\n                  }}\n                >\n                  <Icon icon=\"pencil\" />\n                </span>\n              </SectionHeader>\n              {investmentAccountsList.length ? (\n                investmentAccountsList.map(({ id, name }) => (\n                  <div key={id}>{name}</div>\n                ))\n              ) : (\n                <EmptyText>No accounts marked as investment</EmptyText>\n              )}\n              <MinorText style={{ marginTop: 10 }}>\n                Transfers to investment accounts are not counted as spending\n                since it's assumed it's for retirement or some other savings\n                goal.\n              </MinorText>\n              <Modal\n                open={investmentModalOpen}\n                onClose={this.handleCloseInvestmentModal}\n                title=\"Investment Accounts\"\n              >\n                <AccountsSelectionForm\n                  accounts={potentialInvestmentAccounts}\n                  value={investmentAccounts}\n                  onChange={this.handleChangeInvestment}\n                />\n              </Modal>\n              <Space />\n              <SectionHeader>\n                <StrongText>Mortgage Accounts</StrongText>\n                <span\n                  onClick={() => {\n                    this.handleClickEdit(\"mortgage\");\n                  }}\n                >\n                  <Icon icon=\"pencil\" />\n                </span>\n              </SectionHeader>\n              {mortgageAccountList.length ? (\n                mortgageAccountList.map(({ id, name }) => (\n                  <div key={id}>{name}</div>\n                ))\n              ) : (\n                <EmptyText>No accounts marked as mortgage</EmptyText>\n              )}\n              <MinorText style={{ marginTop: 10 }}>\n                Mortgage accounts are used in the retirement calculator since\n                it's a significant expense you won't have in your retirement\n                presumably.\n              </MinorText>\n              <Modal\n                open={mortgageModalOpen}\n                onClose={this.handleCloseMortgageModal}\n                title=\"Mortgage Account\"\n              >\n                <AccountsSelectionForm\n                  accounts={potentialMortageAccounts}\n                  value={mortgageAccounts}\n                  onChange={this.handleChangeMortgage}\n                />\n              </Modal>\n            </Section>\n          </Fragment>\n        }\n      />\n    );\n  }\n}\n\nexport default SettingsPage;\n","import React, { memo } from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport moment from \"moment\";\nimport pages, { makeLink } from \"../pages\";\nimport CurrentMonthPage from \"./CurrentMonthPage\";\nimport IncomePage from \"./IncomePage\";\nimport CurrentMonthGroupPage from \"./CurrentMonthGroupPage\";\nimport CurrentMonthCategoryPage from \"./CurrentMonthCategoryPage\";\nimport GroupsPage from \"./GroupsPage\";\nimport GroupPage from \"./GroupPage\";\nimport { Link } from \"react-router-dom\";\nimport CategoriesState from \"./CategoriesState\";\nimport { notAny, simpleMemoize } from \"../dataUtils\";\nimport {\n  getFirstMonth,\n  getTransactionMonth,\n  isIncome,\n  isStartingBalanceOrReconciliation,\n  isTransfer\n} from \"../budgetUtils\";\nimport { useMonthExclusions } from \"../commonHooks\";\nimport CategoryPage from \"./CategoryPage\";\nimport CategoryPayeePage from \"./CategoryPayeePage\";\nimport IncomeVsExpensesPage from \"./IncomeVsExpensesPage\";\nimport NetWorthPage from \"./NetWorthPage\";\nimport InvestmentsPage from \"./InvestmentsPage\";\nimport ProjectionsPage from \"./ProjectionsPage\";\nimport SettingsPage from \"./SettingsPage\";\n\nconst getFilteredTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) => {\n    const firstMonth = getFirstMonth(budget);\n    const lastMonth = moment().format(\"YYYY-MM\");\n    return budget.transactions.filter(\n      notAny([\n        isStartingBalanceOrReconciliation(budget),\n        isTransfer(investmentAccounts),\n        transaction =>\n          excludeFirstMonth && getTransactionMonth(transaction) === firstMonth,\n        transaction =>\n          excludeLastMonth && getTransactionMonth(transaction) === lastMonth\n      ])\n    );\n  }\n);\n\nconst getFilteredSpendingTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) =>\n    getFilteredTransactions(\n      budget,\n      investmentAccounts,\n      excludeFirstMonth,\n      excludeLastMonth\n    ).filter(transaction => !isIncome(budget)(transaction))\n);\n\nconst PageContent = props => {\n  const {\n    budget,\n    currentMonth,\n    historyAction,\n    investmentAccounts,\n    location,\n    mortgageAccounts,\n    sidebarTrigger,\n    onUpdateAccounts\n  } = props;\n  const {\n    excludeFirstMonth,\n    excludeLastMonth,\n    months,\n    onSetExclusion\n  } = useMonthExclusions(budget);\n\n  if (!budget) {\n    return null;\n  }\n\n  return (\n    <Switch>\n      <Route\n        path={pages.currentMonth.path}\n        exact\n        render={() => (\n          <CurrentMonthPage\n            budget={budget}\n            currentMonth={currentMonth}\n            investmentAccounts={investmentAccounts}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.currentMonth.title}\n          />\n        )}\n      />\n      <Route\n        path={pages.currentMonthGroup.path}\n        exact\n        render={({ match }) => (\n          <CurrentMonthGroupPage\n            budget={budget}\n            categoryGroupId={match.params.categoryGroupId}\n            currentMonth={currentMonth}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.currentMonthGroup.title(match.params, budget)}\n          />\n        )}\n      />\n      <Route\n        path={pages.currentMonthCategory.path}\n        exact\n        render={({ match }) => (\n          <CurrentMonthCategoryPage\n            categoryId={match.params.categoryId}\n            budget={budget}\n            currentMonth={currentMonth}\n            categoryGroupId={match.params.categoryGroupId}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.currentMonthCategory.title(match.params, budget)}\n          />\n        )}\n      />\n      <Route\n        path={pages.income.path}\n        exact\n        render={() => (\n          <IncomePage\n            investmentAccounts={investmentAccounts}\n            budget={budget}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.income.title}\n          />\n        )}\n      />\n      <Route\n        path={pages.incomeVsExpenses.path}\n        exact\n        render={() => {\n          const filteredTransactions = getFilteredTransactions(\n            props.budget,\n            props.investmentAccounts,\n            excludeFirstMonth,\n            excludeLastMonth\n          );\n\n          return (\n            <IncomeVsExpensesPage\n              budget={budget}\n              excludeFirstMonth={excludeFirstMonth}\n              excludeLastMonth={excludeLastMonth}\n              investmentAccounts={investmentAccounts}\n              historyAction={historyAction}\n              location={location}\n              sidebarTrigger={sidebarTrigger}\n              title={pages.incomeVsExpenses.title}\n              transactions={filteredTransactions}\n              onSetExclusion={onSetExclusion}\n            />\n          );\n        }}\n      />\n      <Route\n        path={pages.netWorth.path}\n        exact\n        render={() => (\n          <NetWorthPage\n            budget={budget}\n            historyAction={historyAction}\n            investmentAccounts={investmentAccounts}\n            location={location}\n            mortgageAccounts={mortgageAccounts}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.netWorth.title}\n          />\n        )}\n      />\n      <Route\n        path={pages.investments.path}\n        exact\n        render={() => (\n          <InvestmentsPage\n            budget={budget}\n            investmentAccounts={investmentAccounts}\n            title={pages.investments.title}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n          />\n        )}\n      />\n      <Route\n        path={pages.projections.path}\n        exact\n        render={() => (\n          <ProjectionsPage\n            budget={budget}\n            investmentAccounts={investmentAccounts}\n            mortgageAccounts={mortgageAccounts}\n            title={pages.projections.title}\n            historyAction={historyAction}\n            location={location}\n            sidebarTrigger={sidebarTrigger}\n          />\n        )}\n      />\n      <Route\n        path={pages.settings.path}\n        exact\n        render={() => (\n          <SettingsPage\n            budget={budget}\n            historyAction={historyAction}\n            investmentAccounts={investmentAccounts}\n            location={location}\n            mortgageAccounts={mortgageAccounts}\n            sidebarTrigger={sidebarTrigger}\n            title={pages.settings.title}\n            onUpdateAccounts={onUpdateAccounts}\n          />\n        )}\n      />\n      <Route\n        path={pages.groups.path}\n        render={() => {\n          const filteredTransactions = getFilteredSpendingTransactions(\n            budget,\n            investmentAccounts,\n            excludeFirstMonth,\n            excludeLastMonth\n          );\n\n          return (\n            <CategoriesState action={historyAction} location={location}>\n              {({\n                selectedMonth,\n                selectedGroupId,\n                selectedCategoryId,\n                selectedPayeeId,\n                onSelectMonth,\n                onSelectGroup,\n                onSelectCategory,\n                onSelectPayee\n              }) => (\n                <Switch>\n                  <Route\n                    path={pages.groups.path}\n                    exact\n                    render={() => (\n                      <GroupsPage\n                        budget={budget}\n                        excludeFirstMonth={excludeFirstMonth}\n                        excludeLastMonth={excludeLastMonth}\n                        historyAction={historyAction}\n                        location={location}\n                        months={months}\n                        selectedGroupId={selectedGroupId}\n                        selectedMonth={selectedMonth}\n                        sidebarTrigger={sidebarTrigger}\n                        title={pages.groups.title}\n                        transactions={filteredTransactions}\n                        onSelectGroup={onSelectGroup}\n                        onSetExclusion={onSetExclusion}\n                        onSelectMonth={onSelectMonth}\n                      />\n                    )}\n                  />\n                  <Route\n                    path={pages.group.path}\n                    exact\n                    render={({ match }) => (\n                      <GroupPage\n                        budget={budget}\n                        categoryGroupId={match.params.categoryGroupId}\n                        excludeFirstMonth={excludeFirstMonth}\n                        excludeLastMonth={excludeLastMonth}\n                        historyAction={historyAction}\n                        location={location}\n                        months={months}\n                        selectedMonth={selectedMonth}\n                        selectedCategoryId={selectedCategoryId}\n                        sidebarTrigger={sidebarTrigger}\n                        title={pages.group.title(match.params, budget)}\n                        transactions={filteredTransactions}\n                        onSelectCategory={onSelectCategory}\n                        onSelectMonth={onSelectMonth}\n                        onSetExclusion={onSetExclusion}\n                      />\n                    )}\n                  />\n                  <Route\n                    path={pages.category.path}\n                    exact\n                    render={({ match }) => (\n                      <CategoryPage\n                        budget={budget}\n                        categoryId={match.params.categoryId}\n                        excludeFirstMonth={excludeFirstMonth}\n                        excludeLastMonth={excludeLastMonth}\n                        historyAction={historyAction}\n                        location={location}\n                        months={months}\n                        selectedMonth={selectedMonth}\n                        selectedPayeeId={selectedPayeeId}\n                        sidebarTrigger={sidebarTrigger}\n                        title={pages.category.title(match.params, budget)}\n                        transactions={filteredTransactions}\n                        onSetExclusion={onSetExclusion}\n                        onSelectMonth={onSelectMonth}\n                        onSelectPayee={onSelectPayee}\n                      />\n                    )}\n                  />\n                  <Route\n                    path={pages.categoryPayee.path}\n                    exact\n                    render={({ match }) => (\n                      <CategoryPayeePage\n                        budget={budget}\n                        categoryId={match.params.categoryId}\n                        excludeFirstMonth={excludeFirstMonth}\n                        excludeLastMonth={excludeLastMonth}\n                        historyAction={historyAction}\n                        location={location}\n                        months={months}\n                        payeeId={match.params.payeeId}\n                        selectedMonth={selectedMonth}\n                        sidebarTrigger={sidebarTrigger}\n                        title={pages.categoryPayee.title(match.params, budget)}\n                        transactions={filteredTransactions}\n                        onSetExclusion={onSetExclusion}\n                        onSelectMonth={onSelectMonth}\n                      />\n                    )}\n                  />\n                </Switch>\n              )}\n            </CategoriesState>\n          );\n        }}\n      />\n      <Route\n        render={() => (\n          <div style={{ padding: 20 }}>\n            <Link\n              to={makeLink(pages.currentMonth.path, {\n                budgetId: budget.id\n              })}\n            >\n              Return to {pages.currentMonth.title}\n            </Link>\n          </div>\n        )}\n      />\n    </Switch>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) =>\n  [\n    \"budget\",\n    \"currentMonth\",\n    \"historyAction\",\n    \"investmentAccounts\",\n    \"location\",\n    \"mortgageAccounts\"\n  ].every(key => prevProps[key] === nextProps[key]);\n\nexport default memo(PageContent, areEqual);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Section from \"./Section\";\nimport { PageTitle, StrongText, SecondaryText } from \"./typeComponents\";\nimport { PrimaryButton } from \"./Button\";\n\nconst Unauthorized = ({ onAuthorize }) => (\n  <Section>\n    <PageTitle>Budget Reports</PageTitle>\n    <div style={{ marginBottom: 10 }}>Get various insights from your YNAB account.</div>\n    <PrimaryButton onClick={onAuthorize}>\n      Authorize YNAB\n    </PrimaryButton>\n    <StrongText style={{ marginTop: 30 }}>Privacy Policy</StrongText>\n    <SecondaryText>\n      This website does not store any information from you or your YNAB account\n      on it's server. All data retrieved from the YNAB API is stored only in\n      your browser's local storage and is never transmitted to any other location or\n      third-party.\n    </SecondaryText>\n  </Section>\n);\n\nUnauthorized.propTypes = {\n  onAuthorize: PropTypes.func.isRequired\n};\n\nexport default Unauthorized;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 10px 20px;\n`;\n\n\nconst ErrorPage = ({ message }) => (\n  <Container>\n    <h3>{message}</h3>\n    <div>\n      <Link to=\"/\">Home</Link>\n    </div>\n  </Container>\n);\n\nErrorPage.propTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default ErrorPage;\n","import React from \"react\";\nimport ErrorPage from \"./ErrorPage\";\n\nconst NotFound = () => <ErrorPage message=\"Page not found\" />;\n\nexport default NotFound;\n","/* global Rollbar */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ErrorPage from \"./ErrorPage\";\n\nclass ErrorBoundary extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    message: PropTypes.string\n  };\n\n  static defaultProps = {\n    message: \"Something went wrong\"\n  };\n\n  state = { hasError: false };\n\n  componentDidCatch(error) {\n    Rollbar.error(error);\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorPage message={this.props.message} />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport pages, { makeLink } from \"../pages\";\nimport { StrongText } from \"./typeComponents\";\nimport Section from \"./Section\";\nimport Loading from \"./Loading\";\n\nclass Budgets extends Component {\n  static propTypes = {\n    budgets: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    budgetsLoaded: PropTypes.bool.isRequired,\n    onRequestBudgets: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    if (!this.props.budgetsLoaded) {\n      this.props.onRequestBudgets();\n    }\n  }\n\n  render() {\n    const { budgets, budgetsLoaded } = this.props;\n\n    if (!budgetsLoaded) {\n      return <Loading />;\n    }\n\n    return (\n      <Section>\n        <StrongText>Select a budget:</StrongText>\n        {budgets.map(({ id, name }) => (\n          <div key={id}>\n            <Link to={makeLink(pages.currentMonth.path, { budgetId: id })}>\n              {name}\n            </Link>\n          </div>\n        ))}\n      </Section>\n    );\n  }\n}\n\nexport default Budgets;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Switch } from \"react-router-dom\";\nimport moment from \"moment\";\nimport get from \"lodash/fp/get\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport {\n  getBudgets,\n  getUpdatedBudget,\n  AUTHORIZE_URL,\n  setLastLocation\n} from \"../ynabRepo\";\nimport { setSetting, getSetting } from \"../uiRepo\";\nimport PageWrapper from \"./PageWrapper\";\nimport PageContent from \"./PageContent\";\nimport Unauthorized from \"./Unauthorized\";\nimport NotFound from \"./NotFound\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport Budgets from \"./Budgets\";\nimport CurrencyContext from \"./CurrencyContext\";\n\nclass App extends Component {\n  static propTypes = {\n    hasToken: PropTypes.bool.isRequired\n  };\n\n  state = {\n    authorized: true,\n    budgetsLoaded: false,\n    budgetIds: [],\n    budgets: {},\n    budgetDetails: {},\n    currentMonth: moment().format(\"YYYY-MM\")\n  };\n\n  handleRequestBudgets = callback => {\n    getBudgets().then(({ budgets }) => {\n      this.setState(\n        {\n          budgetsLoaded: true,\n          budgetIds: budgets.map(b => b.id),\n          budgets: keyBy(\"id\")(budgets)\n        },\n        callback\n      );\n    });\n  };\n\n  handleRequestBudget = id => {\n    getUpdatedBudget(id).then(({ budget, authorized }) => {\n      this.setState(state => ({\n        ...state,\n        authorized,\n        budgetDetails: {\n          ...state.budgetDetails,\n          [id]: budget\n        }\n      }));\n    });\n  };\n\n  handleAuthorize = () => {\n    setLastLocation();\n    window.location.replace(AUTHORIZE_URL);\n  };\n\n  render() {\n    const { hasToken } = this.props;\n    const {\n      authorized,\n      budgetsLoaded,\n      budgetIds,\n      budgets,\n      budgetDetails,\n      currentMonth\n    } = this.state;\n\n    if (!hasToken) {\n      return <Unauthorized onAuthorize={this.handleAuthorize} />;\n    }\n\n    return (\n      <ErrorBoundary>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <Budgets\n                budgets={budgetIds.map(id => budgets[id])}\n                budgetsLoaded={budgetsLoaded}\n                onRequestBudgets={this.handleRequestBudgets}\n              />\n            )}\n          />\n          <Route\n            path=\"/budgets/:budgetId\"\n            render={({ match, history, location }) => {\n              const { budgetId } = match.params;\n              const budget = budgetDetails[budgetId];\n\n              return (\n                <PageWrapper\n                  authorized={authorized}\n                  budgetId={budgetId}\n                  budgetLoaded={!!budget}\n                  hasMultipleBudgets={budgetIds.length > 1}\n                  location={location.pathname}\n                  onAuthorize={this.handleAuthorize}\n                  onRequestBudget={this.handleRequestBudget}\n                >\n                  {({ sidebarTrigger }) => (\n                    <CurrencyContext.Provider\n                      value={get(\"currencyFormat\")(budget)}\n                    >\n                      <PageContent\n                        sidebarTrigger={sidebarTrigger}\n                        historyAction={history.action}\n                        location={location.pathname}\n                        budget={budget}\n                        currentMonth={currentMonth}\n                        investmentAccounts={getSetting(\n                          \"investmentAccounts\",\n                          budgetId\n                        )}\n                        mortgageAccounts={getSetting(\n                          \"mortgageAccounts\",\n                          budgetId\n                        )}\n                        onUpdateAccounts={({ type, value }) => {\n                          if (type === \"investment\") {\n                            setSetting(\"investmentAccounts\", budgetId, value);\n                          }\n                          if (type === \"mortgage\") {\n                            setSetting(\"mortgageAccounts\", budgetId, value);\n                          }\n                          this.forceUpdate();\n                        }}\n                      />\n                    </CurrencyContext.Provider>\n                  )}\n                </PageWrapper>\n              );\n            }}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { getAuthorizeToken, initializeYnabApi } from \"./ynabRepo\";\nimport App from \"./components/App\";\n\nconst token = getAuthorizeToken();\n\nif (token) {\n  initializeYnabApi(token);\n}\n\nReactDOM.render(\n  <HashRouter>\n    <App hasToken={!!token} />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}