{"version":3,"sources":["localstorageUtils.js","uiRepo.js","dataUtils.js","repoUtils.js","localBudgetCache.js","ynabRepo.js","components/typeComponents.js","components/Loading.js","components/EnsureBudgetLoaded.js","styleVariables.js","components/Button.js","components/Icon.js","budgetUtils.js","components/CollapsibleSection.js","components/Chart.js","components/CurrencyContext.js","components/Amount.js","components/ChartNumbers.js","components/SpendingChart.js","components/Modal.js","components/ChartSettingsModal.js","components/DayByDaySection.js","components/ListItem.js","components/EmptyText.js","components/NoTransactions.js","components/LabelWithMinorText.js","components/LabelWithTransactionCount.js","components/AmountWithPercentage.js","components/SeeAll.js","components/GenericEntitiesSection.js","components/CurrentMonth.js","components/Transaction.js","components/TransactionsSection.js","components/CurrentMonthGroup.js","components/CurrentMonthCategory.js","commonHooks.js","components/MonthlyChart.js","components/Toggle.js","components/ToggleWithLabel.js","components/MonthByMonthSettingsModal.js","components/MonthByMonthSection.js","components/Groups.js","components/TransactionsByMonthSection.js","components/Group.js","components/Category.js","components/CategoryPayee.js","components/Income.js","components/IncomeVsExpensesChart.js","components/BreakdownNode.js","components/Breakdown.js","components/ExpensesBreakdown.js","components/IncomeBreakdown.js","components/Breakdowns.js","components/IncomeVsExpenses.js","components/NetWorthChart.js","components/NetWorthAccounts.js","components/NetWorth.js","components/Investments.js","components/ProjectionsChart.js","components/ClickOff.js","components/ProjectionsSlider.js","components/Projections.js","projectionUtils.js","components/Section.js","components/AccountsSelectionForm.js","components/Settings.js","pages.js","components/SidebarMenuContent.js","components/SidebarMenu.js","components/Scroller.js","components/PageWrapper.js","components/PageTitle.js","components/PageBreadcrumbs.js","components/PageActions.js","components/CategoriesState.js","components/PageContent.js","components/Unauthorized.js","components/ErrorPage.js","components/NotFound.js","components/ErrorBoundary.js","components/Budgets.js","components/App.js","index.js"],"names":["cache","getStorage","key","raw","localStorage","getItem","parsed","JSON","parse","setStorage","obj","setItem","stringify","e","SETTINGS","excludeFirstMonth","localStorageKey","default","excludeLastMonth","investmentAccounts","lastUpdated","mortgageAccounts","netWorthHiddenAccounts","spendingMonthsToCompare","trendsShowAverage","getSetting","settingsKey","budgetId","setting","Error","get","setSetting","value","previousSetting","Object","objectSpread","defineProperty","groupBy","func","arr","grouped","forEach","push","groupByProp","keyByProp","reduce","acc","curr","sumByProp","simpleMemoize","lastArgs","lastResult","_len","arguments","length","args","Array","_key","every","index","apply","notAny","predicates","arg","predicate","formatCurrency","utils","convertMilliUnitsToCurrencyAmount","GROUPS_TO_HIDE","sanitizeBudget","budget","transactionIdsFromSub","uniq","subtransactions","map","transaction","transaction_id","categoryGroups","category_groups","filter","group","includes","name","categories","category","deleted","activity","balance","budgeted","categoriesById","earliestDate","moment","subtract","MAX_MONTHS_TO_SHOW","format","currencyFormat","symbol","currency_format","currency_symbol","omit","accountsById","accounts","categoryGroupsById","payeesById","payees","months","sortBy","transactions","compose","amount","category_id","flatMap","id","subs","sub","matchesProperty","reverse","dropWhile","date","applyDeltas","deltas","undefined","updater","prev","exists","newArr","item","concat","upsertBy","arraysToUpdate","cachedDetails","getAllBudgetDetails","setBudgetDetails","_ref","server_knowledge","details","newDetails","AUTHORIZE_URL","api","getBudgets","budgets","then","data","catch","matches","error","message","removeItem","getBudget","getBudgetById","_ref2","valueOf","authorized","getUpdatedBudget","budgetDetails","getBudgetDetails","_ref3","mergeBudgets","setLastLocation","window","location","hash","PageTitle","styled","div","_templateObject","LargeNumber","_templateObject2","StrongText","_templateObject3","SecondaryText","_templateObject4","MinorText","_templateObject5","Loading","react_default","a","createElement","style","height","display","flexDirection","alignItems","justifyContent","EnsureBudgetLoaded","_this$props","this","props","budgetLoaded","onRequestBudget","children","components_Loading","Component","selectedPlotBandColor","tinyColor","lighten","desaturate","toHexString","lighterPrimaryColor","lightPrimaryColor","negativeChartColor","Button","Button_templateObject","PrimaryButton","Button_templateObject2","library","add","faArrowLeft","faBars","faCaretDown","faChevronRight","faCog","faEllipsisV","faEye","faEyeSlash","faPencilAlt","faTimes","ICONS","arrow-left","bars","caret-down","chevron-right","cog","pencil","ellipsis-v","eye","eye-slash","times","PRESET_STYLES","faded","fontWeight","color","fontSize","Icon","icon","other","objectWithoutProperties","react_fontawesome_index_es","assign","mapRaw","convert","cap","isStartingBalanceOrReconciliation","startingBalancePayeeId","find","payee","reconciliationPayeeId","payee_id","isIncome","toBeBudgetedId","isTransfer","transfer_account_id","getTransactionMonth","slice","getFirstMonth","getPayeeNodes","divideBy","payeeId","pick","sanitizeName","replace","trim","Container","CollapsibleSection_templateObject","Header","CollapsibleSection_templateObject2","SettingsContainer","CollapsibleSection_templateObject3","Body","CollapsibleSection_templateObject4","CollapsibleSection","state","expanded","handleClickTitle","_this","setState","actions","hasSettings","noPadding","title","onClickSettings","CollapsibleSection_Container","onClick","components_Icon","transform","rotate","marginLeft","es","isExpanded","padding","CHART_DEFAULTS","chart","spacing","credits","enabled","legend","text","subtitle","tooltip","xAxis","tickLength","Chart","options","highcharts_react_min_default","highcharts","Highcharts","CurrencyContext","React","createContext","Amount","amountAfterDecimal","positiveIsRed","showCurrencySymbol","components_CurrencyContext","Consumer","nStr","x","split","x1","x2","rgx","test","addCommas","Math","abs","toFixed","defaultProps","ChartNumbers","numbers","alwaysRound","smallNumbers","some","textAlign","lineHeight","marginBottom","label","_ref3$isMoney","isMoney","decimalsToRound","components_Amount","isNumber","DateLabels","SpendingChart_templateObject","getData","month","transactionsByDate","today","cumulative","range","daysInMonth","numDays","padCharsStart","sumBy","SpendingChart","total","highlightFunction","currentMonth","monthsToCompare","highlightedTransactions","highlightSeries","type","enableMouseTracking","marker","animation","lineWidth","fillOpacity","firstDate","lastDate","lineData","day","firstDayOfWeek","parseInt","plotBands","num","from","to","comparisonSeries","numMonths","mix","toHex","spent","takeWhile","chartNumbers","react","components_ChartNumbers","components_Chart","labels","yAxis","visible","endOnTick","startOnTick","series","dashStyle","toConsumableArray","PureComponent","Modal_templateObject","Overlay","Modal_templateObject2","ModalContent","Modal_templateObject3","ensureNextTick","callback","requestAnimationFrame","Modal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleTransitionEnd","animationState","el","document","body","appendChild","prevProps","_this2","open","removeChild","onClose","width","shouldShow","createPortal","Modal_Container","opacity","onTransitionEnd","marginTop","ChartSettingsModal","onDecrementMonths","onIncrementMonths","components_Modal","marginRight","components_Button","MAX_MONTHS","DayByDaySection","handleClickSettings","modalOpen","handleCloseModal","handleDecrementMonths","max","saveSetting","handleIncrementMonths","min","_this$state","components_CollapsibleSection","components_SpendingChart","components_ChartSettingsModal","ListItem","ListItem_templateObject","isContinuing","EmptyText","EmptyText_templateObject","NoTransactions","components_EmptyText","LabelWithMinorText","minorText","inLink","bold","whiteSpace","overflow","Link","textOverflow","LabelWithTransactionCount","count","selected","showCount","components_LabelWithMinorText","AmountWithPercentage","SeeAll","pluralizedName","showAll","onToggle","mapWithKeys","keyToPluralizedName","category_group_id","GenericEntitiesSection","allMounted","handleToggleShowAll","emptyName","entityKey","entityFunction","entitiesById","linkFunction","limitShowingProp","limitShowing","selectedEntityId","showAverage","showAverageToggle","showTransactionCount","onClickEntity","onToggleAverage","_this$state2","entities","entityId","LIMIT","topEntities","otherEntities","components_NoTransactions","GenericEntitiesSection_GenericItemLink","components_SeeAll","MaybeLink","GenericItemLink","_this$props2","components_ListItem","components_LabelWithTransactionCount","GenericEntitiesSection_MaybeLink","evt","stopPropagation","components_AmountWithPercentage","CurrentMonth","selectedGroupId","handleSelectGroup","groupId","selectedGroup","transactionsThisMonth","components_DayByDaySection","components_GenericEntitiesSection","makeLink","pages","currentMonthGroup","path","categoryGroupId","Transaction","memo","TransactionsSection","categoryId","components_Transaction","CurrentMonthGroup","selectedCategoryId","handleSelectCategory","allCategories","allTransactions","selectedCategory","categoryIds","transactionsInGroup","transactionsInGroupForMonth","available","currentMonthCategory","components_TransactionsSection","CurrentMonthCategory","transactionsInCategory","transactionsInCategoryForMonth","useSelectedMonth","_useState","useState","_useState2","slicedToArray","selectedMonth","setSelectedMonth","selectedMonthRef","useRef","current","useSelectedEntityId","_useState3","_useState4","setSelectedEntityId","useTrendsShowAverage","_useState5","_useState6","setShowAverage","useMonthExclusions","_useState7","_useState8","setExcludeFirstMonth","_useState9","_useState10","setExcludeLastMonth","firstBudgetMonth","firstMonth","lastMonth","m","getMonths","onSetExclusion","exclude","MonthlyChart","average","stacked","onSelectMonth","yearLines","d","highlights","zIndex","findIndex","events","click","event","round","plotLines","gridLineColor","plotOptions","stacking","s","valueFunction","borderWidth","states","hover","brightness","Track","Toggle_templateObject","HEIGHT","on","Handle","Toggle_templateObject2","WIDTH","Toggle","ToggleWithLabel_templateObject","Label","ToggleWithLabel_templateObject2","ToggleWithLabel","checked","onChange","ToggleWithLabel_Container","target","components_Toggle","MonthByMonthSettingsModal","components_ToggleWithLabel","MonthByMonthSection","settingsModalOpen","selectedMonthTotal","transactionsByMonth","false","highlighted","true","components_MonthlyChart","components_MonthByMonthSettingsModal","Groups","onSelectGroup","_useTrendsShowAverage","_useTrendsShowAverage2","onToggleShowAverage","transactionsForMonth","components_MonthByMonthSection","TransactionsByMonthSection","selectedPayeeId","selectedPayee","topTransactions","otherTransactions","Group","categoryGroup","onSelectCategory","transactionsInSelectedMonth","components_TransactionsByMonthSection","Category","onSelectPayee","transactionsForCategory","categoryPayee","handleSelectMonth","transactionsForCategoryAndPayee","Income","_useSelectedMonth","_useSelectedMonth2","_useSelectedEntityId","_useSelectedEntityId2","onSelectPayeeId","IncomeVsExpensesChart","income","expenses","BreakdownNode","childrenMounted","handleToggleExpand","nodes","isTopLevel","valueRenderer","hasChildNodes","BreakdownNode_Container","BreakdownNode_ToggleNode","BreakdownNode_LeafNode","BreakdownNode_Nodes","Nodes","paddingLeft","node","BreakdownNode_BreakdownNode","NodeWrapper","BreakdownNode_templateObject","IconWrapper","BreakdownNode_templateObject2","ToggleNode","LeafNode","Breakdown","components_BreakdownNode","ExpensesBreakdown","totalIncome","categoryNodes","payeeNodes","groupNodes","rootPayeeNodes","components_Breakdown","IncomeBreakdown","Breakdowns","expenseTransactions","incomeTransactions","components_ExpensesBreakdown","components_IncomeBreakdown","IncomeVsExpenses","handleCloseSettingsModal","getSummaries","showing","showTotals","allSummaries","summaries","summary","totalExpenses","denominator","components_IncomeVsExpensesChart","components_Breakdowns","CREDIT_ACCOUNTS","NetWorthChart","groupedData","getStack","monthlyData","assets","asset","liabilities","liability","getNodes","accountsByGroup","account","startCase","AccountBreakdown","_ref4","hiddenAccounts","onToggleAccounts","_ref5","propEq","ids","NetWorthAccounts","keyBy","visibleNodes","reject","hiddenNodes","NetWorthAccounts_AccountBreakdown","values","last","NetWorth","groupByMonthAndAccount","mapValues","identity","keys","getSummaryByAccount","groupedTransactions","getSelectedBalances","selectedMonthIndex","eq","accountSummaries","handleToggleAccounts","shouldHide","newHiddenAccounts","selectedBalances","filterHidden","omitBy","_","selectedLiabilities","sum","b","selectedAssets","components_NetWorthChart","constant","components_NetWorthAccounts","isContribution","account_id","isCapitalGainOrLoss","Investments","_useMonthExclusions","selectedBreakdown","onSelectBreakdown","settings","investmentTransactions","isInvestmentTransaction","transactionsInMonth","contribution","capitalGain","ProjectionsChart","investmentsProjection","mortgageProjection","amountNeededToRetire","yearsUntilRetirement","floor","isDescendant","parent","child","parentNode","ClickOff","handleBodyClick","onClickOff","addEventListener","removeEventListener","ref","bodyEl","getElementsByTagName","ProjectionsSlider_templateObject","ProjectionsSlider","formatter","onBlur","onReset","rangeOptions","components_ClickOff","ProjectionsSlider_Container","innerRef","borderTop","ProjectionsSlider_Range","val","Range","adjustableEntries","adjustableEntriesByName","getInitialState","mortgageAccount","t","lastMonthTransactions","takeRightWhile","P","P1","c","prop","r","N","log","rate","paymentsLeft","projection","n","pow","mortgagePayment","principalProjection","getMortgageRate","remainingMortgagePayments","returnOnInvestments","investmentAccountIds","tr","startForMonth","returnRates","trs","contributions","gains","returns","totalReturn","multiply","getReturnOnInvestments","averageContribution","_ref6","transferAccountId","_ref7","accountId","diff","head","getAverageContribution","currentInvestments","getCurrentInvestments","averageExpenses","_ref8","startingBalanceId","mortgageAccountIds","getAverageExpensesWithoutMortgage","retirementReturns","retirementTaxRate","maxAverageExpenses","ceil","maxAverageContribution","Projections","handleChange","parseFloat","handleSelectAdjusting","adjustingName","handleClearSelection","handleResetCalculation","calculation","_ref9","monthlyRate","getProjection","YEARS_TO_PROJECT","monthlyRetirementReturn","remainingMortgage","projectionWithRetirement","_ref10","monthsBeforeRetirement","monthlyExpenses","getProjectionWithRetirement","hasMortgage","projectionByYear","chunk","mortgageProjectionByYear","nameToRangeOptions","step","components_ProjectionsChart","Projections_AdjustableEntry","isAdjusting","onSelect","Projections_Entry","components_ProjectionsSlider","AdjustableEntry","highlightValue","isAdjustable","Entry","_ref4$formatter","backgroundColor","borderRadius","Section","Section_templateObject","top","AccountsSelectionForm","_evt$target","SectionHeader","Settings_templateObject","Space","Settings_templateObject2","Settings","investmentModalOpen","mortgageModalOpen","handleClickEdit","section","handleCloseInvestmentModal","handleCloseMortgageModal","handleChangeInvestment","accountsObject","onUpdateAccounts","handleChangeMortgage","potentialInvestmentAccounts","on_budget","potentialMortageAccounts","investmentAccountsList","mortgageAccountList","components_Section","components_AccountsSelectionForm","params","part","breadcrumbs","groups","CategoryPayee","incomeVsExpenses","incomeVsExpensesShowing","netWorth","investments","projections","SidebarMenuContent_templateObject","SidebarMenuContent_templateObject2","StyledLink","NavLink","SidebarMenuContent_templateObject3","active","SidebarMenuContent","hasMultipleBudgets","onCloseSidebar","SidebarMenuContent_PureHeader","page","_pages$page","SidebarMenuContent_PureStyledLink","matchPath","PureHeader","SidebarMenuContent_Header","SidebarMenuContent_IconWrapper","PureStyledLink","SidebarMenu","handleSetOpen","handleTriggerClick","handleCloseSidebar","react_sidebar_esm","sidebar","components_SidebarMenuContent","onSetOpen","styles","pointerEvents","sidebarTrigger","SidebarMenu_Trigger","Trigger","alignSelf","Scroller","toBeScrolled","raf","scrollPositions","scrollTop","prevState","snapshot","action","cancelAnimationFrame","_this3","PageWrapper_templateObject","PageWrapper_templateObject2","PageWrapper_templateObject3","PageWrapper","content","historyAction","onAuthorize","components_EnsureBudgetLoaded","components_SidebarMenu","PageWrapper_Container","PageWrapper_Header","flexGrow","typeComponents_PageTitle","components_Scroller","PageWrapper_Body","flexShrink","Switch","Route","exact","render","match","routes","pageKey","PageBreadcrumbs","paddingBottom","PageActions","onChangeSetting","userSelect","INITIAL_STATE","CategoriesState","cachedStates","handleSelectPayee","handleSetExclusion","getFilteredTransactions","getFilteredSpendingTransactions","getFilteredIncomeTransactions","trendsPath","groupedPages","startsWith","PageContent","filteredTransactions","components_CategoriesState","trendPages","propsFunction","otherPages","Unauthorized","ErrorPage_templateObject","ErrorPage","ErrorPage_Container","NotFound","components_ErrorPage","ErrorBoundary","hasError","Rollbar","token","Budgets","budgetsLoaded","onRequestBudgets","App","budgetIds","payeesSort","handleRequestBudgets","handleRequestBudget","handleAuthorize","handleChangeSetting","hasToken","components_ErrorBoundary","components_Budgets","Provider","components_PageWrapper","history","pathname","components_PageTitle","components_PageBreadcrumbs","components_PageActions","components_PageContent","forceUpdate","component","components_Unauthorized","search","substring","decodeURIComponent","getAuthorizeToken","ynab","ReactDOM","HashRouter","components_App","getElementById"],"mappings":"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","file":"static/js/main.bd0e89ed.chunk.js","sourcesContent":["const cache = {};\n\nexport const getStorage = key => {\n  if (cache[key]) {\n    return cache[key];\n  }\n  const raw = localStorage.getItem(key);\n  if (raw) {\n    const parsed = JSON.parse(raw);\n    cache[key] = parsed;\n    return parsed;\n  }\n  return null;\n};\n\nexport const setStorage = (key, obj) => {\n  delete cache[key];\n\n  try {\n    localStorage.setItem(key, JSON.stringify(obj));\n  } catch (e) {\n    // Most likely exceeds storage quota\n  }\n};\n","import { getStorage, setStorage } from \"./localstorageUtils\";\nimport get from \"lodash/get\";\n\nconst SETTINGS = {\n  excludeFirstMonth: {\n    localStorageKey: \"budget-reports-exclude-first-month\",\n    default: false\n  },\n  excludeLastMonth: {\n    localStorageKey: \"budget-reports-exclude-last-month\",\n    default: false\n  },\n  investmentAccounts: {\n    localStorageKey: \"budget-reports-investment-accounts\",\n    default: {}\n  },\n  lastUpdated: {\n    localStorageKey: \"budget-reports-last-updated\",\n    default: null\n  },\n  mortgageAccounts: {\n    localStorageKey: \"budget-reports-mortgage-accounts\",\n    default: {}\n  },\n  netWorthHiddenAccounts: {\n    localStorageKey: \"budget-reports-networth-hidden-accounts\",\n    default: {}\n  },\n  spendingMonthsToCompare: {\n    localStorageKey: \"budget-reports-spending-months-to-compare\",\n    default: 3\n  },\n  trendsShowAverage: {\n    localStorageKey: \"budget-reports-trends-show-average\",\n    default: true\n  }\n};\n\nexport const getSetting = (settingsKey, budgetId) => {\n  const setting = SETTINGS[settingsKey];\n\n  if (!setting) {\n    throw new Error(\"not a valid settings key\");\n  }\n\n  return get(getStorage(setting.localStorageKey), budgetId, setting.default);\n};\n\nexport const setSetting = (settingsKey, budgetId, value) => {\n  const setting = SETTINGS[settingsKey];\n\n  if (!setting) {\n    throw new Error(\"not a valid settings key\");\n  }\n\n  const previousSetting = getStorage(setting.localStorageKey);\n\n  setStorage(setting.localStorageKey, {\n    ...previousSetting,\n    [budgetId]: value\n  });\n};\n","export const groupBy = func => arr => {\n  const grouped = {};\n  arr.forEach(obj => {\n    const key = func(obj);\n    if (!grouped[key]) {\n      grouped[key] = [];\n    }\n    grouped[key].push(obj);\n  });\n  return grouped;\n};\n\nexport const groupByProp = key => arr => {\n  const grouped = {};\n  arr.forEach(obj => {\n    if (!grouped[obj[key]]) {\n      grouped[obj[key]] = [];\n    }\n    grouped[obj[key]].push(obj);\n  });\n  return grouped;\n};\n\nexport const keyByProp = key => arr =>\n  arr.reduce((acc, curr) => ({ ...acc, [curr[key]]: curr }), {});\n\nexport const sumBy = func => arr =>\n  arr.reduce((acc, curr) => acc + func(curr), 0);\n\nexport const sumByProp = key => arr =>\n  arr.reduce((acc, curr) => acc + curr[key], 0);\n\nexport const simpleMemoize = func => {\n  let lastArgs = null;\n  let lastResult = null;\n  return (...args) => {\n    if (\n      lastArgs !== null &&\n      lastArgs.length === args.length &&\n      args.every((value, index) => value === lastArgs[index])\n    ) {\n      return lastResult;\n    }\n    lastArgs = args;\n    lastResult = func(...args);\n    return lastResult;\n  };\n};\n\nexport const notAny = predicates => arg =>\n  predicates.every(predicate => !predicate(arg));\n\nexport const upsertBy = (arr, key, obj, updater = (prev, curr) => curr) => {\n  let exists = false;\n  const newArr = arr.map(item => {\n    if (item[key] === obj[key]) {\n      exists = true;\n      return updater(item, obj);\n    }\n    return item;\n  });\n  return exists ? newArr : newArr.concat(obj);\n};\n","import { utils } from \"ynab\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport flatMap from \"lodash/fp/flatMap\";\nimport dropWhile from \"lodash/fp/dropWhile\";\nimport matchesProperty from \"lodash/fp/matchesProperty\";\nimport omit from \"lodash/fp/omit\";\nimport reverse from \"lodash/fp/reverse\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport uniq from \"lodash/fp/uniq\";\nimport { upsertBy, keyByProp } from \"./dataUtils\";\n\nconst formatCurrency = utils.convertMilliUnitsToCurrencyAmount;\n\nconst GROUPS_TO_HIDE = [\"Internal Master Category\", \"Credit Card Payments\"];\n\nconst MAX_MONTHS_TO_SHOW = 24;\n\nexport const sanitizeBudget = budget => {\n  const transactionIdsFromSub = uniq(\n    budget.subtransactions.map(transaction => transaction.transaction_id)\n  );\n  const categoryGroups = budget.category_groups.filter(\n    group => !GROUPS_TO_HIDE.includes(group.name)\n  );\n  const categories = budget.categories\n    .filter(category => !category.deleted)\n    .map(category => ({\n      ...category,\n      activity: formatCurrency(category.activity),\n      balance: formatCurrency(category.balance),\n      budgeted: formatCurrency(category.budgeted)\n    }));\n  const categoriesById = keyByProp(\"id\")(categories);\n  const earliestDate = moment()\n    .subtract(MAX_MONTHS_TO_SHOW - 1, \"months\")\n    .format(\"YYYY-MM-01\");\n  const currencyFormat = {\n    symbol: budget.currency_format.currency_symbol\n  };\n\n  return {\n    ...omit([\"category_groups\", \"currency_format\"])(budget),\n    accountsById: keyByProp(\"id\")(budget.accounts),\n    categoryGroups,\n    categoryGroupsById: keyByProp(\"id\")(categoryGroups),\n    categories,\n    categoriesById,\n    currencyFormat,\n    payeesById: keyByProp(\"id\")(budget.payees),\n    months: sortBy(\"month\")(budget.months),\n    transactions: compose([\n      transactions =>\n        transactions.map(transaction => ({\n          ...transaction,\n          amount: formatCurrency(transaction.amount)\n        })),\n      // Not sure how this would happen, but seeing it in production\n      transactions =>\n        transactions.filter(\n          transaction =>\n            !transaction.category_id ||\n            !!categoriesById[transaction.category_id]\n        ),\n      flatMap(\n        transaction =>\n          transactionIdsFromSub.includes(transaction.id)\n            ? compose([\n                subs =>\n                  subs.map(sub =>\n                    omit(\"transaction_id\")({ ...transaction, ...sub })\n                  ),\n                subs =>\n                  subs.filter(matchesProperty(\"transaction_id\", transaction.id))\n              ])(budget.subtransactions)\n            : transaction\n      ),\n      reverse,\n      dropWhile(transaction => transaction.date < earliestDate),\n      sortBy(\"date\"),\n      transactions =>\n        transactions.filter(transaction => transaction.amount !== 0)\n    ])(budget.transactions)\n  };\n};\n\nconst applyDeltas = (arr, deltas, key = \"id\", updater) =>\n  deltas.reduce((acc, curr) => upsertBy(acc, key, curr, updater), arr);\n\nconst arraysToUpdate = [\n  \"accounts\",\n  \"categories\",\n  \"category_groups\",\n  \"payee_locations\",\n  \"payees\",\n  \"scheduled_subtransactions\",\n  \"scheduled_transactions\",\n  \"subtransactions\",\n  \"transactions\"\n];\n\nexport const mergeBudgets = (budget, deltas) => ({\n  ...budget,\n  ...deltas,\n  ...arraysToUpdate.reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr]: applyDeltas(budget[curr], deltas[curr])\n    }),\n    {}\n  ),\n  months: applyDeltas(budget.months, deltas.months, \"month\", (prev, curr) => ({\n    ...prev,\n    ...curr,\n    categories: applyDeltas(prev.categories, curr.categories)\n  }))\n});\n","import get from \"lodash/fp/get\";\nimport { getStorage, setStorage } from \"./localstorageUtils\";\n\nconst BUDGET_DETAILS_STORAGE_KEY = \"ynab_budget_details\";\n\nlet cachedDetails = null;\n\nconst getAllBudgetDetails = () => {\n  if (cachedDetails) {\n    return cachedDetails;\n  }\n  cachedDetails = getStorage(BUDGET_DETAILS_STORAGE_KEY);\n  return cachedDetails;\n};\n\nexport const getBudgetDetails = id => get(id)(getAllBudgetDetails());\n\nexport const setBudgetDetails = ({ id, budget, server_knowledge }) => {\n  const details = getAllBudgetDetails();\n  const newDetails = {\n    ...details,\n    [id]: { budget, server_knowledge }\n  };\n  setStorage(BUDGET_DETAILS_STORAGE_KEY, newDetails);\n  cachedDetails = newDetails;\n};\n","import * as ynab from \"ynab\";\nimport moment from \"moment\";\nimport get from \"lodash/fp/get\";\nimport matches from \"lodash/fp/matches\";\nimport { getStorage, setStorage } from \"./localstorageUtils\";\nimport { setSetting, getSetting } from \"./uiRepo\";\nimport { sanitizeBudget, mergeBudgets } from \"./repoUtils\";\nimport { getBudgetDetails, setBudgetDetails } from \"./localBudgetCache\";\nimport { clientId, redirectUri } from \"./ynabConfig\";\n\nconst TOKEN_STORAGE_KEY = \"ynab_access_token\";\nconst BUDGETS_STORAGE_KEY = \"ynab_budgets\";\nconst LAST_LOCATION_KEY = \"budget-reports-last-location\";\n\nconst TIME_LIMIT_FOR_FULL_REFRESH = 8 * 1000;\n\nexport const AUTHORIZE_URL =\n  \"https://api.youneedabudget.com/oauth/authorize?client_id=\" +\n  clientId +\n  \"&redirect_uri=\" +\n  redirectUri +\n  \"&response_type=token\";\n\nexport const getAuthorizeToken = () => {\n  // check for hash route\n  if (window.location.hash[1] === \"/\") {\n    return localStorage.getItem(TOKEN_STORAGE_KEY);\n  }\n\n  const search = window.location.hash\n    .substring(1)\n    .replace(/&/g, '\",\"')\n    .replace(/=/g, '\":\"');\n\n  if (!search) {\n    return localStorage.getItem(TOKEN_STORAGE_KEY);\n  }\n\n  const token = get(\"access_token\")(\n    JSON.parse(\n      '{\"' + search + '\"}',\n      (key, value) => (key === \"\" ? value : decodeURIComponent(value))\n    )\n  );\n  localStorage.setItem(TOKEN_STORAGE_KEY, token);\n  window.location.hash = localStorage.getItem(LAST_LOCATION_KEY) || \"\";\n  localStorage.removeItem(LAST_LOCATION_KEY);\n\n  return token;\n};\n\nlet api = null;\n\nexport const initializeYnabApi = token => {\n  api = new ynab.api(token);\n};\n\nexport const getBudgets = () =>\n  api.budgets\n    .getBudgets()\n    .then(({ data }) => {\n      setStorage(BUDGETS_STORAGE_KEY, data);\n      return data;\n    })\n    .catch(e => {\n      if (\n        matches({\n          id: \"401\",\n          name: \"unauthorized\"\n        })(e.error) ||\n        e.message === \"Failed to fetch\"\n      ) {\n        localStorage.removeItem(TOKEN_STORAGE_KEY);\n        return getStorage(BUDGETS_STORAGE_KEY) || { budgets: [] };\n      }\n\n      throw e;\n    });\n\nconst getBudget = id =>\n  api.budgets\n    .getBudgetById(id)\n    .then(({ data }) => {\n      const { budget, server_knowledge } = data;\n\n      setBudgetDetails({ id, budget, server_knowledge });\n      setSetting(\"lastUpdated\", id, moment().valueOf());\n\n      return { budget: sanitizeBudget(budget), authorized: true };\n    })\n    .catch(e => {\n      if (\n        matches({ id: \"401\", name: \"unauthorized\" })(e.error) ||\n        e.message === \"Failed to fetch\"\n      ) {\n        localStorage.removeItem(TOKEN_STORAGE_KEY);\n        return {\n          budget: { categories: [], transactions: [], payees: [] },\n          authorized: false\n        };\n      }\n\n      throw e;\n    });\n\nexport const getUpdatedBudget = id => {\n  const budgetDetails = getBudgetDetails(id);\n\n  if (!budgetDetails) {\n    return getBudget(id);\n  }\n\n  if (\n    moment().valueOf() - getSetting(\"lastUpdated\", id) <\n    TIME_LIMIT_FOR_FULL_REFRESH\n  ) {\n    return getBudget(id);\n  }\n\n  return api.budgets\n    .getBudgetById(id, budgetDetails.server_knowledge)\n    .then(({ data }) => {\n      const budget = mergeBudgets(budgetDetails.budget, data.budget);\n\n      setBudgetDetails({ id, budget, server_knowledge: data.server_knowledge });\n      setSetting(\"lastUpdated\", id, moment().valueOf());\n\n      return { budget: sanitizeBudget(budget), authorized: true };\n    })\n    .catch(e => {\n      if (\n        matches({ id: \"401\", name: \"unauthorized\" })(e.error) ||\n        e.message === \"Failed to fetch\"\n      ) {\n        return {\n          budget: sanitizeBudget(budgetDetails.budget),\n          authorized: false\n        };\n      }\n\n      throw e;\n    });\n};\n\nexport const setLastLocation = () => {\n  localStorage.setItem(LAST_LOCATION_KEY, window.location.hash);\n};\n","import styled from \"styled-components\";\n\nexport const PageTitle = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: #222;\n`;\n\nexport const LargeNumber = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: #222;\n`;\n\nexport const StrongText = styled.div`\n  font-size: 14px;\n  line-height: 22px;\n  font-weight: 500;\n  color: #222;\n`;\n\nexport const SecondaryText = styled.div`\n  font-size: 13px;\n  line-height: 21px;\n  font-weight: 400;\n  color: #666;\n`;\n\nexport const MinorText = styled.div`\n  font-size: 11px;\n  line-height: 16px;\n  font-weight: 400;\n  color: #999;\n`;\n","import React from \"react\";\nimport { StrongText, SecondaryText } from \"./typeComponents\";\n\nconst Loading = () => (\n  <div\n    style={{\n      height: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }}\n  >\n    <StrongText>Loading&hellip;</StrongText>\n    <SecondaryText>beep, beep, boop</SecondaryText>\n  </div>\n);\n\nLoading.propTypes = {};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loading from \"./Loading\";\n\nclass EnsureBudgetLoaded extends Component {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    budgetLoaded: PropTypes.bool.isRequired,\n    children: PropTypes.node.isRequired,\n    onRequestBudget: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    const { budgetId, budgetLoaded, onRequestBudget } = this.props;\n\n    if (!budgetLoaded) {\n      onRequestBudget(budgetId);\n    }\n  }\n\n  render() {\n    if (!this.props.budgetLoaded) {\n      return <Loading />\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default EnsureBudgetLoaded;\n","import tinyColor from \"tinycolor2\";\n\nexport const primaryColor = \"#4399ff\";\nexport const positiveColor = \"#2cbc2f\";\nexport const plotBandColor = \"#f2f2f2\";\nexport const negativeColor = \"red\";\nexport const selectedPlotBandColor = tinyColor(primaryColor)\n  .lighten(32)\n  .desaturate()\n  .toHexString();\nexport const lighterPrimaryColor = tinyColor(primaryColor)\n  .lighten(5)\n  .desaturate()\n  .toHexString();\nexport const lightPrimaryColor = tinyColor(primaryColor)\n  .lighten(25)\n  .desaturate()\n  .toHexString();\nexport const negativeChartColor = tinyColor(negativeColor)\n  .lighten(30)\n  .desaturate(60)\n  .toHexString();\n\nexport const iconWidth = 60;\n","import styled from \"styled-components\";\nimport { SecondaryText } from \"./typeComponents\";\nimport { primaryColor } from \"../styleVariables\";\n\nconst Button = styled(SecondaryText)`\n  display: inline-block;\n  user-select: none;\n  border: 1px solid #ccc;\n  padding: 4px 12px;\n  border-radius: 2px;\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nexport const PrimaryButton = styled(Button)`\n  background-color: ${primaryColor};\n  border-color: ${primaryColor};\n  color: #fff;\n`;\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/fp/keys\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons/faArrowLeft\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons/faBars\";\nimport { faCaretDown } from \"@fortawesome/free-solid-svg-icons/faCaretDown\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons/faChevronRight\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons/faCog\";\nimport { faEllipsisV } from \"@fortawesome/free-solid-svg-icons/faEllipsisV\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons/faEye\";\nimport { faEyeSlash } from \"@fortawesome/free-solid-svg-icons/faEyeSlash\";\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons/faPencilAlt\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons/faTimes\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nlibrary.add(\n  faArrowLeft,\n  faBars,\n  faCaretDown,\n  faChevronRight,\n  faCog,\n  faEllipsisV,\n  faEye,\n  faEyeSlash,\n  faPencilAlt,\n  faTimes\n);\n\nconst ICONS = {\n  \"arrow-left\": faArrowLeft,\n  bars: faBars,\n  \"caret-down\": faCaretDown,\n  \"chevron-right\": faChevronRight,\n  cog: faCog,\n  pencil: faPencilAlt,\n  \"ellipsis-v\": faEllipsisV,\n  eye: faEye,\n  \"eye-slash\": faEyeSlash,\n  times: faTimes\n};\n\nconst PRESET_STYLES = {\n  faded: {\n    fontWeight: 400,\n    color: \"#aaa\",\n    fontSize: 10\n  }\n};\n\nconst Icon = ({ icon, style, faded, ...other }) => (\n  <FontAwesomeIcon\n    {...other}\n    icon={ICONS[icon]}\n    style={{ ...style, ...(faded && PRESET_STYLES.faded) }}\n  />\n);\n\nIcon.propTypes = {\n  icon: PropTypes.oneOf(keys(ICONS)).isRequired,\n  faded: PropTypes.bool\n};\n\nexport default Icon;\n","import compose from \"lodash/fp/compose\";\nimport pick from \"lodash/fp/pick\";\nimport mapRaw from \"lodash/fp/map\";\nimport get from \"lodash/fp/get\";\nimport { groupByProp, simpleMemoize, sumByProp } from \"./dataUtils\";\n\nconst map = mapRaw.convert({ cap: false });\n\nexport const isStartingBalanceOrReconciliation = simpleMemoize(budget => {\n  const startingBalancePayeeId = get(\"id\")(\n    budget.payees.find(payee => payee.name === \"Starting Balance\")\n  );\n  const reconciliationPayeeId = get(\"id\")(\n    budget.payees.find(\n      payee => payee.name === \"Reconciliation Balance Adjustment\"\n    )\n  );\n\n  return transaction =>\n    transaction.payee_id === startingBalancePayeeId ||\n    transaction.payee_id === reconciliationPayeeId;\n});\n\nexport const isIncome = simpleMemoize(budget => {\n  const toBeBudgetedId = get(\"id\")(\n    budget.categories.find(category => category.name === \"To be Budgeted\")\n  );\n  return transaction => transaction.category_id === toBeBudgetedId;\n});\n\nexport const isTransfer = (investmentAccounts = {}) => transaction =>\n  !transaction.category_id ||\n  !!investmentAccounts[transaction.transfer_account_id];\n\nexport const getTransactionMonth = transaction => transaction.date.slice(0, 7);\n\nexport const getFirstMonth = budget =>\n  budget.transactions.length\n    ? getTransactionMonth(budget.transactions[budget.transactions.length - 1])\n    : undefined;\n\nexport const getPayeeNodes = ({ payeesById, transactions }, divideBy = 1) =>\n  compose([\n    map((transactions, payeeId) => ({\n      ...(payeesById[payeeId]\n        ? pick([\"id\", \"name\"])(payeesById[payeeId])\n        : { id: \"no-payee\", name: \"(no payee)\" }),\n      amount: sumByProp(\"amount\")(transactions) / divideBy\n    })),\n    groupByProp(\"payee_id\")\n  ])(transactions);\n\nexport const sanitizeName = name => name.replace(/[^a-zA-Z0-9 ]/g, \"\").trim();\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { StrongText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\n\nconst Container = styled.div`\n  margin: 2px;\n  background-color: #fff;\n  border: 1px solid #e5e5e5;\n  border-radius: 2px;\n`;\n\nconst Header = styled(StrongText)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px 20px;\n  user-select: none;\n`;\n\nconst SettingsContainer = styled.div`\n  padding: 0 10px;\n  margin-right: -10px;\n  align-self: stretch;\n  display: flex;\n  align-items: center;\n`;\n\nconst Body = styled.div`\n  padding: 0 20px 15px;\n`;\n\nclass CollapsibleSection extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    title: PropTypes.string.isRequired,\n    actions: PropTypes.node,\n    hasSettings: PropTypes.bool,\n    noPadding: PropTypes.bool,\n    onClickSettings: PropTypes.func\n  };\n\n  state = { expanded: true };\n\n  handleClickTitle = () => {\n    this.setState(state => ({ ...state, expanded: !state.expanded }));\n  };\n\n  render() {\n    const {\n      actions,\n      children,\n      hasSettings,\n      noPadding,\n      title,\n      onClickSettings\n    } = this.props;\n\n    const { expanded } = this.state;\n\n    return (\n      <Container>\n        <Header>\n          <div\n            style={{ display: \"flex\", alignItems: \"center\" }}\n            onClick={this.handleClickTitle}\n          >\n            {title}\n            <Icon\n              icon=\"chevron-right\"\n              transform={{ rotate: expanded ? 90 : 0 }}\n              style={{ marginLeft: 10 }}\n              faded\n            />\n          </div>\n          {hasSettings &&\n            expanded && (\n              <SettingsContainer onClick={onClickSettings}>\n                <Icon icon=\"cog\" faded />\n              </SettingsContainer>\n            )}\n          {expanded && actions}\n        </Header>\n        <AnimateHeight isExpanded={expanded}>\n          <Body style={{ padding: noPadding && 0 }}>{children}</Body>\n        </AnimateHeight>\n      </Container>\n    );\n  }\n}\n\nexport default CollapsibleSection;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst CHART_DEFAULTS = {\n  chart: { height: 240, spacing: [0, 0, 0, 0] },\n  credits: { enabled: false },\n  legend: { enabled: false },\n  title: { text: \"\" },\n  subtitle: { text: \"\" },\n  tooltip: { enabled: false },\n  xAxis: { tickLength: 0 }\n};\n\nconst Chart = ({ options }) => (\n  <HighchartsReact\n    highcharts={Highcharts}\n    options={{\n      ...CHART_DEFAULTS,\n      ...options,\n      chart: { ...CHART_DEFAULTS.chart, ...options.chart },\n      xAxis: { ...CHART_DEFAULTS.xAxis, ...options.xAxis }\n    }}\n  />\n);\n\nChart.propTypes = {\n  options: PropTypes.object\n};\n\nexport default Chart;\n","import React from \"react\";\n\nconst CurrencyContext = React.createContext();\n\nexport default CurrencyContext;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport get from \"lodash/fp/get\";\nimport { positiveColor, negativeColor } from \"../styleVariables\";\nimport CurrencyContext from \"./CurrencyContext\";\n\nexport const addCommas = nStr => {\n  nStr += \"\";\n\n  const x = nStr.split(\".\");\n  let x1 = x[0];\n  const x2 = x.length > 1 ? \".\" + x[1] : \"\";\n  const rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, \"$1,$2\");\n  }\n  return x1 + x2;\n};\n\nconst Amount = ({\n  amount,\n  amountAfterDecimal,\n  positiveIsRed,\n  showCurrencySymbol,\n  style\n}) => (\n  <CurrencyContext.Consumer>\n    {currencyFormat => (\n      <span\n        style={{\n          ...style,\n          color: amount > 0 && (positiveIsRed ? negativeColor : positiveColor)\n        }}\n      >\n        {amount > 0 && (positiveIsRed ? \"-\" : \"+\")}\n        {showCurrencySymbol && (get(\"symbol\")(currencyFormat) || \"$\")}\n        {addCommas(Math.abs(amount).toFixed(amountAfterDecimal))}\n      </span>\n    )}\n  </CurrencyContext.Consumer>\n);\n\nAmount.propTypes = {\n  amount: PropTypes.number.isRequired,\n  amountAfterDecimal: PropTypes.number,\n  positiveIsRed: PropTypes.bool,\n  showCurrencySymbol: PropTypes.bool,\n  style: PropTypes.object\n};\n\nAmount.defaultProps = {\n  amountAfterDecimal: 2\n};\n\nexport default Amount;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport isNumber from \"lodash/fp/isNumber\";\nimport { MinorText, LargeNumber } from \"./typeComponents\";\nimport Amount from \"./Amount\";\n\nconst ChartNumbers = ({ numbers, alwaysRound }) => {\n  const smallNumbers = numbers.some(({ amount }) => Math.abs(amount) < 100);\n  return (\n    <div\n      style={{\n        textAlign: \"right\",\n        lineHeight: \"16px\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        flexDirection: \"row-reverse\",\n        marginBottom: 8\n      }}\n    >\n      {numbers.map(({ amount, label, isMoney = true, decimalsToRound }) => (\n        <div key={label} style={{ marginLeft: 20 }}>\n          <LargeNumber style={{ lineHeight: \"16px\" }}>\n            <Amount\n              amount={amount}\n              amountAfterDecimal={\n                isNumber(decimalsToRound)\n                  ? decimalsToRound\n                  : smallNumbers && !alwaysRound\n                    ? 2\n                    : 0\n              }\n              showCurrencySymbol={isMoney}\n              positiveIsRed\n            />\n          </LargeNumber>\n          <MinorText>{label}</MinorText>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nChartNumbers.propTypes = {\n  numbers: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      label: PropTypes.string.isRequired,\n      alwaysRound: PropTypes.bool,\n      decimalsToRound: PropTypes.number,\n      isMoney: PropTypes.bool\n    })\n  ).isRequired,\n  alwaysRound: PropTypes.bool\n};\n\nexport default ChartNumbers;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport tinyColor from \"tinycolor2\";\nimport compose from \"lodash/fp/compose\";\nimport isNumber from \"lodash/fp/isNumber\";\nimport padCharsStart from \"lodash/fp/padCharsStart\";\nimport range from \"lodash/fp/range\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport { groupByProp, sumByProp } from \"../dataUtils\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport { primaryColor, plotBandColor } from \"../styleVariables\";\nimport { MinorText } from \"./typeComponents\";\nimport Chart from \"./Chart\";\nimport ChartNumbers from \"./ChartNumbers\";\n\nconst DateLabels = styled.div`\n  border-top: 1px solid #ddd;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst getData = ({ month, transactionsByDate }) => {\n  const today = moment().format(\"YYYY-MM-DD\");\n  let cumulative = 0;\n  return range(-1, moment(month).daysInMonth()).map(numDays => {\n    const date =\n      numDays === -1\n        ? moment(month).add(-1, \"days\")\n        : `${month}-${padCharsStart(\"0\")(2)(numDays + 1)}`;\n\n    if (date > today) {\n      return null;\n    }\n\n    cumulative += -sumBy(\"amount\")(transactionsByDate[date] || []);\n\n    return cumulative;\n  });\n};\n\nclass SpendingChart extends PureComponent {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    currentMonth: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        date: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    total: PropTypes.number\n  };\n\n  render() {\n    const {\n      total,\n      transactions,\n      highlightFunction,\n      currentMonth,\n      monthsToCompare\n    } = this.props;\n\n    const highlightedTransactions = highlightFunction\n      ? transactions.filter(highlightFunction)\n      : [];\n    const highlightData = getData({\n      month: currentMonth,\n      transactionsByDate: groupByProp(\"date\")(highlightedTransactions)\n    });\n    const highlightSeries = {\n      type: \"areaspline\",\n      data: highlightData,\n      enableMouseTracking: false,\n      marker: { enabled: false },\n      animation: false,\n      color: primaryColor,\n      lineWidth: 0,\n      fillOpacity: 0.8\n    };\n    const daysInMonth = moment(currentMonth).daysInMonth();\n    const firstDate = moment(currentMonth).add(-1, \"days\");\n    const lastDate = moment(currentMonth).add(daysInMonth - 1, \"days\");\n\n    const transactionsByDate = groupByProp(\"date\")(transactions);\n    const data = getData({ month: currentMonth, transactionsByDate });\n    const lineData = range(0, daysInMonth + 1).map(\n      day => (day / daysInMonth) * total\n    );\n    const firstDayOfWeek = parseInt(firstDate.format(\"d\"), 10);\n    const plotBands = range(0, 6).map(num => ({\n      color: plotBandColor,\n      from: num * 7 - 1.5 - firstDayOfWeek,\n      to: num * 7 + 0.5 - firstDayOfWeek\n    }));\n\n    const comparisonSeries = range(monthsToCompare, 0).map(numMonths => ({\n      type: \"spline\",\n      data: getData({\n        month: moment(currentMonth)\n          .subtract(numMonths, \"months\")\n          .format(\"YYYY-MM\"),\n        transactionsByDate\n      }),\n      enableMouseTracking: false,\n      color:\n        \"#\" +\n        tinyColor\n          .mix(\n            primaryColor,\n            \"#f2f2f2\",\n            30 + ((numMonths - 1) * 70) / monthsToCompare\n          )\n          .toHex(),\n      lineWidth: 1,\n      marker: { enabled: false },\n      animation: false\n    }));\n\n    const spent = compose([\n      sumByProp(\"amount\"),\n      takeWhile(\n        transaction => getTransactionMonth(transaction) === currentMonth\n      )\n    ])(transactions);\n    const chartNumbers = [{ amount: spent, label: \"spent\" }];\n    if (isNumber(total)) {\n      chartNumbers.push({ amount: -(total + spent), label: \"available\" });\n    }\n\n    return (\n      <Fragment>\n        <ChartNumbers numbers={chartNumbers} />\n        <Chart\n          key={monthsToCompare}\n          options={{\n            chart: { spacing: [0, 0, 0, 0], height: 140, animation: false },\n            xAxis: {\n              labels: { enabled: false },\n              plotBands\n            },\n            yAxis: { visible: false, endOnTick: false, startOnTick: false },\n            series: [\n              {\n                type: \"line\",\n                color: \"#aaa\",\n                dashStyle: \"Dot\",\n                lineWidth: 1,\n                data: lineData,\n                enableMouseTracking: false,\n                marker: { enabled: false },\n                animation: false\n              },\n              ...comparisonSeries,\n              {\n                type: \"spline\",\n                data,\n                enableMouseTracking: false,\n                color: primaryColor,\n                marker: { enabled: false },\n                animation: false,\n                ...(highlightFunction && {\n                  type: \"areaspline\",\n                  fillOpacity: 0.2\n                })\n              },\n              highlightSeries\n            ]\n          }}\n        />\n        <DateLabels>\n          <MinorText>{firstDate.format(\"MMM D\")}</MinorText>\n          <MinorText>{lastDate.format(\"MMM D\")}</MinorText>\n        </DateLabels>\n      </Fragment>\n    );\n  }\n}\n\nexport default SpendingChart;\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { StrongText } from \"./typeComponents\";\nimport { PrimaryButton } from \"./Button\";\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  opacity: 0;\n  transition: opacity 0.2s ease-in-out;\n`;\n\nconst ModalContent = styled.div`\n  position: relative;\n  min-width: 200px;\n  padding: 15px 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  background-color: #fff;\n  border-radius: 2px;\n  transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out;\n`;\n\nconst ensureNextTick = callback =>\n  requestAnimationFrame(() => {\n    requestAnimationFrame(callback);\n  });\n\nclass Modal extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    width: PropTypes.number\n  };\n\n  constructor() {\n    super();\n    this.el = document.createElement(\"div\");\n    this.state = { animationState: \"left\" };\n  }\n\n  componentDidMount() {\n    document.body.appendChild(this.el);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.open && this.props.open) {\n      ensureNextTick(() => {\n        this.setState({ animationState: \"entering\" });\n      });\n    }\n    if (prevProps.open && !this.props.open) {\n      ensureNextTick(() => {\n        this.setState({ animationState: \"leaving\" });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.el);\n  }\n\n  handleTransitionEnd = () => {\n    const { animationState } = this.state;\n\n    if (animationState === \"entering\") {\n      this.setState({ animationState: \"entered\" });\n    } else if (animationState === \"leaving\") {\n      this.setState({ animationState: \"left\" });\n    }\n  };\n\n  render() {\n    const { open, children, title, onClose, width } = this.props;\n    const { animationState } = this.state;\n\n    if (!open && animationState === \"left\") {\n      return null;\n    }\n\n    const shouldShow = [\"entering\", \"entered\"].includes(animationState);\n\n    return createPortal(\n      <Container>\n        <Overlay\n          onClick={onClose}\n          style={{ opacity: shouldShow ? 1 : 0 }}\n          onTransitionEnd={this.handleTransitionEnd}\n        />\n        <ModalContent\n          style={{\n            opacity: shouldShow ? 1 : 0,\n            transform: `translate3d(0, ${shouldShow ? \"0\" : \"20px\"}, 0)`,\n            width\n          }}\n        >\n          {title && (\n            <StrongText style={{ marginBottom: 10 }}>{title}</StrongText>\n          )}\n          {children}\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              marginTop: 20\n            }}\n          >\n            <PrimaryButton onClick={onClose}>Done</PrimaryButton>\n          </div>\n        </ModalContent>\n      </Container>,\n      this.el\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"./Modal\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Button from \"./Button\";\n\nconst ChartSettingsModal = ({\n  open,\n  monthsToCompare,\n  onClose,\n  onDecrementMonths,\n  onIncrementMonths\n}) => (\n  <Modal open={open} title=\"Chart Settings\" onClose={onClose}>\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <div style={{ marginRight: 10 }}>\n        <Button onClick={onDecrementMonths}>-</Button>\n        <Button onClick={onIncrementMonths}>+</Button>\n      </div>\n      <SecondaryText>\n        Compare with the last {monthsToCompare} month\n        {monthsToCompare === 1 ? \"\" : \"s\"}\n      </SecondaryText>\n    </div>\n  </Modal>\n);\n\nChartSettingsModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  monthsToCompare: PropTypes.number.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onDecrementMonths: PropTypes.func.isRequired,\n  onIncrementMonths: PropTypes.func.isRequired\n};\n\nexport default ChartSettingsModal;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getSetting, setSetting } from \"../uiRepo\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport SpendingChart from \"./SpendingChart\";\nimport ChartSettingsModal from \"./ChartSettingsModal\";\n\nconst MAX_MONTHS = 12;\n\nclass DayByDaySection extends Component {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    currentMonth: PropTypes.string.isRequired,\n    transactions: PropTypes.array.isRequired,\n    highlightFunction: PropTypes.func,\n    title: PropTypes.string,\n    total: PropTypes.number\n  };\n\n  static defaultProps = { title: \"Day by Day\" };\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      modalOpen: false,\n      monthsToCompare: getSetting(\"spendingMonthsToCompare\", props.budgetId)\n    };\n  }\n\n  handleClickSettings = () => {\n    this.setState({ modalOpen: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ modalOpen: false });\n  };\n\n  handleDecrementMonths = () => {\n    this.setState(\n      state => ({\n        ...state,\n        monthsToCompare: Math.max(state.monthsToCompare - 1, 0)\n      }),\n      this.saveSetting\n    );\n  };\n\n  handleIncrementMonths = () => {\n    this.setState(\n      state => ({\n        ...state,\n        monthsToCompare: Math.min(state.monthsToCompare + 1, MAX_MONTHS)\n      }),\n      this.saveSetting\n    );\n  };\n\n  saveSetting = () => {\n    setSetting(\n      \"spendingMonthsToCompare\",\n      this.props.budgetId,\n      this.state.monthsToCompare\n    );\n  };\n\n  render() {\n    const { transactions, budgetId, currentMonth, highlightFunction, title, total } = this.props;\n    const { modalOpen, monthsToCompare } = this.state;\n\n    return (\n      <Fragment>\n        <CollapsibleSection\n          title={title}\n          hasSettings\n          onClickSettings={this.handleClickSettings}\n        >\n          <SpendingChart\n            budgetId={budgetId}\n            currentMonth={currentMonth}\n            highlightFunction={highlightFunction}\n            monthsToCompare={monthsToCompare}\n            total={total}\n            transactions={transactions}\n          />\n        </CollapsibleSection>\n        <ChartSettingsModal\n          open={modalOpen}\n          monthsToCompare={monthsToCompare}\n          onClose={this.handleCloseModal}\n          onDecrementMonths={this.handleDecrementMonths}\n          onIncrementMonths={this.handleIncrementMonths}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default DayByDaySection;\n","import styled from \"styled-components\";\n\nconst ListItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 0;\n  border-top: 1px dotted #ddd;\n  user-select: none;\n\n  &:first-child {\n    border-top: ${props => !props.isContinuing && 0};\n    padding-top: ${props => !props.isContinuing && 0};\n  }\n`;\n\nexport default ListItem;\n","import styled from \"styled-components\";\nimport { SecondaryText } from \"./typeComponents\";\n\nconst EmptyText = styled(SecondaryText)`\n  text-align: center;\n  margin: 10px;\n  opacity: 0.5;\n`;\n\nexport default EmptyText;\n","import React from \"react\";\nimport EmptyText from \"./EmptyText\";\n\nconst NoTransactions = () => <EmptyText>No transactions this month</EmptyText>;\n\nexport default NoTransactions;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\n\nclass LabelWithMinorText extends PureComponent {\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    bold: PropTypes.bool,\n    inLink: PropTypes.bool,\n    minorText: PropTypes.string,\n    to: PropTypes.string\n  };\n\n  render() {\n    const { label, minorText, inLink, to, bold } = this.props;\n    return (\n      <SecondaryText\n        style={{\n          fontWeight: bold && 700,\n          display: \"flex\",\n          alignItems: \"baseline\",\n          whiteSpace: \"pre\",\n          overflow: \"hidden\",\n          color: inLink && \"inherit\"\n        }}\n      >\n        {to ? (\n          <Link to={to}>{label}</Link>\n        ) : label}\n        {minorText && (\n          <MinorText\n            style={{\n              fontWeight: bold && 700,\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\"\n            }}\n          >\n            &nbsp;&ndash; {minorText}\n          </MinorText>\n        )}\n      </SecondaryText>\n    );\n  }\n}\n\nexport default LabelWithMinorText;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport LabelWithMinorText from \"./LabelWithMinorText\";\n\nclass LabelWithTransactionCount extends PureComponent {\n  static propTypes = {\n    count: PropTypes.number.isRequired,\n    label: PropTypes.string.isRequired,\n    inLink: PropTypes.bool,\n    selected: PropTypes.bool,\n    showCount: PropTypes.bool,\n    to: PropTypes.string\n  };\n\n  static defaultProps = { showCount: true };\n\n  render() {\n    const { label, count, inLink, selected, showCount, to } = this.props;\n    return (\n      <LabelWithMinorText\n        bold={selected}\n        label={label}\n        minorText={showCount && `${count} transaction${count === 1 ? \"\" : \"s\"}`}\n        inLink={inLink}\n        to={to}\n      />\n    );\n  }\n}\n\nexport default LabelWithTransactionCount;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\n\nconst AmountWithPercentage = ({\n  amount,\n  positiveIsRed,\n  total,\n  faded,\n  selected\n}) => (\n  <SecondaryText\n    style={{\n      display: \"flex\",\n      alignItems: \"baseline\",\n      opacity: faded ? 0.3 : 1,\n      fontWeight: selected && 700\n    }}\n  >\n    <Amount amount={amount} positiveIsRed={positiveIsRed} />\n    <MinorText\n      style={{ width: 44, textAlign: \"right\", fontWeight: selected && 700 }}\n    >\n      {total ? `${((amount / total) * 100).toFixed(1)}%` : `–`}\n    </MinorText>\n  </SecondaryText>\n);\n\nAmountWithPercentage.propTypes = {\n  amount: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveIsRed: PropTypes.bool,\n  faded: PropTypes.bool,\n  selected: PropTypes.bool\n};\n\nexport default AmountWithPercentage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MinorText } from \"./typeComponents\";\n\nconst SeeAll = ({ count, pluralizedName, showAll, onToggle }) => (\n  <MinorText style={{ textAlign: \"center\", marginTop: 5 }} onClick={onToggle}>\n    {showAll ? \"see less\" : `see all ${count} ${pluralizedName}`}\n  </MinorText>\n);\n\nSeeAll.propTypes = {\n  count: PropTypes.number.isRequired,\n  pluralizedName: PropTypes.string.isRequired,\n  showAll: PropTypes.bool.isRequired,\n  onToggle: PropTypes.func.isRequired\n};\n\nexport default SeeAll;\n","import React, { Component, PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport get from \"lodash/fp/get\";\nimport map from \"lodash/fp/map\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { groupBy, groupByProp, sumByProp } from \"../dataUtils\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { Link } from \"react-router-dom\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport { SecondaryText } from \"./typeComponents\";\nimport ListItem from \"./ListItem\";\nimport NoTransactions from \"./NoTransactions\";\nimport LabelWithTransactionCount from \"./LabelWithTransactionCount\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\nimport SeeAll from \"./SeeAll\";\n\nconst mapWithKeys = map.convert({ cap: false });\nconst LIMIT = 5;\n\nconst keyToPluralizedName = {\n  category_group_id: \"category groups\",\n  category_id: \"categories\",\n  payee_id: \"payees\"\n};\n\nclass GenericEntitiesSection extends Component {\n  static propTypes = {\n    entitiesById: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    entityKey: PropTypes.oneOf([\n      \"category_id\",\n      \"category_group_id\",\n      \"payee_id\"\n    ]),\n    emptyName: PropTypes.string,\n    entityFunction: PropTypes.func,\n    positiveIsRed: PropTypes.bool,\n    linkFunction: PropTypes.func,\n    limitShowing: PropTypes.bool,\n    numMonths: PropTypes.number,\n    selectedEntityId: PropTypes.string,\n    showAverage: PropTypes.bool,\n    showAverageToggle: PropTypes.bool,\n    showTransactionCount: PropTypes.bool,\n    onClickEntity: PropTypes.func,\n    onToggleAverage: PropTypes.func\n  };\n\n  static defaultProps = { emptyName: \"(none)\" };\n\n  state = { showAll: false, allMounted: false };\n\n  handleToggleShowAll = () => {\n    const { allMounted, showAll } = this.state;\n    if (allMounted) {\n      this.setState({ showAll: !showAll });\n    } else {\n      this.setState({ allMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ showAll: true });\n      });\n    }\n  };\n\n  render() {\n    const {\n      emptyName,\n      entityKey,\n      entityFunction,\n      entitiesById,\n      positiveIsRed,\n      linkFunction,\n      limitShowing: limitShowingProp,\n      numMonths,\n      selectedEntityId,\n      showAverage,\n      showAverageToggle,\n      showTransactionCount,\n      title,\n      transactions,\n      onClickEntity,\n      onToggleAverage\n    } = this.props;\n    const { allMounted, showAll } = this.state;\n    let total = 0;\n    const entities = compose([\n      sortBy(\"amount\"),\n      mapWithKeys((transactions, entityId) => {\n        const amount = sumByProp(\"amount\")(transactions);\n        total += amount;\n\n        return {\n          entityId,\n          transactions: transactions.length,\n          amount\n        };\n      }),\n      entityFunction ? groupBy(entityFunction) : groupByProp(entityKey)\n    ])(transactions);\n\n    const limitShowing = limitShowingProp && entities.length > LIMIT + 1;\n    const topEntities = entities.slice(0, LIMIT);\n    const otherEntities = entities.slice(LIMIT);\n\n    return (\n      <CollapsibleSection\n        title={title}\n        actions={\n          showAverageToggle && (\n            <SecondaryText onClick={onToggleAverage}>\n              {showAverage ? \"average\" : \"total\"}\n            </SecondaryText>\n          )\n        }\n      >\n        {entities.length === 0 && <NoTransactions />}\n        {(limitShowing ? topEntities : entities).map(\n          ({ entityId, transactions, amount }) => (\n            <GenericItemLink\n              key={entityId}\n              showTransactionCount={showTransactionCount}\n              to={\n                linkFunction && !!entitiesById[entityId]\n                  ? linkFunction(entityId)\n                  : null\n              }\n              transactions={transactions}\n              name={get(\"name\")(entitiesById[entityId]) || emptyName}\n              amount={showAverage ? amount / numMonths : amount}\n              positiveIsRed={positiveIsRed}\n              selected={entityId === selectedEntityId}\n              total={showAverage ? total / numMonths : total}\n              id={entityId}\n              onClick={onClickEntity}\n            />\n          )\n        )}\n        {allMounted && (\n          <AnimateHeight isExpanded={showAll}>\n            <Fragment>\n              {otherEntities.map(({ entityId, transactions, amount }) => (\n                <GenericItemLink\n                  key={entityId}\n                  showTransactionCount={showTransactionCount}\n                  to={\n                    linkFunction && !!entitiesById[entityId]\n                      ? linkFunction(entityId)\n                      : null\n                  }\n                  transactions={transactions}\n                  name={get(\"name\")(entitiesById[entityId]) || emptyName}\n                  amount={showAverage ? amount / numMonths : amount}\n                  positiveIsRed={positiveIsRed}\n                  selected={entityId === selectedEntityId}\n                  total={total}\n                  id={entityId}\n                  onClick={onClickEntity}\n                  isContinuing\n                />\n              ))}\n            </Fragment>\n          </AnimateHeight>\n        )}\n        {!!otherEntities.length &&\n          limitShowing && (\n            <SeeAll\n              count={entities.length}\n              pluralizedName={keyToPluralizedName[entityKey]}\n              showAll={showAll}\n              onToggle={this.handleToggleShowAll}\n            />\n          )}\n      </CollapsibleSection>\n    );\n  }\n}\n\nconst MaybeLink = ({ to, children, ...other }) =>\n  to ? (\n    <Link {...other} to={to}>\n      {children}\n    </Link>\n  ) : (\n    <span {...other}>{children}</span>\n  );\n\nclass GenericItemLink extends PureComponent {\n  render() {\n    const {\n      showTransactionCount,\n      to,\n      transactions,\n      name,\n      amount,\n      positiveIsRed,\n      total,\n      selected,\n      id,\n      onClick,\n      isContinuing\n    } = this.props;\n    return (\n      <ListItem\n        isContinuing={isContinuing}\n        onClick={onClick && (() => onClick(id))}\n      >\n        {showTransactionCount ? (\n          <LabelWithTransactionCount\n            count={transactions}\n            label={name}\n            selected={selected}\n            to={to}\n          />\n        ) : (\n          <MaybeLink\n            to={to}\n            onClick={\n              to &&\n              (evt => {\n                evt.stopPropagation();\n              })\n            }\n          >\n            <SecondaryText\n              style={{\n                whiteSpace: \"pre\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                color: \"inherit\",\n                fontWeight: selected && 700\n              }}\n            >\n              {name}\n            </SecondaryText>\n          </MaybeLink>\n        )}\n        <AmountWithPercentage\n          amount={amount}\n          positiveIsRed={positiveIsRed}\n          selected={selected}\n          total={total}\n        />\n      </ListItem>\n    );\n  }\n}\n\nGenericItemLink.propTypes = {\n  amount: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  total: PropTypes.number.isRequired,\n  transactions: PropTypes.number.isRequired,\n  id: PropTypes.string,\n  isContinuing: PropTypes.bool,\n  selected: PropTypes.bool,\n  showTransactionCount: PropTypes.bool,\n  to: PropTypes.string\n};\n\nexport default GenericEntitiesSection;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport {\n  getTransactionMonth,\n  isTransfer,\n  isStartingBalanceOrReconciliation,\n  isIncome,\n  sanitizeName\n} from \"../budgetUtils\";\nimport { notAny } from \"../dataUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nclass CurrentMonth extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.object.isRequired,\n    currentMonth: PropTypes.string.isRequired,\n    investmentAccounts: PropTypes.object.isRequired\n  };\n\n  state = { selectedGroupId: null };\n\n  handleSelectGroup = groupId => {\n    this.setState(state => ({\n      ...state,\n      selectedGroupId: state.selectedGroupId === groupId ? null : groupId\n    }));\n  };\n\n  render() {\n    const { budget, currentMonth, investmentAccounts } = this.props;\n    const { selectedGroupId } = this.state;\n    const { categoryGroupsById, categoriesById, id: budgetId } = budget;\n\n    const selectedGroup =\n      selectedGroupId && categoryGroupsById[selectedGroupId];\n    const transactions = budget.transactions.filter(\n      notAny([\n        isIncome(budget),\n        isTransfer(investmentAccounts),\n        isStartingBalanceOrReconciliation(budget)\n      ])\n    );\n    const transactionsThisMonth = takeWhile(\n      transaction => getTransactionMonth(transaction) === currentMonth\n    )(transactions);\n\n    return (\n      <Fragment>\n        <DayByDaySection\n          budgetId={budget.id}\n          currentMonth={currentMonth}\n          transactions={transactions}\n          highlightFunction={\n            selectedGroupId &&\n            (transaction =>\n              categoriesById[transaction.category_id].category_group_id ===\n              selectedGroupId)\n          }\n          title={\n            selectedGroup\n              ? `Day by Day: ${sanitizeName(selectedGroup.name)}`\n              : \"Day by Day\"\n          }\n        />\n        <GenericEntitiesSection\n          entitiesById={categoryGroupsById}\n          entityFunction={transaction =>\n            categoriesById[transaction.category_id].category_group_id\n          }\n          linkFunction={groupId =>\n            makeLink(pages.currentMonthGroup.path, {\n              budgetId,\n              categoryGroupId: groupId\n            })\n          }\n          selectedEntityId={selectedGroupId}\n          title=\"Category Groups\"\n          transactions={transactionsThisMonth}\n          showTransactionCount\n          onClickEntity={this.handleSelectGroup}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default CurrentMonth;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport get from \"lodash/fp/get\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\nimport ListItem from \"./ListItem\";\nimport Amount from \"./Amount\";\nimport LabelWithMinorText from \"./LabelWithMinorText\";\n\nclass Transaction extends PureComponent {\n  static propTypes = {\n    amount: PropTypes.number.isRequired,\n    date: PropTypes.string.isRequired,\n    category: PropTypes.shape({\n      name: PropTypes.string.isRequired\n    }),\n    isContinuing: PropTypes.bool,\n    memo: PropTypes.string,\n    payee: PropTypes.shape({\n      name: PropTypes.string.isRequired\n    })\n  };\n\n  render() {\n    const { category, payee, memo, date, amount, isContinuing } = this.props;\n\n    return (\n      <ListItem isContinuing={isContinuing}>\n        <div style={{ overflow: \"hidden\" }}>\n          <LabelWithMinorText\n            label={get(\"name\")(payee) || \"(no payee)\"}\n            minorText={\n              (get(\"name\")(category) || \"\") + (memo ? ` (${memo})` : \"\")\n            }\n          />\n          <MinorText>{moment(date).format(\"dddd, MMM D\")}</MinorText>\n        </div>\n        <SecondaryText>\n          <Amount amount={amount} />\n        </SecondaryText>\n      </ListItem>\n    );\n  }\n}\n\nexport default Transaction;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Transaction from \"./Transaction\";\nimport NoTransactions from \"./NoTransactions\";\n\nconst TransactionsSection = ({\n  transactions,\n  title,\n  categoriesById,\n  payeesById\n}) => (\n  <CollapsibleSection title={title}>\n    {transactions.length ? (\n      transactions.map(\n        ({\n          id,\n          category_id: categoryId,\n          payee_id: payeeId,\n          date,\n          memo,\n          amount\n        }) => (\n          <Transaction\n            key={id}\n            amount={amount}\n            category={categoriesById[categoryId]}\n            date={date}\n            memo={memo}\n            payee={payeesById[payeeId]}\n          />\n        )\n      )\n    ) : (\n      <NoTransactions />\n    )}\n  </CollapsibleSection>\n);\n\nTransactionsSection.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      category_id: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      payee_id: PropTypes.string\n    })\n  ).isRequired,\n  title: PropTypes.string\n};\n\nTransactionsSection.defaultProps = { title: \"Transactions\" };\n\nexport default TransactionsSection;\n","import React, { PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport { sumByProp } from \"../dataUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport TransactionsSection from \"./TransactionsSection\";\n\nclass CurrentMonthGroup extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      categories: PropTypes.array.isRequired,\n      id: PropTypes.string.isRequired,\n      payeesById: PropTypes.object.isRequired,\n      transactions: PropTypes.array.isRequired\n    }).isRequired,\n    categoryGroupId: PropTypes.string.isRequired,\n    currentMonth: PropTypes.string.isRequired\n  };\n\n  state = { selectedCategoryId: null };\n\n  handleSelectCategory = categoryId => {\n    this.setState(state => ({\n      ...state,\n      selectedCategoryId:\n        state.selectedCategoryId === categoryId ? null : categoryId\n    }));\n  };\n\n  render() {\n    const { budget, categoryGroupId, currentMonth } = this.props;\n    const { selectedCategoryId } = this.state;\n    const {\n      id: budgetId,\n      payeesById,\n      categories: allCategories,\n      categoriesById,\n      transactions: allTransactions\n    } = budget;\n\n    const selectedCategory =\n      selectedCategoryId && categoriesById[selectedCategoryId];\n    const categories = allCategories.filter(\n      category => category.category_group_id === categoryGroupId\n    );\n    const categoryIds = categories.map(category => category.id);\n    const transactionsInGroup = allTransactions.filter(transaction =>\n      categoryIds.includes(transaction.category_id)\n    );\n    const transactionsInGroupForMonth = transactionsInGroup.filter(\n      transaction => getTransactionMonth(transaction) === currentMonth\n    );\n    const highlightedTransactions =\n      selectedCategoryId &&\n      transactionsInGroupForMonth.filter(\n        transaction => transaction.category_id === selectedCategoryId\n      );\n\n    const spent = -sumByProp(\"activity\")(categories);\n    const available = sumByProp(\"balance\")(categories);\n\n    return (\n      <Fragment>\n        <DayByDaySection\n          budgetId={budgetId}\n          currentMonth={currentMonth}\n          highlightFunction={\n            selectedCategoryId &&\n            (transaction => transaction.category_id === selectedCategoryId)\n          }\n          title={\n            selectedCategory\n              ? `Day by Day: ${sanitizeName(selectedCategory.name)}`\n              : \"Day by Day\"\n          }\n          transactions={transactionsInGroup}\n          total={spent + available}\n        />\n        <GenericEntitiesSection\n          entityKey=\"category_id\"\n          entitiesById={categoriesById}\n          linkFunction={categoryId =>\n            makeLink(pages.currentMonthCategory.path, {\n              budgetId,\n              categoryGroupId,\n              categoryId\n            })\n          }\n          selectedEntityId={selectedCategoryId}\n          title=\"Categories\"\n          transactions={transactionsInGroupForMonth}\n          showTransactionCount\n          onClickEntity={this.handleSelectCategory}\n        />\n        <TransactionsSection\n          categoriesById={categoriesById}\n          payeesById={payeesById}\n          transactions={highlightedTransactions || transactionsInGroupForMonth}\n          title={\n            selectedCategory\n              ? `Transactions: ${sanitizeName(selectedCategory.name)}`\n              : \"Transactions\"\n          }\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default CurrentMonthGroup;\n","import React, { PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport TransactionsSection from \"./TransactionsSection\";\n\nclass CurrentMonthCategory extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      categories: PropTypes.array.isRequired,\n      id: PropTypes.string.isRequired,\n      payeesById: PropTypes.object.isRequired,\n      transactions: PropTypes.array.isRequired\n    }).isRequired,\n    categoryGroupId: PropTypes.string.isRequired,\n    categoryId: PropTypes.string.isRequired,\n    currentMonth: PropTypes.string.isRequired\n  };\n\n  render() {\n    const { budget, currentMonth, categoryId } = this.props;\n    const {\n      id: budgetId,\n      payeesById,\n      categoriesById,\n      transactions: allTransactions\n    } = budget;\n\n    const category = categoriesById[categoryId];\n    const transactionsInCategory = allTransactions.filter(\n      transaction => transaction.category_id === categoryId\n    );\n    const transactionsInCategoryForMonth = transactionsInCategory.filter(\n      transaction => getTransactionMonth(transaction) === currentMonth\n    );\n\n    const spent = -category.activity;\n    const available = category.balance;\n\n    return (\n      <Fragment>\n        <DayByDaySection\n          key={category ? category.name : \"day-by-day\"}\n          budgetId={budgetId}\n          currentMonth={currentMonth}\n          title=\"Day by Day\"\n          transactions={transactionsInCategory}\n          total={spent + available}\n        />\n        <TransactionsSection\n          categoriesById={categoriesById}\n          payeesById={payeesById}\n          transactions={transactionsInCategoryForMonth}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default CurrentMonthCategory;\n","import { useRef, useState } from \"react\";\nimport moment from \"moment\";\nimport { getSetting, setSetting } from \"./uiRepo\";\nimport { getFirstMonth } from \"./budgetUtils\";\n\nexport const useSelectedMonth = () => {\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const selectedMonthRef = useRef(selectedMonth);\n  selectedMonthRef.current = selectedMonth;\n\n  const onSelectMonth = month => {\n    setSelectedMonth(month === selectedMonthRef.current ? null : month);\n  };\n\n  return [selectedMonth, onSelectMonth];\n};\n\nexport const useSelectedEntityId = () => {\n  const [selectedEntityId, setSelectedEntityId] = useState(null);\n  const onSelectEntityId = entityId => {\n    setSelectedEntityId(entityId === selectedEntityId ? null : entityId);\n  };\n\n  return [selectedEntityId, onSelectEntityId];\n};\n\nexport const useTrendsShowAverage = budgetId => {\n  const [showAverage, setShowAverage] = useState(\n    getSetting(\"trendsShowAverage\", budgetId)\n  );\n  const onToggleShowAverage = () => {\n    setShowAverage(!showAverage);\n    setSetting(\"trendsShowAverage\", budgetId, !showAverage);\n  };\n\n  return [showAverage, onToggleShowAverage];\n};\n\nconst getMonths = (firstMonth, lastMonth) => {\n  const months = [firstMonth];\n  let m = firstMonth;\n\n  while (m !== lastMonth) {\n    m = moment(m)\n      .add(1, \"months\")\n      .format(\"YYYY-MM\");\n    months.push(m);\n  }\n\n  return months;\n};\n\nexport const useMonthExclusions = budget => {\n  const [excludeFirstMonth, setExcludeFirstMonth] = useState(\n    getSetting(\"excludeFirstMonth\", budget.id)\n  );\n  const [excludeLastMonth, setExcludeLastMonth] = useState(\n    getSetting(\"excludeLastMonth\", budget.id)\n  );\n\n  const firstBudgetMonth = getFirstMonth(budget);\n  const firstMonth = excludeFirstMonth\n    ? moment(firstBudgetMonth)\n        .add(1, \"months\")\n        .format(\"YYYY-MM\")\n    : firstBudgetMonth;\n  const lastMonth = excludeLastMonth\n    ? moment()\n        .subtract(1, \"months\")\n        .format(\"YYYY-MM\")\n    : moment().format(\"YYYY-MM\");\n  const months = getMonths(firstMonth, lastMonth);\n\n  const onSetExclusion = ({ month, exclude }) => {\n    if (month === \"first\") {\n      setExcludeFirstMonth(exclude);\n      setSetting(\"excludeFirstMonth\", budget.id, exclude);\n    } else {\n      setExcludeLastMonth(exclude);\n      setSetting(\"excludeLastMonth\", budget.id, exclude);\n    }\n  };\n\n  return { excludeFirstMonth, excludeLastMonth, months, onSetExclusion };\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport findIndex from \"lodash/fp/findIndex\";\nimport { selectedPlotBandColor } from \"../styleVariables\";\nimport Chart from \"./Chart\";\n\nconst MonthlyChart = ({\n  average,\n  data,\n  height,\n  series,\n  selectedMonth,\n  stacked,\n  onSelectMonth\n}) => {\n  const yearLines = [];\n  const plotBands = [];\n  const categories = data.map(d => moment(d.month).format(\"MMM\"));\n  let highlights = null;\n\n  if (selectedMonth) {\n    highlights = { months: [selectedMonth], color: selectedPlotBandColor };\n  }\n\n  data.forEach(({ month }, index) => {\n    if (moment(month).format(\"MMM\") === \"Jan\") {\n      yearLines.push({\n        color: \"#ccc\",\n        width: 1,\n        value: index - 0.5,\n        zIndex: 3\n      });\n    }\n  });\n\n  if (highlights) {\n    highlights.months.forEach(month => {\n      const index = findIndex(d => d.month === month)(data);\n      plotBands.push({\n        color: highlights.color,\n        from: index - 0.5,\n        to: index + 0.5\n      });\n    });\n  }\n\n  return (\n    <Chart\n      key={data.length}\n      options={{\n        chart: {\n          animation: false,\n          height,\n          type: \"column\",\n          events: {\n            click: event => {\n              onSelectMonth &&\n                onSelectMonth(data[Math.round(event.xAxis[0].value)].month);\n            }\n          }\n        },\n        xAxis: {\n          categories,\n          plotBands,\n          plotLines: yearLines\n        },\n        yAxis: {\n          endOnTick: false,\n          startOnTick: false,\n          gridLineColor: \"transparent\",\n          labels: { enabled: false },\n          title: { text: null },\n          plotLines: average && [\n            {\n              color: \"#aaa\",\n              dashStyle: \"Dot\",\n              width: 1,\n              value: -average,\n              zIndex: 2\n            }\n          ]\n        },\n        plotOptions: {\n          series: { animation: false, stacking: stacked ? \"normal\" : null }\n        },\n        series: series.map(s => {\n          if (s.type === \"line\") {\n            return {\n              color: s.color,\n              data: data.map(s.valueFunction),\n              enableMouseTracking: false,\n              type: \"line\"\n            };\n          }\n\n          return {\n            borderWidth: 0,\n            color: s.color,\n            data: data.map(s.valueFunction),\n            enableMouseTracking: false,\n            states: { hover: { brightness: 0 } }\n          };\n        })\n      }}\n    />\n  );\n};\n\nMonthlyChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      month: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  series: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string.isRequired,\n      valueFunction: PropTypes.func.isRequired,\n      type: PropTypes.oneOf([\"line\"])\n    })\n  ).isRequired,\n  average: PropTypes.number,\n  height: PropTypes.number,\n  selectedMonth: PropTypes.string,\n  stacked: PropTypes.bool,\n  onSelectMonth: PropTypes.func\n};\n\nMonthlyChart.defaultProps = { height: 140, stacked: true };\n\nexport default MonthlyChart;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { primaryColor } from \"../styleVariables\";\n\nconst PADDING = 2;\nconst WIDTH = 32;\nconst HEIGHT = 18;\n\nconst Track = styled.div`\n  box-sizing: border-box;\n  padding: ${PADDING}px;\n  display: inline-block;\n  width: ${WIDTH}px;\n  height: ${HEIGHT}px;\n  border-radius: ${HEIGHT / 2}px;\n  background-color: ${props => (props.on ? primaryColor : \"#ddd\")};\n  transition: background-color 0.15s ease-in-out;\n`;\n\nconst Handle = styled.div`\n  box-sizing: border-box;\n  height: ${HEIGHT - 2 * PADDING}px;\n  width: ${HEIGHT - 2 * PADDING}px;\n  border-radius: 50%;\n  background-color: #fff;\n  transform: translate3d(${props => (props.on ? WIDTH - HEIGHT : 0)}px, 0, 0);\n  transition: transform 0.15s ease-in-out;\n`;\n\nconst Toggle = ({ on, onClick }) => (\n  <Track on={on} onClick={onClick}>\n    <Handle on={on} />\n  </Track>\n);\n\nToggle.propTypes = {\n  on: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Toggle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Toggle from \"./Toggle\";\n\nconst Container = styled.div`\n  user-select: none;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px 0;\n`;\n\nconst Label = styled.div``;\n\nconst ToggleWithLabel = ({ label, name, checked, onChange }) => (\n  <Container\n    onClick={() => {\n      onChange({ target: { name, checked: !checked } });\n    }}\n  >\n    <Label>{label}</Label>\n    <Toggle\n      on={checked}\n      onClick={() => {\n        onChange({ target: { name, checked: !checked } });\n      }}\n    />\n  </Container>\n);\n\nToggleWithLabel.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default ToggleWithLabel;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"./Modal\";\nimport ToggleWithLabel from \"./ToggleWithLabel\";\nimport { MinorText } from \"./typeComponents\";\n\nconst MonthByMonthSettingsModal = ({\n  excludeFirstMonth,\n  excludeLastMonth,\n  open,\n  onClose,\n  onSetExclusion\n}) => (\n  <Modal open={open} onClose={onClose} title=\"Chart Settings\" width={240}>\n    <ToggleWithLabel\n      checked={excludeFirstMonth}\n      label=\"Exclude first month\"\n      name=\"excludeFirstMonth\"\n      onChange={() => {\n        onSetExclusion({ month: \"first\", exclude: !excludeFirstMonth });\n      }}\n    />\n    <ToggleWithLabel\n      checked={excludeLastMonth}\n      label=\"Exclude last month\"\n      name=\"excludeLastMonth\"\n      onChange={() => {\n        onSetExclusion({ month: \"last\", exclude: !excludeLastMonth });\n      }}\n    />\n    <MinorText style={{ marginTop: 5 }}>\n      Excluding incomplete months may lead to more representative averages\n    </MinorText>\n  </Modal>\n);\n\nMonthByMonthSettingsModal.propTypes = {\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired\n};\n\nexport default MonthByMonthSettingsModal;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport { groupBy, sumByProp } from \"../dataUtils\";\nimport { lightPrimaryColor, lighterPrimaryColor } from \"../styleVariables\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport MonthlyChart from \"./MonthlyChart\";\nimport MonthByMonthSettingsModal from \"./MonthByMonthSettingsModal\";\n\nclass MonthByMonthSection extends Component {\n  static propTypes = {\n    excludeFirstMonth: PropTypes.bool.isRequired,\n    excludeLastMonth: PropTypes.bool.isRequired,\n    months: PropTypes.arrayOf(PropTypes.string).isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onSelectMonth: PropTypes.func.isRequired,\n    onSetExclusion: PropTypes.func.isRequired,\n    highlightFunction: PropTypes.func,\n    selectedMonth: PropTypes.string,\n    title: PropTypes.string\n  };\n  static defaultProps = { title: \"Month by Month\" };\n\n  state = { settingsModalOpen: false };\n\n  handleClickSettings = () => {\n    this.setState({ settingsModalOpen: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ settingsModalOpen: false });\n  };\n\n  render() {\n    const {\n      excludeFirstMonth,\n      excludeLastMonth,\n      highlightFunction,\n      months,\n      selectedMonth,\n      title,\n      transactions,\n      onSelectMonth,\n      onSetExclusion\n    } = this.props;\n    const { settingsModalOpen } = this.state;\n\n    let total = 0;\n    let selectedMonthTotal = 0;\n\n    const transactionsByMonth = groupBy(getTransactionMonth)(transactions);\n    const data = months.map(month => {\n      const grouped = groupBy(highlightFunction || (() => false))(\n        transactionsByMonth[month] || []\n      );\n      const amount = sumByProp(\"amount\")(grouped.false || []);\n      const highlighted = sumByProp(\"amount\")(grouped.true || []);\n      total += highlightFunction ? highlighted : amount;\n      if (month === selectedMonth) {\n        selectedMonthTotal = highlightFunction ? highlighted : amount;\n      }\n\n      return { month, amount: -amount, highlighted: -highlighted };\n    });\n\n    const chartNumbers = selectedMonth\n      ? [\n          { amount: total / months.length, label: \"average\" },\n          {\n            amount: selectedMonthTotal,\n            label: moment(selectedMonth).format(\"MMM YYYY\")\n          }\n        ]\n      : [\n          { amount: total / months.length, label: \"average\" },\n          {\n            amount: total,\n            label: \"total\"\n          }\n        ];\n    const series = [\n      {\n        color: highlightFunction ? lightPrimaryColor : lighterPrimaryColor,\n        valueFunction: d => d.amount\n      }\n    ];\n\n    if (highlightFunction) {\n      series.push({\n        color: lighterPrimaryColor,\n        valueFunction: d => d.highlighted\n      });\n    }\n\n    return (\n      <CollapsibleSection\n        title={title}\n        hasSettings\n        onClickSettings={this.handleClickSettings}\n      >\n        <ChartNumbers numbers={chartNumbers} />\n        <MonthlyChart\n          data={data}\n          average={total / months.length}\n          series={series}\n          selectedMonth={selectedMonth}\n          onSelectMonth={onSelectMonth}\n        />\n        <MonthByMonthSettingsModal\n          excludeFirstMonth={excludeFirstMonth}\n          excludeLastMonth={excludeLastMonth}\n          open={settingsModalOpen}\n          onClose={this.handleCloseModal}\n          onSetExclusion={onSetExclusion}\n        />\n      </CollapsibleSection>\n    );\n  }\n}\n\nexport default MonthByMonthSection;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport { useTrendsShowAverage } from \"../commonHooks\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nconst Groups = ({\n  budget,\n  excludeFirstMonth,\n  excludeLastMonth,\n  months,\n  transactions,\n  selectedMonth,\n  selectedGroupId,\n  onSelectGroup,\n  onSelectMonth,\n  onSetExclusion\n}) => {\n  const [showAverage, onToggleShowAverage] = useTrendsShowAverage(budget.id);\n\n  const { categoryGroupsById, categoriesById, id: budgetId } = budget;\n  const selectedGroup = selectedGroupId && categoryGroupsById[selectedGroupId];\n\n  const transactionsForMonth =\n    selectedMonth &&\n    transactions.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <Fragment>\n      <MonthByMonthSection\n        excludeFirstMonth={excludeFirstMonth}\n        excludeLastMonth={excludeLastMonth}\n        highlightFunction={\n          selectedGroupId &&\n          (transaction =>\n            categoriesById[transaction.category_id].category_group_id ===\n            selectedGroupId)\n        }\n        months={months}\n        selectedMonth={selectedMonth}\n        title={\n          selectedGroup\n            ? `Month by Month: ${sanitizeName(selectedGroup.name)}`\n            : \"Month by Month\"\n        }\n        transactions={transactions}\n        onSelectMonth={onSelectMonth}\n        onSetExclusion={onSetExclusion}\n      />\n      <GenericEntitiesSection\n        key={selectedMonth || \"all\"}\n        entityFunction={transaction =>\n          categoriesById[transaction.category_id].category_group_id\n        }\n        entityKey=\"category_group_id\"\n        entitiesById={categoryGroupsById}\n        linkFunction={categoryGroupId =>\n          makeLink(pages.group.path, { budgetId, categoryGroupId })\n        }\n        selectedEntityId={selectedGroupId}\n        title={\n          selectedMonth\n            ? `Category Groups: ${moment(selectedMonth).format(\"MMMM\")}`\n            : \"Category Groups\"\n        }\n        transactions={transactionsForMonth || transactions}\n        onClickEntity={onSelectGroup}\n        numMonths={months.length}\n        showAverageToggle={!selectedMonth}\n        showAverage={showAverage && !selectedMonth}\n        onToggleAverage={onToggleShowAverage}\n        limitShowing\n      />\n    </Fragment>\n  );\n};\n\nGroups.propTypes = {\n  budget: PropTypes.object.isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectGroup: PropTypes.func.isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedGroupId: PropTypes.string,\n  selectedMonth: PropTypes.string\n};\n\nexport default Groups;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Transaction from \"./Transaction\";\nimport NoTransactions from \"./NoTransactions\";\nimport SeeAll from \"./SeeAll\";\n\nconst LIMIT = 3;\n\nclass TransactionsByMonthSection extends Component {\n  static propTypes = {\n    categoriesById: PropTypes.object.isRequired,\n    payeesById: PropTypes.object.isRequired,\n    selectedMonth: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    limitShowing: PropTypes.bool,\n    selectedCategoryId: PropTypes.string,\n    selectedPayeeId: PropTypes.string\n  };\n\n  static defaultProps = { limitShowing: true };\n\n  state = { allMounted: false, showAll: false };\n\n  handleToggleShowAll = () => {\n    const { allMounted, showAll } = this.state;\n\n    if (allMounted) {\n      this.setState({ showAll: !showAll });\n    } else {\n      this.setState({ allMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ showAll: true });\n      });\n    }\n  };\n\n  render() {\n    const {\n      categoriesById,\n      payeesById,\n      selectedCategoryId,\n      selectedPayeeId,\n      selectedMonth,\n      transactions,\n      limitShowing: limitShowingProp\n    } = this.props;\n    const { allMounted, showAll } = this.state;\n\n    const selectedCategory =\n      selectedCategoryId && categoriesById[selectedCategoryId];\n    const selectedPayee = selectedPayeeId && payeesById[selectedPayeeId];\n    const month = moment(selectedMonth).format(\"MMMM\");\n    const transactionsForMonth = compose([\n      limitShowingProp\n        ? sortBy(\"amount\")\n        : transactions => transactions.reverse(),\n      transactions =>\n        transactions.filter(\n          transaction =>\n            getTransactionMonth(transaction) === selectedMonth &&\n            (!selectedCategoryId ||\n              transaction.category_id === selectedCategoryId) &&\n            (!selectedPayeeId || transaction.payee_id === selectedPayeeId)\n        )\n    ])(transactions);\n    const limitShowing =\n      limitShowingProp && transactionsForMonth.length > LIMIT + 2;\n    const topTransactions = limitShowing\n      ? transactionsForMonth.slice(0, LIMIT)\n      : transactionsForMonth;\n    const otherTransactions = limitShowing\n      ? transactionsForMonth.slice(LIMIT)\n      : [];\n\n    return (\n      <CollapsibleSection\n        title={\n          selectedPayee\n            ? `Transactions: ${month}, ${selectedPayee.name}`\n            : selectedCategory\n              ? `Transactions: ${month}, ${selectedCategory.name}`\n              : `Transactions: ${month}`\n        }\n      >\n        {topTransactions.length ? (\n          topTransactions.map(\n            ({\n              id,\n              date,\n              amount,\n              memo,\n              payee_id: payeeId,\n              category_id: categoryId\n            }) => (\n              <Transaction\n                key={id}\n                amount={amount}\n                category={categoriesById[categoryId]}\n                date={date}\n                memo={memo}\n                payee={payeesById[payeeId]}\n              />\n            )\n          )\n        ) : (\n          <NoTransactions />\n        )}\n        {allMounted && (\n          <AnimateHeight isExpanded={showAll}>\n            <Fragment>\n              {otherTransactions.map(\n                ({\n                  id,\n                  date,\n                  amount,\n                  payee_id: payeeId,\n                  category_id: categoryId\n                }) => (\n                  <Transaction\n                    key={id}\n                    amount={amount}\n                    category={categoriesById[categoryId]}\n                    date={date}\n                    payee={payeesById[payeeId]}\n                    isContinuing\n                  />\n                )\n              )}\n            </Fragment>\n          </AnimateHeight>\n        )}\n        {!!otherTransactions.length && (\n          <SeeAll\n            count={transactionsForMonth.length}\n            pluralizedName=\"transactions\"\n            showAll={showAll}\n            onToggle={this.handleToggleShowAll}\n          />\n        )}\n      </CollapsibleSection>\n    );\n  }\n}\n\nexport default TransactionsByMonthSection;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport { useTrendsShowAverage } from \"../commonHooks\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nconst Group = ({\n  budget,\n  categoryGroup,\n  excludeFirstMonth,\n  excludeLastMonth,\n  months,\n  selectedMonth,\n  selectedCategoryId,\n  transactions,\n  onSelectMonth,\n  onSelectCategory,\n  onSetExclusion\n}) => {\n  const [showAverage, onToggleShowAverage] = useTrendsShowAverage(budget.id);\n\n  const { categories, categoriesById, payeesById, id: budgetId } = budget;\n\n  const selectedCategory =\n    selectedCategoryId && categoriesById[selectedCategoryId];\n\n  const categoriesInGroup = categories.filter(\n    category => category.category_group_id === categoryGroup.id\n  );\n  const categoryIds = categoriesInGroup.map(category => category.id);\n  const transactionsInGroup = transactions.filter(transaction =>\n    categoryIds.includes(transaction.category_id)\n  );\n  const transactionsInSelectedMonth =\n    selectedMonth &&\n    compose([\n      sortBy(\"amount\"),\n      transactions =>\n        transactions.filter(\n          transaction => getTransactionMonth(transaction) === selectedMonth\n        )\n    ])(transactionsInGroup);\n\n  return (\n    <Fragment>\n      <MonthByMonthSection\n        excludeFirstMonth={excludeFirstMonth}\n        excludeLastMonth={excludeLastMonth}\n        months={months}\n        highlightFunction={\n          selectedCategoryId &&\n          (transaction => transaction.category_id === selectedCategoryId)\n        }\n        selectedMonth={selectedMonth}\n        title={\n          selectedCategory\n            ? `Month by Month: ${sanitizeName(selectedCategory.name)}`\n            : \"Month by Month\"\n        }\n        transactions={transactionsInGroup}\n        onSelectMonth={onSelectMonth}\n        onSetExclusion={onSetExclusion}\n      />\n      <GenericEntitiesSection\n        key={`categories-${selectedMonth || \"all\"}`}\n        entityKey=\"category_id\"\n        entitiesById={categoriesById}\n        linkFunction={categoryId =>\n          makeLink(pages.category.path, {\n            budgetId,\n            categoryGroupId: categoryGroup.id,\n            categoryId\n          })\n        }\n        title={\n          selectedMonth\n            ? `Categories: ${moment(selectedMonth).format(\"MMMM\")}`\n            : \"Categories\"\n        }\n        transactions={transactionsInSelectedMonth || transactionsInGroup}\n        selectedEntityId={selectedCategoryId}\n        onClickEntity={onSelectCategory}\n        showAverageToggle={!selectedMonth}\n        showAverage={showAverage && !selectedMonth}\n        numMonths={months.length}\n        onToggleAverage={onToggleShowAverage}\n        limitShowing\n      />\n      {selectedMonth &&\n        transactionsInSelectedMonth.length > 0 && (\n          <TransactionsByMonthSection\n            key={`transactions-${selectedMonth || \"all\"}-${selectedCategoryId ||\n              \"all\"}`}\n            categoriesById={categoriesById}\n            payeesById={payeesById}\n            selectedMonth={selectedMonth}\n            selectedCategoryId={selectedCategoryId}\n            transactions={transactionsInSelectedMonth}\n          />\n        )}\n    </Fragment>\n  );\n};\n\nGroup.propTypes = {\n  budget: PropTypes.shape({\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        categoryId: PropTypes.string\n      })\n    ).isRequired,\n    payeesById: PropTypes.object.isRequired\n  }).isRequired,\n  categoryGroup: PropTypes.shape({\n    id: PropTypes.string.isRequired\n  }).isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSelectCategory: PropTypes.func.isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  selectedCategoryId: PropTypes.string,\n  selectedMonth: PropTypes.string\n};\n\nexport default Group;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\n\nclass Category extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      transactions: PropTypes.arrayOf(\n        PropTypes.shape({\n          payee_id: PropTypes.string\n        })\n      ).isRequired,\n      payeesById: PropTypes.object.isRequired\n    }).isRequired,\n    category: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    excludeFirstMonth: PropTypes.bool.isRequired,\n    excludeLastMonth: PropTypes.bool.isRequired,\n    months: PropTypes.arrayOf(PropTypes.string).isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onSelectMonth: PropTypes.func.isRequired,\n    onSelectPayee: PropTypes.func.isRequired,\n    onSetExclusion: PropTypes.func.isRequired,\n    selectedMonth: PropTypes.string,\n    selectedPayeeId: PropTypes.string\n  };\n\n  render() {\n    const {\n      category,\n      budget,\n      excludeFirstMonth,\n      excludeLastMonth,\n      months,\n      selectedMonth,\n      selectedPayeeId,\n      transactions,\n      onSelectMonth,\n      onSelectPayee,\n      onSetExclusion\n    } = this.props;\n    const { categoriesById, payeesById, id: budgetId } = budget;\n\n    const selectedPayee = selectedPayeeId && payeesById[selectedPayeeId];\n    const transactionsForCategory = transactions.filter(\n      transaction => transaction.category_id === category.id\n    );\n    const transactionsForMonth =\n      selectedMonth &&\n      transactionsForCategory.filter(\n        transaction => getTransactionMonth(transaction) === selectedMonth\n      );\n\n    return (\n      <Fragment>\n        <MonthByMonthSection\n          excludeFirstMonth={excludeFirstMonth}\n          excludeLastMonth={excludeLastMonth}\n          months={months}\n          onSetExclusion={onSetExclusion}\n          highlightFunction={\n            selectedPayeeId &&\n            (transaction => transaction.payee_id === selectedPayeeId)\n          }\n          selectedMonth={selectedMonth}\n          title={\n            selectedPayee\n              ? `Month by Month: ${sanitizeName(selectedPayee.name)}`\n              : \"Month by Month\"\n          }\n          transactions={transactionsForCategory}\n          onSelectMonth={onSelectMonth}\n        />\n        <GenericEntitiesSection\n          key={`payees-${selectedMonth || \"all\"}`}\n          emptyName=\"(no payee)\"\n          entitiesById={payeesById}\n          entityKey=\"payee_id\"\n          linkFunction={payeeId =>\n            makeLink(pages.categoryPayee.path, {\n              budgetId,\n              categoryGroupId: category.category_group_id,\n              categoryId: category.id,\n              payeeId\n            })\n          }\n          title={\n            selectedMonth\n              ? `Payees: ${moment(selectedMonth).format(\"MMMM\")}`\n              : \"Payees\"\n          }\n          transactions={transactionsForMonth || transactionsForCategory}\n          selectedEntityId={selectedPayeeId}\n          onClickEntity={onSelectPayee}\n          limitShowing\n        />\n        {selectedMonth &&\n          transactionsForMonth.length > 0 && (\n            <TransactionsByMonthSection\n              key={`transactions-${selectedMonth || \"all\"}-${selectedPayeeId ||\n                \"all\"}`}\n              categoriesById={categoriesById}\n              payeesById={payeesById}\n              transactions={transactionsForMonth}\n              selectedMonth={selectedMonth}\n              selectedPayeeId={selectedPayeeId}\n            />\n          )}\n      </Fragment>\n    );\n  }\n}\n\nexport default Category;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\n\nclass Category extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      payeesById: PropTypes.object.isRequired\n    }).isRequired,\n    category: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    excludeFirstMonth: PropTypes.bool.isRequired,\n    excludeLastMonth: PropTypes.bool.isRequired,\n    months: PropTypes.arrayOf(PropTypes.string).isRequired,\n    payee: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        payee_id: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    onSelectMonth: PropTypes.func.isRequired,\n    onSetExclusion: PropTypes.func.isRequired,\n    selectedMonth: PropTypes.string\n  };\n\n  handleSelectMonth = month => {\n    this.setState(state => ({\n      ...state,\n      selectedMonth: state.selectedMonth === month ? null : month\n    }));\n  };\n\n  render() {\n    const {\n      budget,\n      category,\n      excludeFirstMonth,\n      excludeLastMonth,\n      months,\n      payee,\n      selectedMonth,\n      transactions,\n      onSelectMonth,\n      onSetExclusion\n    } = this.props;\n    const { categoriesById, payeesById } = budget;\n\n    const transactionsForCategoryAndPayee = transactions.filter(\n      transaction =>\n        transaction.category_id === category.id &&\n        transaction.payee_id === payee.id\n    );\n\n    return (\n      <Fragment>\n        <MonthByMonthSection\n          excludeFirstMonth={excludeFirstMonth}\n          excludeLastMonth={excludeLastMonth}\n          months={months}\n          selectedMonth={selectedMonth}\n          transactions={transactionsForCategoryAndPayee}\n          onSelectMonth={onSelectMonth}\n          onSetExclusion={onSetExclusion}\n        />\n        {selectedMonth && (\n          <TransactionsByMonthSection\n            categoriesById={categoriesById}\n            payeesById={payeesById}\n            selectedMonth={selectedMonth}\n            transactions={transactionsForCategoryAndPayee}\n            limitShowing={false}\n          />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default Category;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport moment from \"moment\";\nimport { useSelectedMonth, useSelectedEntityId } from \"../commonHooks\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nconst Income = ({\n  budget,\n  excludeFirstMonth,\n  excludeLastMonth,\n  months,\n  transactions,\n  onSetExclusion\n}) => {\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\n  const [selectedPayeeId, onSelectPayeeId] = useSelectedEntityId();\n\n  const { payeesById } = budget;\n  const transactionsInSelectedMonth =\n    selectedMonth &&\n    transactions.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <Fragment>\n      <MonthByMonthSection\n        excludeFirstMonth={excludeFirstMonth}\n        excludeLastMonth={excludeLastMonth}\n        highlightFunction={\n          selectedPayeeId &&\n          (transaction => transaction.payee_id === selectedPayeeId)\n        }\n        months={months}\n        selectedMonth={selectedMonth}\n        title={\n          selectedPayeeId\n            ? `Month by Month: ${sanitizeName(\n                payeesById[selectedPayeeId].name\n              )}`\n            : \"Month by Month\"\n        }\n        transactions={transactions}\n        onSelectMonth={onSelectMonth}\n        onSetExclusion={onSetExclusion}\n      />\n      <GenericEntitiesSection\n        key={`payee-${selectedMonth || \"all\"}`}\n        entityKey=\"payee_id\"\n        entitiesById={payeesById}\n        title={\n          selectedMonth\n            ? `Payees: ${moment(selectedMonth).format(\"MMMM\")}`\n            : \"Payees\"\n        }\n        transactions={transactionsInSelectedMonth || transactions}\n        selectedEntityId={selectedPayeeId}\n        onClickEntity={onSelectPayeeId}\n        showAverageToggle={false}\n        showAverage={!selectedMonth}\n        numMonths={months.length}\n        limitShowing\n      />\n    </Fragment>\n  );\n};\n\nIncome.propTypes = {\n  budget: PropTypes.shape({\n    payeesById: PropTypes.object.isRequired\n  }).isRequired,\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  onSetExclusion: PropTypes.func.isRequired,\n  months: PropTypes.array.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      payee_id: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nexport default Income;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  primaryColor,\n  lightPrimaryColor,\n  negativeChartColor\n} from \"../styleVariables\";\nimport MonthlyChart from \"./MonthlyChart\";\n\nconst IncomeVsExpensesChart = ({ data, onSelectMonth, selectedMonth }) => (\n  <MonthlyChart\n    data={data}\n    height={160}\n    selectedMonth={selectedMonth}\n    series={[\n      { color: lightPrimaryColor, valueFunction: d => d.income },\n      { color: negativeChartColor, valueFunction: d => d.expenses },\n      {\n        type: \"line\",\n        color: primaryColor,\n        valueFunction: d => d.income + d.expenses\n      }\n    ]}\n    onSelectMonth={onSelectMonth}\n  />\n);\n\nIncomeVsExpensesChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      expenses: PropTypes.number.isRequired,\n      income: PropTypes.number.isRequired,\n      month: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string\n};\n\nexport default IncomeVsExpensesChart;\n","import React, { Component, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\nimport ListItem from \"./ListItem\";\nimport Icon from \"./Icon\";\n\nconst INDENTATION = 18;\n\nclass BreakdownNode extends Component {\n  static propTypes = {\n    amount: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n    isTopLevel: PropTypes.bool.isRequired,\n    name: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n    nodes: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ),\n    valueRenderer: PropTypes.func\n  };\n\n  state = { expanded: false, childrenMounted: false };\n\n  handleToggleExpand = () => {\n    const { expanded, childrenMounted } = this.state;\n\n    if (childrenMounted) {\n      this.setState({ expanded: !expanded });\n    } else {\n      this.setState({ childrenMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ expanded: true });\n      });\n    }\n  };\n\n  render() {\n    const { name, id, amount, nodes, isTopLevel, valueRenderer } = this.props;\n    const { expanded, childrenMounted } = this.state;\n    const hasChildNodes = !!nodes && nodes.length > 0;\n\n    return (\n      <Container hasChildNodes={hasChildNodes} isTopLevel={isTopLevel}>\n        {hasChildNodes ? (\n          <ToggleNode\n            id={id}\n            name={name}\n            amount={amount}\n            expanded={expanded}\n            onToggle={this.handleToggleExpand}\n            valueRenderer={valueRenderer}\n          />\n        ) : (\n          <LeafNode\n            id={id}\n            name={name}\n            amount={amount}\n            valueRenderer={valueRenderer}\n          />\n        )}\n\n        {hasChildNodes &&\n          childrenMounted && (\n            <AnimateHeight isExpanded={expanded}>\n              <Nodes nodes={nodes} valueRenderer={valueRenderer} />\n            </AnimateHeight>\n          )}\n      </Container>\n    );\n  }\n}\n\nclass Nodes extends PureComponent {\n  render() {\n    const { nodes, valueRenderer } = this.props;\n    return (\n      <div style={{ paddingLeft: INDENTATION }}>\n        {nodes.map(node => (\n          <BreakdownNode\n            {...node}\n            key={node.id}\n            isTopLevel={false}\n            valueRenderer={valueRenderer}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst NodeWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n  user-select: none;\n\n  ${ListItem}:first-child > & {\n    padding-top: 0;\n  }\n`;\n\nconst IconWrapper = styled.div`\n  box-sizing: border-box;\n  padding-left: 3px;\n  width: ${INDENTATION}px;\n  font-weight: 400;\n  color: #888;\n  font-size: 10px;\n`;\n\nconst ToggleNode = ({\n  expanded,\n  name,\n  id,\n  amount,\n  valueRenderer,\n  onToggle\n}) => (\n  <NodeWrapper onClick={onToggle}>\n    <SecondaryText\n      style={{ whiteSpace: \"pre\", display: \"flex\", alignItems: \"center\" }}\n    >\n      <IconWrapper>\n        <Icon icon=\"chevron-right\" transform={{ rotate: expanded ? 90 : 0 }} />\n      </IconWrapper>\n      {typeof name === \"function\" ? name({ expanded }) : name}\n    </SecondaryText>\n    {valueRenderer ? (\n      valueRenderer({ amount, id, faded: expanded })\n    ) : (\n      <SecondaryText style={{ opacity: expanded ? 0.3 : 1 }}>\n        <Amount amount={amount} />\n      </SecondaryText>\n    )}\n  </NodeWrapper>\n);\n\nconst LeafNode = ({ name, id, amount, valueRenderer }) => (\n  <NodeWrapper>\n    <SecondaryText>{name}</SecondaryText>\n    {valueRenderer ? (\n      valueRenderer({ amount, id })\n    ) : (\n      <SecondaryText>\n        <Amount amount={amount} />\n      </SecondaryText>\n    )}\n  </NodeWrapper>\n);\n\nconst Container = ({ isTopLevel, hasChildNodes, children }) =>\n  isTopLevel ? (\n    <ListItem style={{ display: \"block\", padding: 0 }}>{children}</ListItem>\n  ) : (\n    children\n  );\n\nexport default BreakdownNode;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BreakdownNode from \"./BreakdownNode\";\n\nconst Breakdown = ({ nodes, valueRenderer }) =>\n  nodes.map(({ id, name, amount, nodes }) => (\n    <BreakdownNode\n      key={id}\n      id={id}\n      name={name}\n      amount={amount}\n      nodes={nodes}\n      valueRenderer={valueRenderer}\n      isTopLevel\n    />\n  ));\n\nBreakdown.propTypes = {\n  nodes: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n      name: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n      nodes: PropTypes.array\n    })\n  ).isRequired,\n  valueRenderer: PropTypes.func\n};\n\nBreakdown.defaultProps = { reverse: false };\n\nexport default Breakdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport concat from \"lodash/fp/concat\";\nimport mapRaw from \"lodash/fp/map\";\nimport omit from \"lodash/fp/omit\";\nimport pick from \"lodash/fp/pick\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { sumByProp, groupByProp } from \"../dataUtils\";\nimport { getPayeeNodes } from \"../budgetUtils\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\n\nconst map = mapRaw.convert({ cap: false });\n\nconst ExpensesBreakdown = ({\n  categoriesById,\n  categoryGroupsById,\n  transactions,\n  totalIncome,\n  payeesById,\n  divideBy\n}) => {\n  const categoryNodes = compose([\n    map((transactions, categoryId) => {\n      const payeeNodes = getPayeeNodes({ payeesById, transactions }, divideBy);\n      return {\n        ...pick([\"id\", \"name\", \"category_group_id\"])(\n          categoriesById[categoryId]\n        ),\n        nodes: sortBy(\"amount\")(payeeNodes),\n        amount: sumByProp(\"amount\")(payeeNodes)\n      };\n    }),\n    groupByProp(\"category_id\")\n  ])(transactions);\n\n  const groupNodes = compose([\n    map((nodes, categoryGroupId) => {\n      const categoryNodes = map(omit(\"category_group_id\"))(nodes);\n      return {\n        ...pick([\"id\", \"name\"])(categoryGroupsById[categoryGroupId]),\n        nodes: sortBy(\"amount\")(categoryNodes),\n        amount: sumByProp(\"amount\")(categoryNodes)\n      };\n    }),\n    groupByProp(\"category_group_id\")\n  ])(categoryNodes);\n\n  const rootPayeeNodes = getPayeeNodes(\n    {\n      payeesById,\n      transactions: transactions.filter(transaction => !transaction.category_id)\n    },\n    divideBy\n  );\n\n  const nodes = compose([\n    nodes =>\n      concat(nodes)([\n        {\n          id: \"net\",\n          amount: -totalIncome - sumByProp(\"amount\")(nodes),\n          name: \"Net Income\"\n        }\n      ]),\n    sortBy(\"amount\"),\n    concat(rootPayeeNodes)\n  ])(groupNodes);\n\n  return (\n    <CollapsibleSection title=\"Expenses Breakdown\">\n      <Breakdown\n        nodes={nodes}\n        valueRenderer={node => (\n          <AmountWithPercentage {...node} positiveIsRed total={-totalIncome} />\n        )}\n      />\n    </CollapsibleSection>\n  );\n};\n\nExpensesBreakdown.propTypes = {\n  categoriesById: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      category_group_id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  categoryGroupsById: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  divideBy: PropTypes.number.isRequired,\n  payeesById: PropTypes.objectOf(PropTypes.object).isRequired,\n  totalIncome: PropTypes.number.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      category_id: PropTypes.string\n    })\n  ).isRequired\n};\n\nExpensesBreakdown.defaultProps = { divideBy: 1 };\n\nexport default ExpensesBreakdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport { getPayeeNodes } from \"../budgetUtils\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\n\nconst IncomeBreakdown = ({ transactions, payeesById, divideBy }) => {\n  const nodes = getPayeeNodes({ payeesById, transactions }, divideBy);\n  const total = sumBy(\"amount\")(nodes);\n  return (\n    <CollapsibleSection title=\"Income Breakdown\">\n      <Breakdown\n        nodes={sortBy(\"amount\")(nodes).reverse()}\n        total={total}\n        valueRenderer={node => <AmountWithPercentage {...node} total={total} />}\n      />\n    </CollapsibleSection>\n  );\n};\n\nIncomeBreakdown.propTypes = {\n  divideBy: PropTypes.number.isRequired,\n  payeesById: PropTypes.objectOf(PropTypes.object).isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      categoryId: PropTypes.string\n    })\n  ).isRequired\n};\n\nIncomeBreakdown.defaultProps = { divideBy: 1 };\n\nexport default IncomeBreakdown;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { sumByProp } from \"../dataUtils\";\nimport ExpensesBreakdown from \"./ExpensesBreakdown\";\nimport IncomeBreakdown from \"./IncomeBreakdown\";\n\nconst Breakdowns = ({\n  categoriesById,\n  categoryGroupsById,\n  payeesById,\n  expenseTransactions,\n  incomeTransactions,\n  divideBy\n}) => (\n  <Fragment>\n    <ExpensesBreakdown\n      categoriesById={categoriesById}\n      categoryGroupsById={categoryGroupsById}\n      payeesById={payeesById}\n      transactions={expenseTransactions}\n      totalIncome={sumByProp(\"amount\")(incomeTransactions) / divideBy}\n      divideBy={divideBy}\n    />\n    <IncomeBreakdown\n      payeesById={payeesById}\n      transactions={incomeTransactions}\n      divideBy={divideBy}\n    />\n  </Fragment>\n);\n\nBreakdowns.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  categoryGroupsById: PropTypes.object.isRequired,\n  expenseTransactions: PropTypes.array.isRequired,\n  incomeTransactions: PropTypes.array.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  divideBy: PropTypes.number.isRequired\n};\n\nexport default Breakdowns;\n","import React, { PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport find from \"lodash/fp/find\";\nimport flatMap from \"lodash/fp/flatMap\";\nimport mapRaw from \"lodash/fp/map\";\nimport matchesProperty from \"lodash/fp/matchesProperty\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { sumByProp, groupBy, simpleMemoize } from \"../dataUtils\";\nimport { getTransactionMonth, isIncome } from \"../budgetUtils\";\nimport IncomeVsExpensesChart from \"./IncomeVsExpensesChart\";\nimport Breakdowns from \"./Breakdowns\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport MonthByMonthSettingsModal from \"./MonthByMonthSettingsModal\";\n\nconst map = mapRaw.convert({ cap: false });\n\nclass IncomeVsExpenses extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      months: PropTypes.arrayOf(\n        PropTypes.shape({\n          month: PropTypes.string.isRequired\n        })\n      ).isRequired\n    }).isRequired,\n    excludeFirstMonth: PropTypes.bool.isRequired,\n    excludeLastMonth: PropTypes.bool.isRequired,\n    investmentAccounts: PropTypes.object.isRequired,\n    showing: PropTypes.oneOf([\"average\", \"total\"]).isRequired,\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        date: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    onSetExclusion: PropTypes.func.isRequired\n  };\n\n  state = { selectedMonth: null, settingsModalOpen: false };\n\n  handleClickSettings = () => {\n    this.setState({ settingsModalOpen: true });\n  };\n\n  handleCloseSettingsModal = () => {\n    this.setState({ settingsModalOpen: false });\n  };\n\n  handleSelectMonth = month => {\n    this.setState(state => ({\n      ...state,\n      selectedMonth: state.selectedMonth === month ? null : month\n    }));\n  };\n\n  getSummaries = simpleMemoize((transactions, investmentAccounts, budget) =>\n    compose([\n      sortBy(\"month\"),\n      map((transactions, month) => {\n        const grouped = groupBy(isIncome(budget))(transactions);\n\n        return {\n          month,\n          expenseTransactions: grouped.false || [],\n          incomeTransactions: grouped.true || [],\n          income: sumByProp(\"amount\")(grouped.true || []),\n          expenses: sumByProp(\"amount\")(grouped.false || [])\n        };\n      }),\n      groupBy(getTransactionMonth)\n    ])(transactions)\n  );\n\n  render() {\n    const {\n      budget,\n      excludeFirstMonth,\n      excludeLastMonth,\n      investmentAccounts,\n      showing,\n      transactions,\n      onSetExclusion\n    } = this.props;\n    const { selectedMonth, settingsModalOpen } = this.state;\n    const { categoriesById, categoryGroupsById, payeesById } = budget;\n\n    const showTotals = showing === \"total\";\n    const allSummaries = this.getSummaries(\n      transactions,\n      investmentAccounts,\n      budget\n    );\n    const summaries = selectedMonth\n      ? [find(matchesProperty(\"month\", selectedMonth))(allSummaries)]\n      : allSummaries;\n\n    const incomeTransactions = flatMap(summary => summary.incomeTransactions)(\n      summaries\n    );\n    const expenseTransactions = flatMap(summary => summary.expenseTransactions)(\n      summaries\n    );\n\n    const totalExpenses = sumByProp(\"amount\")(expenseTransactions);\n    const totalIncome = sumByProp(\"amount\")(incomeTransactions);\n    const denominator = showTotals ? 1 : summaries.length;\n\n    return (\n      <Fragment>\n        <CollapsibleSection\n          title=\"Monthly Trend\"\n          hasSettings\n          onClickSettings={this.handleClickSettings}\n        >\n          <ChartNumbers\n            numbers={[\n              {\n                label: \"net income\",\n                amount: -(totalExpenses + totalIncome) / denominator\n              },\n              {\n                label: \"expenses\",\n                amount: totalExpenses / denominator\n              },\n              {\n                label: \"income\",\n                amount: -totalIncome / denominator\n              }\n            ]}\n          />\n          <IncomeVsExpensesChart\n            data={allSummaries}\n            selectedMonth={selectedMonth}\n            onSelectMonth={this.handleSelectMonth}\n          />\n          <MonthByMonthSettingsModal\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            open={settingsModalOpen}\n            onClose={this.handleCloseSettingsModal}\n            onSetExclusion={onSetExclusion}\n          />\n        </CollapsibleSection>\n        <Breakdowns\n          categoriesById={categoriesById}\n          categoryGroupsById={categoryGroupsById}\n          payeesById={payeesById}\n          expenseTransactions={expenseTransactions}\n          incomeTransactions={incomeTransactions}\n          divideBy={showTotals ? 1 : summaries.length}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default IncomeVsExpenses;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport includes from \"lodash/fp/includes\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport { groupBy } from \"../dataUtils\";\nimport {\n  primaryColor,\n  lightPrimaryColor,\n  negativeChartColor\n} from \"../styleVariables\";\nimport MonthlyChart from \"./MonthlyChart\";\n\nconst CREDIT_ACCOUNTS = [\"mortgage\", \"creditCard\"];\nconst getStack = ({ type, id, mortgageAccounts }) => {\n  if (mortgageAccounts[id]) {\n    return \"liability\";\n  }\n\n  return includes(type)(CREDIT_ACCOUNTS) ? \"liability\" : \"asset\";\n};\n\nconst NetWorthChart = ({\n  data,\n  months,\n  mortgageAccounts,\n  selectedMonth,\n  onSelectMonth\n}) => {\n  const groupedData = groupBy(d =>\n    getStack({ type: d.type, id: d.id, mortgageAccounts })\n  )(data);\n  const monthlyData = months.map((month, index) => ({\n    month,\n    assets: sumBy(d => d.data[index])(groupedData.asset),\n    liabilities: sumBy(d => d.data[index])(groupedData.liability)\n  }));\n\n  return (\n    <MonthlyChart\n      selectedMonth={selectedMonth}\n      onSelectMonth={onSelectMonth}\n      data={monthlyData}\n      height={160}\n      series={[\n        {\n          color: negativeChartColor,\n          valueFunction: d => Math.max(-d.liabilities, 0)\n        },\n        {\n          color: lightPrimaryColor,\n          valueFunction: d => Math.max(d.assets, 0)\n        },\n        {\n          color: primaryColor,\n          type: \"line\",\n          valueFunction: d => d.assets + d.liabilities\n        }\n      ]}\n      stacked={false}\n    />\n  );\n};\n\nNetWorthChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(PropTypes.number).isRequired,\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string\n};\n\nexport default NetWorthChart;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport every from \"lodash/fp/every\";\nimport filter from \"lodash/fp/filter\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport mapRaw from \"lodash/fp/map\";\nimport propEq from \"lodash/fp/propEq\";\nimport reject from \"lodash/fp/reject\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport startCase from \"lodash/fp/startCase\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport values from \"lodash/fp/values\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\nimport Icon from \"./Icon\";\n\nconst map = mapRaw.convert({ cap: false });\n\nconst getNodes = ({ accounts, investmentAccounts, mortgageAccounts }) => {\n  const accountsByGroup = groupBy(account => {\n    if (investmentAccounts[account.id]) {\n      return \"Investments\";\n    }\n\n    if (mortgageAccounts[account.id]) {\n      return \"Mortgages\";\n    }\n\n    return startCase(account.type);\n  })(accounts);\n\n  return compose([\n    accounts => accounts.reverse(),\n    sortBy(\"amount\"),\n    map((accounts, name) => ({\n      name,\n      accounts,\n      amount: sumBy(\"balance\")(accounts),\n      id: name,\n      nodes: compose([\n        sortBy(\"balance\"),\n        map(({ id, name, balance }) => ({\n          amount: balance,\n          id,\n          name\n        }))\n      ])(accounts)\n    }))\n  ])(accountsByGroup);\n};\n\nconst NetWorthAccounts = ({\n  accounts,\n  hiddenAccounts,\n  onToggleAccounts,\n  investmentAccounts,\n  mortgageAccounts\n}) => {\n  const accountsById = keyBy(\"id\")(accounts);\n  const visibleNodes = getNodes({\n    accounts: reject(account => hiddenAccounts[account.id])(accounts),\n    investmentAccounts,\n    mortgageAccounts\n  });\n  const hiddenNodes = getNodes({\n    accounts: filter(account => hiddenAccounts[account.id])(accounts),\n    investmentAccounts,\n    mortgageAccounts\n  });\n\n  return (\n    <Fragment>\n      <CollapsibleSection title=\"Accounts\">\n        <AccountBreakdown\n          accountsById={accountsById}\n          hiddenAccounts={hiddenAccounts}\n          nodes={visibleNodes}\n          onToggleAccounts={onToggleAccounts}\n        />\n      </CollapsibleSection>\n\n      {values(hiddenNodes).length > 0 && (\n        <CollapsibleSection title=\"Hidden Accounts\">\n          <AccountBreakdown\n            accountsById={accountsById}\n            hiddenAccounts={hiddenAccounts}\n            nodes={hiddenNodes}\n            onToggleAccounts={onToggleAccounts}\n          />\n        </CollapsibleSection>\n      )}\n    </Fragment>\n  );\n};\n\nNetWorthAccounts.propTypes = {\n  accounts: PropTypes.arrayOf(\n    PropTypes.shape({\n      balance: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  hiddenAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onToggleAccounts: PropTypes.func.isRequired\n};\n\nconst AccountBreakdown = ({\n  accountsById,\n  hiddenAccounts,\n  nodes,\n  onToggleAccounts\n}) => (\n  <Breakdown\n    nodes={nodes}\n    valueRenderer={({ id, amount }) => {\n      const node = nodes.find(propEq(\"id\", id));\n      const accounts = node ? node.accounts : [accountsById[id]];\n\n      return (\n        <SecondaryText style={{ display: \"flex\", alignItems: \"center\" }}>\n          <Amount amount={amount} />\n          <div\n            style={{ width: 36, textAlign: \"center\" }}\n            onClick={evt => {\n              evt.stopPropagation();\n              onToggleAccounts({ ids: map(\"id\")(accounts) });\n            }}\n          >\n            {every(account => hiddenAccounts[account.id])(accounts) ? (\n              <Icon icon=\"eye-slash\" />\n            ) : (\n              <Icon icon=\"eye\" />\n            )}\n          </div>\n        </SecondaryText>\n      );\n    }}\n  />\n);\n\nexport default NetWorthAccounts;\n","import React, { PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport constant from \"lodash/fp/constant\";\nimport eq from \"lodash/fp/eq\";\nimport filter from \"lodash/fp/filter\";\nimport findIndex from \"lodash/fp/findIndex\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport identity from \"lodash/fp/identity\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport keys from \"lodash/fp/keys\";\nimport last from \"lodash/fp/last\";\nimport map from \"lodash/fp/map\";\nimport mapValues from \"lodash/fp/mapValues\";\nimport omitBy from \"lodash/fp/omitBy\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sum from \"lodash/fp/sum\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport values from \"lodash/fp/values\";\nimport { simpleMemoize } from \"../dataUtils\";\nimport { getSetting, setSetting } from \"../uiRepo\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport NetWorthChart from \"./NetWorthChart\";\nimport NetWorthAccounts from \"./NetWorthAccounts\";\n\nconst cumulative = arr =>\n  arr.reduce(\n    (acc, curr) => (acc.length === 0 ? [curr] : acc.concat(last(acc) + curr)),\n    []\n  );\n\nclass NetWorth extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      accounts: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          name: PropTypes.string.isRequired,\n          type: PropTypes.string.isRequired\n        })\n      ).isRequired,\n      accountsById: PropTypes.objectOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          name: PropTypes.string.isRequired,\n          type: PropTypes.string.isRequired\n        })\n      ).isRequired,\n      transactions: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          account_id: PropTypes.string.isRequired,\n          amount: PropTypes.number.isRequired,\n          date: PropTypes.string.isRequired\n        })\n      ).isRequired\n    }).isRequired,\n    investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired\n  };\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      hiddenAccounts: getSetting(\"netWorthHiddenAccounts\", props.budget.id),\n      selectedMonth: null\n    };\n  }\n\n  groupByMonthAndAccount = simpleMemoize(\n    compose([\n      mapValues(groupBy(\"account_id\")),\n      groupBy(({ date }) => date.slice(0, 7))\n    ])\n  );\n\n  getMonths = simpleMemoize(budget =>\n    compose([sortBy(identity), keys, this.groupByMonthAndAccount])(\n      budget.transactions\n    )\n  );\n\n  getSummaryByAccount = simpleMemoize(budget => {\n    const groupedTransactions = this.groupByMonthAndAccount(\n      budget.transactions\n    );\n    const months = this.getMonths(budget);\n    return map(({ id }) => ({\n      id,\n      data: compose([\n        cumulative,\n        map(month => sumBy(\"amount\")(groupedTransactions[month][id]))\n      ])(months)\n    }))(budget.accounts);\n  });\n\n  getSelectedBalances = simpleMemoize((selectedMonth, budget) => {\n    const months = this.getMonths(budget);\n    const selectedMonthIndex = findIndex(eq(selectedMonth))(months);\n    const accountSummaries = this.getSummaryByAccount(budget);\n\n    return compose([\n      mapValues(\n        ({ data }) =>\n          selectedMonthIndex > -1 ? data[selectedMonthIndex] : last(data)\n      ),\n      keyBy(\"id\")\n    ])(accountSummaries);\n  });\n\n  handleSelectMonth = month => {\n    this.setState(state => ({\n      ...state,\n      selectedMonth: state.selectedMonth === month ? null : month\n    }));\n  };\n\n  handleToggleAccounts = ({ ids }) => {\n    const { budget } = this.props;\n    const { hiddenAccounts } = this.state;\n    const shouldHide = ids.some(id => !hiddenAccounts[id]);\n    const newHiddenAccounts = ids.reduce(\n      (acc, id) => ({ ...acc, [id]: shouldHide }),\n      hiddenAccounts\n    );\n\n    this.setState({ hiddenAccounts: newHiddenAccounts });\n    setSetting(\"netWorthHiddenAccounts\", budget.id, newHiddenAccounts);\n  };\n\n  render() {\n    const { budget, investmentAccounts, mortgageAccounts } = this.props;\n    const { hiddenAccounts, selectedMonth } = this.state;\n\n    const months = this.getMonths(budget);\n    const accountSummaries = this.getSummaryByAccount(budget);\n    const selectedBalances = this.getSelectedBalances(selectedMonth, budget);\n    const filterHidden = omitBy((_, id) => hiddenAccounts[id]);\n    const selectedLiabilities = compose([\n      sum,\n      filter(b => b < 0),\n      values,\n      filterHidden\n    ])(selectedBalances);\n    const selectedAssets = compose([\n      sum,\n      filter(b => b > 0),\n      values,\n      filterHidden\n    ])(selectedBalances);\n\n    return (\n      <Fragment>\n        <CollapsibleSection title=\"Monthly Trend\">\n          <ChartNumbers\n            numbers={[\n              {\n                amount: -(selectedAssets + selectedLiabilities),\n                label: \"Net Worth\"\n              },\n              { amount: -selectedAssets, label: \"Assets\" },\n              { amount: selectedLiabilities, label: \"Liabilities\" }\n            ]}\n            alwaysRound\n          />\n          <NetWorthChart\n            data={map(({ id, data }) => ({\n              data: hiddenAccounts[id] ? data.map(constant(0)) : data,\n              type: budget.accountsById[id].type,\n              id\n            }))(accountSummaries)}\n            months={months}\n            mortgageAccounts={mortgageAccounts}\n            selectedMonth={selectedMonth}\n            onSelectMonth={this.handleSelectMonth}\n          />\n        </CollapsibleSection>\n        <NetWorthAccounts\n          accounts={map(account => ({\n            ...account,\n            balance: selectedBalances[account.id]\n          }))(budget.accounts)}\n          hiddenAccounts={hiddenAccounts}\n          investmentAccounts={investmentAccounts}\n          mortgageAccounts={mortgageAccounts}\n          onToggleAccounts={this.handleToggleAccounts}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default NetWorth;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/fp/keys\";\nimport get from \"lodash/fp/get\";\nimport EmptyText from \"./EmptyText\";\nimport { Link } from \"react-router-dom\";\nimport pages, { makeLink } from \"../pages\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport {\n  useMonthExclusions,\n  useSelectedEntityId,\n  useSelectedMonth\n} from \"../commonHooks\";\n\nconst isContribution = investmentAccounts => transaction =>\n  !!investmentAccounts[transaction.account_id] &&\n  !!transaction.transfer_account_id &&\n  !investmentAccounts[transaction.transfer_account_id];\n\nconst isCapitalGainOrLoss = (investmentAccounts, payeesById) => transaction =>\n  !!investmentAccounts[transaction.account_id] &&\n  !transaction.transfer_account_id &&\n  get([transaction.payee_id, \"name\"])(payeesById) !== \"Starting Balance\";\n\nconst isInvestmentTransaction = (\n  investmentAccounts,\n  payeesById\n) => transaction =>\n  isContribution(investmentAccounts)(transaction) ||\n  isCapitalGainOrLoss(investmentAccounts, payeesById)(transaction);\n\nconst Investments = ({ budget, investmentAccounts }) => {\n  const {\n    excludeFirstMonth,\n    excludeLastMonth,\n    months,\n    onSetExclusion\n  } = useMonthExclusions(budget);\n  const [selectedMonth, onSelectMonth] = useSelectedMonth();\n  const [selectedBreakdown, onSelectBreakdown] = useSelectedEntityId();\n\n  const { payeesById } = budget;\n\n  if (keys(investmentAccounts).length === 0) {\n    return (\n      <EmptyText>\n        You don't have any accounts marked as investment accounts.{\" \"}\n        <Link to={makeLink(pages.settings.path, { budgetId: budget.id })}>\n          Go to Settings\n        </Link>\n      </EmptyText>\n    );\n  }\n\n  const investmentTransactions = budget.transactions\n    .filter(isInvestmentTransaction(investmentAccounts, payeesById))\n    .map(transaction => ({ ...transaction, amount: -transaction.amount }));\n  const transactionsInMonth =\n    selectedMonth &&\n    investmentTransactions.filter(\n      transaction => getTransactionMonth(transaction) === selectedMonth\n    );\n\n  return (\n    <Fragment>\n      <MonthByMonthSection\n        excludeFirstMonth={excludeFirstMonth}\n        excludeLastMonth={excludeLastMonth}\n        highlightFunction={\n          selectedBreakdown &&\n          (transaction =>\n            selectedBreakdown === \"contribution\"\n              ? isContribution(investmentAccounts)(transaction)\n              : isCapitalGainOrLoss(investmentAccounts, payeesById)(\n                  transaction\n                ))\n        }\n        months={months}\n        selectedMonth={selectedMonth}\n        transactions={investmentTransactions}\n        onSelectMonth={onSelectMonth}\n        onSetExclusion={onSetExclusion}\n      />\n      <GenericEntitiesSection\n        transactions={transactionsInMonth || investmentTransactions}\n        entitiesById={{\n          contribution: { name: \"Contributions\" },\n          capitalGain: { name: \"Capital Gains/Losses\" }\n        }}\n        title=\"Growth Breakdown\"\n        onClickEntity={onSelectBreakdown}\n        selectedEntityId={selectedBreakdown}\n        entityFunction={transaction =>\n          isContribution(investmentAccounts)(transaction)\n            ? \"contribution\"\n            : \"capitalGain\"\n        }\n        positiveIsRed\n      />\n    </Fragment>\n  );\n};\n\nInvestments.propTypes = {\n  budget: PropTypes.object.isRequired,\n  investmentAccounts: PropTypes.object.isRequired\n};\n\nexport default Investments;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  primaryColor,\n  negativeColor,\n  selectedPlotBandColor\n} from \"../styleVariables\";\nimport Chart from \"./Chart\";\n\nconst ProjectionsChart = ({\n  investmentsProjection,\n  mortgageProjection,\n  amountNeededToRetire,\n  yearsUntilRetirement\n}) => (\n  <Chart\n    options={{\n      chart: {\n        type: \"column\"\n      },\n      xAxis: {\n        type: \"category\",\n        plotBands: [\n          {\n            color: selectedPlotBandColor,\n            from: Math.floor(yearsUntilRetirement) - 0.5,\n            to: Math.floor(yearsUntilRetirement) + 0.5\n          }\n        ]\n      },\n      yAxis: {\n        title: { text: null },\n        endOnTick: false,\n        plotLines: [\n          {\n            value: amountNeededToRetire,\n            color: \"#ccc\",\n            width: 1\n          }\n        ]\n      },\n      legend: {\n        enabled: false\n      },\n      series: [\n        { data: investmentsProjection, color: primaryColor, borderWidth: 0 },\n        { data: mortgageProjection, color: negativeColor, borderWidth: 0 }\n      ]\n    }}\n  />\n);\n\nProjectionsChart.propTypes = {\n  amountNeededToRetire: PropTypes.number.isRequired,\n  investmentsProjection: PropTypes.arrayOf(PropTypes.number).isRequired,\n  mortgageProjection: PropTypes.arrayOf(PropTypes.number).isRequired,\n  yearsUntilRetirement: PropTypes.number.isRequired\n};\n\nexport default ProjectionsChart;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst isDescendant = (parent, child) => {\n  let node = child.parentNode;\n  while (node !== null) {\n    if (node === parent) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n  return false;\n};\n\nclass ClickOff extends Component {\n  static propTypes = {\n    children: PropTypes.func.isRequired,\n    onClickOff: PropTypes.func\n  };\n\n  parent = null;\n\n  componentDidMount() {\n    document.body.addEventListener(\"click\", this.handleBodyClick);\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener(\"click\", this.handleBodyClick);\n  }\n\n  handleBodyClick = evt => {\n    if (this.props.onClickOff && !isDescendant(this.parent, evt.target)) {\n      this.props.onClickOff();\n    }\n  };\n\n  render() {\n    return this.props.children({\n      ref: el => {\n        this.parent = el;\n      }\n    });\n  }\n}\n\nexport default ClickOff;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport ClickOff from \"./ClickOff\";\nimport Button from \"./Button\";\n\nconst bodyEl = document.getElementsByTagName(\"body\")[0];\n\nconst Container = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: #fff;\n`;\n\nconst ProjectionsSlider = ({\n  name,\n  formatter,\n  label,\n  value,\n  onBlur,\n  onChange,\n  onReset,\n  rangeOptions\n}) =>\n  createPortal(\n    <ClickOff onClickOff={name && onBlur}>\n      {({ ref }) => (\n        <Container innerRef={ref}>\n          <AnimateHeight isExpanded={!!name}>\n            <div style={{ borderTop: \"1px solid #bbb\", padding: \"15px 20px\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  marginBottom: 15\n                }}\n              >\n                {label}: {formatter(value || 0)}\n                <Button\n                  onClick={() => {\n                    onReset(name);\n                  }}\n                >\n                  reset\n                </Button>\n              </div>\n              <Range\n                {...rangeOptions}\n                name={name}\n                value={value || 0}\n                onChange={onChange}\n              />\n            </div>\n          </AnimateHeight>\n        </Container>\n      )}\n    </ClickOff>,\n    bodyEl\n  );\n\nProjectionsSlider.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n  formatter: PropTypes.func,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.number\n};\n\nProjectionsSlider.defaultProps = {\n  formatter: val => val\n};\n\nconst Range = ({ name, onReset, ...other }) => (\n  <input\n    {...other}\n    name={name}\n    type=\"range\"\n    style={{ display: \"block\", width: \"100%\" }}\n  />\n);\n\nexport default ProjectionsSlider;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport chunk from \"lodash/fp/chunk\";\nimport compose from \"lodash/fp/compose\";\nimport get from \"lodash/fp/get\";\nimport head from \"lodash/fp/head\";\nimport map from \"lodash/fp/map\";\nimport pick from \"lodash/fp/pick\";\nimport range from \"lodash/fp/range\";\nimport { simpleMemoize, keyByProp } from \"../dataUtils\";\nimport { selectedPlotBandColor } from \"../styleVariables\";\nimport {\n  getMortgageRate,\n  getReturnOnInvestments,\n  getAverageContribution,\n  getCurrentInvestments,\n  getAverageExpensesWithoutMortgage,\n  getProjection,\n  getProjectionWithRetirement\n} from \"../projectionUtils\";\nimport Icon from \"./Icon\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ProjectionsChart from \"./ProjectionsChart\";\nimport ProjectionsSlider from \"./ProjectionsSlider\";\nimport ChartNumbers from \"./ChartNumbers\";\n\nconst YEARS_TO_PROJECT = 50;\n\nconst adjustableEntries = [\n  {\n    label: \"Average monthly contribution\",\n    name: \"averageContribution\",\n    formatter: val => `$${Math.round(val)}`\n  },\n  {\n    label: \"Average return on investments\",\n    name: \"returnOnInvestments\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  },\n  {\n    label: \"Average expenses without mortgage\",\n    name: \"averageExpenses\",\n    formatter: val => `$${Math.round(val)}`\n  },\n  {\n    label: \"Return on investment after retirement\",\n    name: \"retirementReturns\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  },\n  {\n    label: \"Average tax rate after retirement\",\n    name: \"retirementTaxRate\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  }\n];\n\nconst adjustableEntriesByName = keyByProp(\"name\")(adjustableEntries);\n\nconst getInitialState = simpleMemoize(\n  (budget, investmentAccounts, mortgageAccounts) => {\n    const {\n      paymentsLeft: remainingMortgagePayments,\n      mortgagePayment,\n      principalProjection: mortgageProjection\n    } = getMortgageRate(budget, mortgageAccounts) || {};\n    const returnOnInvestments = getReturnOnInvestments(\n      budget,\n      investmentAccounts\n    );\n    const averageContribution = getAverageContribution(\n      budget,\n      investmentAccounts\n    );\n    const currentInvestments = getCurrentInvestments(\n      budget,\n      investmentAccounts\n    );\n    const averageExpenses = getAverageExpensesWithoutMortgage(\n      budget,\n      investmentAccounts,\n      mortgageAccounts\n    );\n\n    return {\n      mortgagePayment,\n      remainingMortgagePayments,\n      mortgageProjection,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      averageExpenses,\n      retirementReturns: 0.04,\n      retirementTaxRate: 0.15,\n      maxAverageExpenses: Math.ceil((averageExpenses * 2) / 1000) * 1000,\n      maxAverageContribution: Math.ceil((averageContribution * 2) / 1000) * 1000\n    };\n  }\n);\n\nclass Projections extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      transactions: PropTypes.array.isRequired\n    }).isRequired,\n    investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired\n  };\n\n  constructor(props) {\n    super();\n    this.state = {\n      ...getInitialState(\n        props.budget,\n        props.investmentAccounts,\n        props.mortgageAccounts\n      ),\n      adjustingName: null\n    };\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: parseFloat(e.target.value) });\n  };\n\n  handleSelectAdjusting = name => {\n    this.setState(state => ({\n      adjustingName: state.adjustingName === name ? null : name\n    }));\n  };\n\n  handleClearSelection = () => {\n    this.setState({ adjustingName: null });\n  };\n\n  handleResetCalculation = calculation => {\n    const { budget, investmentAccounts, mortgageAccounts } = this.props;\n    this.setState(\n      pick(calculation)(\n        getInitialState(budget, investmentAccounts, mortgageAccounts)\n      )\n    );\n  };\n\n  render() {\n    const {\n      mortgagePayment,\n      remainingMortgagePayments,\n      mortgageProjection,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      averageExpenses,\n      retirementReturns,\n      retirementTaxRate,\n      maxAverageExpenses,\n      maxAverageContribution,\n      adjustingName\n    } = this.state;\n\n    const projection = getProjection({\n      numMonths: YEARS_TO_PROJECT * 12,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments\n    });\n    const monthlyRetirementReturn = (1 + retirementReturns) ** (1 / 12) - 1;\n    const amountNeededToRetire =\n      averageExpenses / (monthlyRetirementReturn * (1 - retirementTaxRate));\n    let m = 0;\n\n    while (m < projection.length) {\n      if (m < remainingMortgagePayments) {\n        const remainingMortgage = range(\n          0,\n          remainingMortgagePayments - m\n        ).reduce(\n          (acc, curr) =>\n            acc +\n            mortgagePayment /\n              (1 + monthlyRetirementReturn * (1 - retirementTaxRate)) ** curr,\n          0\n        );\n        if (\n          (projection[m] - remainingMortgage) *\n            monthlyRetirementReturn *\n            (1 - retirementTaxRate) >\n          averageExpenses\n        ) {\n          break;\n        }\n      } else {\n        if (\n          projection[m] * monthlyRetirementReturn * (1 - retirementTaxRate) >\n          averageExpenses\n        ) {\n          break;\n        }\n      }\n      m += 1;\n    }\n\n    const projectionWithRetirement = getProjectionWithRetirement({\n      numMonths: YEARS_TO_PROJECT * 12,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      monthsBeforeRetirement: m,\n      monthlyExpenses: averageExpenses,\n      retirementReturns,\n      retirementTaxRate,\n      remainingMortgagePayments,\n      mortgagePayment\n    });\n    const hasMortgage = !!mortgagePayment;\n\n    const yearsUntilRetirement = m / 12;\n    const projectionByYear = compose([map(head), chunk(12)])(\n      projectionWithRetirement\n    );\n    const mortgageProjectionByYear = compose([map(head), chunk(12)])(\n      mortgageProjection\n    );\n\n    const nameToRangeOptions = {\n      averageContribution: { min: 0, max: maxAverageContribution, step: 50 },\n      returnOnInvestments: { min: 0, max: 0.2, step: 0.001 },\n      averageExpenses: { min: 0, max: maxAverageExpenses, step: 50 },\n      retirementReturns: { min: 0, max: 0.2, step: 0.001 },\n      retirementTaxRate: { min: 0, max: 0.5, step: 0.001 }\n    };\n\n    return (\n      <Fragment>\n        <CollapsibleSection title=\"Projection\">\n          <ChartNumbers\n            numbers={[\n              {\n                amount: -amountNeededToRetire,\n                label: \"needed for retirement\",\n                decimalsToRound: 0\n              },\n              {\n                amount: -yearsUntilRetirement,\n                label: \"years to retirement\",\n                isMoney: false,\n                decimalsToRound: 1\n              }\n            ]}\n          />\n          <ProjectionsChart\n            investmentsProjection={projectionByYear}\n            mortgageProjection={mortgageProjectionByYear}\n            amountNeededToRetire={amountNeededToRetire}\n            yearsUntilRetirement={yearsUntilRetirement}\n          />\n        </CollapsibleSection>\n        <CollapsibleSection title=\"Assumptions\">\n          {adjustableEntries.map(({ label, name, formatter }) => (\n            <AdjustableEntry\n              key={name}\n              label={label}\n              name={name}\n              value={this.state[name]}\n              formatter={formatter}\n              isAdjusting={adjustingName === name}\n              onSelect={this.handleSelectAdjusting}\n              onReset={this.handleResetCalculation}\n              onChange={this.handleChange}\n            />\n          ))}\n          {hasMortgage && (\n            <Fragment>\n              <Entry\n                label=\"Mortgage payment\"\n                value={mortgagePayment}\n                formatter={val => `$${val.toFixed(2)}`}\n              />\n              <Entry\n                label=\"Time remaining on mortgage\"\n                value={remainingMortgagePayments}\n                formatter={val => `${(val / 12).toFixed(1)} years`}\n              />\n            </Fragment>\n          )}\n        </CollapsibleSection>\n        <ProjectionsSlider\n          name={adjustingName}\n          label={get([adjustingName, \"label\"])(adjustableEntriesByName)}\n          onReset={this.handleResetCalculation}\n          onChange={this.handleChange}\n          onBlur={this.handleClearSelection}\n          formatter={get([adjustingName, \"formatter\"])(adjustableEntriesByName)}\n          value={this.state[adjustingName]}\n          rangeOptions={nameToRangeOptions[adjustingName]}\n        />\n      </Fragment>\n    );\n  }\n}\n\nconst AdjustableEntry = ({\n  label,\n  value,\n  formatter,\n  name,\n  onSelect,\n  isAdjusting\n}) => (\n  <Entry\n    label={label}\n    value={value}\n    formatter={formatter}\n    onClick={() => {\n      onSelect(name);\n    }}\n    highlightValue={isAdjusting}\n    isAdjustable\n  />\n);\n\nconst Entry = ({\n  label,\n  value,\n  onClick,\n  highlightValue,\n  isAdjustable,\n  formatter = a => a\n}) => (\n  <div\n    style={{\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      padding: \"2px 0\"\n    }}\n  >\n    {label}:\n    <div style={{ display: \"flex\", alignItems: \"center\" }} onClick={onClick}>\n      <strong\n        style={{\n          backgroundColor: highlightValue ? selectedPlotBandColor : null,\n          padding: isAdjustable && \"0 4px\",\n          borderRadius: 2\n        }}\n      >\n        {formatter(value)}\n      </strong>\n      {isAdjustable && <Icon icon=\"pencil\" faded style={{ marginLeft: 4 }} />}\n    </div>\n  </div>\n);\n\nexport default Projections;\n","import moment from \"moment\";\nimport add from \"lodash/fp/add\";\nimport compose from \"lodash/fp/compose\";\nimport concat from \"lodash/fp/concat\";\nimport filter from \"lodash/fp/filter\";\nimport find from \"lodash/fp/find\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport head from \"lodash/fp/head\";\nimport identity from \"lodash/fp/identity\";\nimport includes from \"lodash/fp/includes\";\nimport keys from \"lodash/fp/keys\";\nimport last from \"lodash/fp/last\";\nimport map from \"lodash/fp/map\";\nimport matches from \"lodash/fp/matches\";\nimport multiply from \"lodash/fp/multiply\";\nimport prop from \"lodash/fp/prop\";\nimport range from \"lodash/fp/range\";\nimport reduce from \"lodash/fp/reduce\";\nimport reject from \"lodash/fp/reject\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport takeRightWhile from \"lodash/fp/takeRightWhile\";\nimport uniq from \"lodash/fp/uniq\";\nimport { getTransactionMonth } from \"./budgetUtils\";\n\nexport const getMortgageRate = (\n  { accounts, transactions: allTransactions },\n  mortgageAccounts\n) => {\n  const mortgageAccount = find(account => mortgageAccounts[account.id])(\n    accounts\n  );\n\n  if (!mortgageAccount) {\n    return null;\n  }\n\n  const transactions = compose([\n    sortBy(\"date\"),\n    filter(matches({ account_id: mortgageAccount.id }))\n  ])(allTransactions);\n  const lastMonth = compose([t => t.date.slice(0, 7), last])(transactions);\n  const lastMonthTransactions = takeRightWhile(\n    t => t.date.slice(0, 7) === lastMonth\n  )(transactions);\n\n  const P = -compose([\n    sumBy(\"amount\"),\n    takeWhile(t => t.date.slice(0, 7) !== lastMonth)\n  ])(transactions);\n  const P1 = P - sumBy(\"amount\")(lastMonthTransactions);\n  const c = compose([prop(\"amount\"), find(prop(\"transfer_account_id\"))])(\n    lastMonthTransactions\n  );\n  const r = (P1 + c) / P - 1;\n  const N = -Math.log(1 - (r * P) / c) / Math.log(1 + r);\n\n  const rate = r * 12;\n  const paymentsLeft = N - 1;\n\n  const projection = map(n => (1 + r) ** n * P - (((1 + r) ** n - 1) / r) * c)(\n    range(1, N)\n  );\n\n  return {\n    rate,\n    mortgagePayment: c,\n    paymentsLeft,\n    principalProjection: projection\n  };\n};\n\nexport const getCurrentInvestments = (\n  { accounts, transactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  return compose([\n    sumBy(\"amount\"),\n    filter(({ account_id: accountId }) =>\n      includes(accountId)(investmentAccountIds)\n    )\n  ])(transactions);\n};\n\nexport const getReturnOnInvestments = (\n  { accounts, payees, transactions: allTransactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const transactionsByMonth = compose([\n    groupBy(tr => tr.date.slice(0, 7)),\n    reject(t => includes(t.transfer_account_id)(investmentAccountIds)), // remove transfers between investment accounts\n    filter(t => includes(t.account_id)(investmentAccountIds))\n  ])(allTransactions);\n\n  let startForMonth = 0;\n  const returnRates = [];\n\n  const months = compose([sortBy(identity), keys])(transactionsByMonth);\n  map(month => transactionsByMonth[month])(months).forEach(trs => {\n    const contributions = compose([\n      sumBy(\"amount\"),\n      filter(prop(\"transfer_account_id\"))\n    ])(trs);\n    const gains = reject(prop(\"transfer_account_id\"))(trs);\n    const returns = sumBy(\"amount\")(gains);\n\n    if (startForMonth && gains.length) {\n      returnRates.push(returns / (startForMonth + 0.5 * contributions));\n    }\n\n    startForMonth += returns + contributions;\n  });\n\n  const totalReturn = compose([reduce(multiply, 1), map(add(1))])(returnRates);\n  const numMonths = returnRates.length;\n\n  return totalReturn ** (12 / numMonths) - 1;\n};\n\nexport const getAverageContribution = (\n  { accounts, transactions: allTransactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const contributions = compose([\n    filter(\n      ({ transfer_account_id: transferAccountId }) =>\n        transferAccountId && !includes(transferAccountId)(investmentAccountIds)\n    ),\n    filter(({ account_id: accountId }) =>\n      includes(accountId)(investmentAccountIds)\n    )\n  ])(allTransactions);\n\n  const months = compose([\n    sortBy(identity),\n    uniq,\n    map(d => d.slice(0, 7)),\n    map(\"date\")\n  ])(contributions);\n\n  const totalContributions = sumBy(\"amount\")(contributions);\n  const numMonths =\n    moment(last(months)).diff(moment(head(months)), \"months\") + 1;\n\n  return totalContributions / numMonths;\n};\n\nexport const getAverageExpensesWithoutMortgage = (\n  { transactions, accounts, payees, categoriesById, categoryGroupsById },\n  investmentAccounts,\n  mortgageAccounts\n) => {\n  const startingBalanceId = compose([\n    prop(\"id\"),\n    find(matches({ name: \"Starting Balance\" }))\n  ])(payees);\n  const months = compose([sortBy(identity), uniq, map(getTransactionMonth)])(\n    transactions\n  );\n\n  const mortgageAccountIds = compose([\n    filter(id => mortgageAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const totalExpenses = compose([\n    sumBy(\"amount\"),\n    reject(\n      tr =>\n        tr.amount > 0 &&\n        !tr.transfer_account_id &&\n        (!tr.category_id ||\n          !categoryGroupsById[categoriesById[tr.category_id].category_group_id])\n    ),\n    reject(tr =>\n      includes(tr.transfer_account_id)(\n        concat(mortgageAccountIds, investmentAccountIds)\n      )\n    ),\n    reject(tr =>\n      includes(tr.account_id)(concat(mortgageAccountIds, investmentAccountIds))\n    ),\n    reject(tr =>\n      includes(getTransactionMonth(tr))([head(months), last(months)])\n    ),\n    reject(matches({ payee_id: startingBalanceId }))\n  ])(transactions);\n\n  return -totalExpenses / (months.length - 2);\n};\n\nexport const getProjection = ({\n  numMonths,\n  returnOnInvestments,\n  averageContribution,\n  currentInvestments\n}) => {\n  const monthlyRate = (1 + returnOnInvestments) ** (1 / 12) - 1;\n  let amount = currentInvestments;\n  let projection = [];\n\n  do {\n    projection.push(amount);\n    amount +=\n      averageContribution + (amount + 0.5 * averageContribution) * monthlyRate;\n  } while (projection.length < numMonths);\n\n  return projection;\n};\n\nexport const getProjectionWithRetirement = ({\n  numMonths,\n  returnOnInvestments,\n  averageContribution,\n  currentInvestments,\n  monthsBeforeRetirement,\n  monthlyExpenses,\n  retirementReturns,\n  retirementTaxRate,\n  remainingMortgagePayments,\n  mortgagePayment\n}) => {\n  const monthlyRate = (1 + returnOnInvestments) ** (1 / 12) - 1;\n  const monthlyRetirementReturn = (1 + retirementReturns) ** (1 / 12) - 1;\n  let amount = currentInvestments;\n  let projection = [];\n\n  do {\n    projection.push(amount);\n    if (projection.length < monthsBeforeRetirement) {\n      amount +=\n        averageContribution +\n        (amount + 0.5 * averageContribution) * monthlyRate;\n    } else {\n      amount +=\n        amount * monthlyRetirementReturn * (1 - retirementTaxRate) -\n        monthlyExpenses;\n      if (projection.length < remainingMortgagePayments) {\n        amount -= mortgagePayment;\n      }\n    }\n  } while (projection.length < numMonths);\n\n  return projection;\n};\n","import styled from \"styled-components\";\n\nconst Section = styled.div`\n  margin: ${props => (props.top ? \"0\" : \"3px\")};\n  padding: ${props =>\n    props.noPadding ? \"0\" : props.top ? \"15px 23px\" : \"15px 20px\"};\n  background-color: #fff;\n  border: 1px solid #e5e5e5;\n  border-width: ${props => (props.top ? \"0 0 1px\" : \"1px\")};\n  border-radius: 2px;\n`;\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport omit from \"lodash/fp/omit\";\nimport ToggleWithLabel from \"./ToggleWithLabel\";\n\nconst AccountsSelectionForm = ({ accounts, value }) =>\n  accounts.map(({ id, name }) => (\n    <ToggleWithLabel\n      key={id}\n      checked={!!value[id]}\n      name={id}\n      onChange={evt => {\n        const { name, checked } = evt.target;\n        const { value, onChange } = this.props;\n\n        let newValue;\n\n        if (checked) {\n          newValue = {\n            ...value,\n            [name]: true\n          };\n        } else {\n          newValue = omit(name)(value);\n        }\n\n        onChange(newValue);\n      }}\n      label={name}\n    />\n  ));\n\nAccountsSelectionForm.propTypes = {\n  accounts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  value: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default AccountsSelectionForm;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"./Section\";\nimport { StrongText, MinorText } from \"./typeComponents\";\nimport AccountsSelectionForm from \"./AccountsSelectionForm\";\nimport Modal from \"./Modal\";\nimport EmptyText from \"./EmptyText\";\nimport Icon from \"./Icon\";\n\nconst SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Space = styled.div`\n  height: 20px;\n`;\n\nclass Settings extends Component {\n  static propTypes = {\n    budget: PropTypes.shape({\n      accounts: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          name: PropTypes.string.isRequired\n        })\n      ).isRequired\n    }).isRequired,\n    investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    onUpdateAccounts: PropTypes.func.isRequired\n  };\n\n  state = {\n    investmentModalOpen: false,\n    mortgageModalOpen: false\n  };\n\n  handleClickEdit = section => {\n    if (section === \"investment\") {\n      this.setState({ investmentModalOpen: true });\n    }\n    if (section === \"mortgage\") {\n      this.setState({ mortgageModalOpen: true });\n    }\n  };\n\n  handleCloseInvestmentModal = () => {\n    this.setState({ investmentModalOpen: false });\n  };\n\n  handleCloseMortgageModal = () => {\n    this.setState({ mortgageModalOpen: false });\n  };\n\n  handleChangeInvestment = accountsObject => {\n    this.props.onUpdateAccounts({ type: \"investment\", value: accountsObject });\n  };\n\n  handleChangeMortgage = accountsObject => {\n    this.props.onUpdateAccounts({ type: \"mortgage\", value: accountsObject });\n  };\n\n  render() {\n    const { budget, investmentAccounts, mortgageAccounts } = this.props;\n    const { investmentModalOpen, mortgageModalOpen } = this.state;\n\n    const potentialInvestmentAccounts = budget.accounts.filter(\n      account => account.type === \"otherAsset\" && !account.on_budget\n    );\n    const potentialMortageAccounts = budget.accounts.filter(\n      account => account.type === \"otherLiability\" && !account.on_budget\n    );\n    const investmentAccountsList = budget.accounts.filter(\n      ({ id }) => investmentAccounts[id]\n    );\n    const mortgageAccountList = budget.accounts.filter(\n      ({ id }) => mortgageAccounts[id]\n    );\n\n    return (\n      <Fragment>\n        <Section>\n          <SectionHeader>\n            <StrongText>Investment Accounts</StrongText>\n            <span\n              onClick={() => {\n                this.handleClickEdit(\"investment\");\n              }}\n            >\n              <Icon icon=\"pencil\" />\n            </span>\n          </SectionHeader>\n          {investmentAccountsList.length ? (\n            investmentAccountsList.map(({ id, name }) => (\n              <div key={id}>{name}</div>\n            ))\n          ) : (\n            <EmptyText>No accounts marked as investment</EmptyText>\n          )}\n          <MinorText style={{ marginTop: 10 }}>\n            Transfers to investment accounts are not counted as spending since\n            it's assumed it's for retirement or some other savings goal.\n          </MinorText>\n          <Modal\n            open={investmentModalOpen}\n            onClose={this.handleCloseInvestmentModal}\n            title=\"Investment Accounts\"\n          >\n            <AccountsSelectionForm\n              accounts={potentialInvestmentAccounts}\n              value={investmentAccounts}\n              onChange={this.handleChangeInvestment}\n            />\n          </Modal>\n          <Space />\n          <SectionHeader>\n            <StrongText>Mortgage Accounts</StrongText>\n            <span\n              onClick={() => {\n                this.handleClickEdit(\"mortgage\");\n              }}\n            >\n              <Icon icon=\"pencil\" />\n            </span>\n          </SectionHeader>\n          {mortgageAccountList.length ? (\n            mortgageAccountList.map(({ id, name }) => (\n              <div key={id}>{name}</div>\n            ))\n          ) : (\n            <EmptyText>No accounts marked as mortgage</EmptyText>\n          )}\n          <MinorText style={{ marginTop: 10 }}>\n            Mortgage accounts are used in the retirement calculator since it's a\n            significant expense you won't have in your retirement presumably.\n          </MinorText>\n          <Modal\n            open={mortgageModalOpen}\n            onClose={this.handleCloseMortgageModal}\n            title=\"Mortgage Account\"\n          >\n            <AccountsSelectionForm\n              accounts={potentialMortageAccounts}\n              value={mortgageAccounts}\n              onChange={this.handleChangeMortgage}\n            />\n          </Modal>\n        </Section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Settings;\n","import CurrentMonth from \"./components/CurrentMonth\";\nimport CurrentMonthGroup from \"./components/CurrentMonthGroup\";\nimport CurrentMonthCategory from \"./components/CurrentMonthCategory\";\nimport Groups from \"./components/Groups\";\nimport Group from \"./components/Group\";\nimport Category from \"./components/Category\";\nimport CategoryPayee from \"./components/CategoryPayee\";\nimport Income from \"./components/Income\";\nimport IncomeVsExpenses from \"./components/IncomeVsExpenses\";\nimport NetWorth from \"./components/NetWorth\";\nimport Investments from \"./components/Investments\";\nimport Projections from \"./components/Projections\";\nimport Settings from \"./components/Settings\";\n\nexport const makeLink = (path, params) =>\n  path.replace(/:([a-zA-Z]*)/g, (_, part) => params[part]);\n\nconst pages = {\n  currentMonth: {\n    path: \"/budgets/:budgetId/current\",\n    title: \"Current Month Spending\",\n    Component: CurrentMonth,\n    props: props => ({\n      budget: props.budget,\n      currentMonth: props.currentMonth,\n      investmentAccounts: props.investmentAccounts\n    })\n  },\n  currentMonthGroup: {\n    path: \"/budgets/:budgetId/current/:categoryGroupId\",\n    title: (params, budget) =>\n      budget.categoryGroupsById[params.categoryGroupId].name,\n    Component: CurrentMonthGroup,\n    props: (props, params) => ({\n      budget: props.budget,\n      categoryGroupId: params.categoryGroupId,\n      currentMonth: props.currentMonth\n    }),\n    breadcrumbs: [\"currentMonth\"]\n  },\n  currentMonthCategory: {\n    path: \"/budgets/:budgetId/current/:categoryGroupId/:categoryId\",\n    title: (params, budget) => budget.categoriesById[params.categoryId].name,\n    Component: CurrentMonthCategory,\n    props: (props, params) => ({\n      budget: props.budget,\n      categoryId: params.categoryId,\n      categoryGroupId: params.categoryGroupId,\n      currentMonth: props.currentMonth\n    }),\n    breadcrumbs: [\"currentMonth\", \"currentMonthGroup\"]\n  },\n  groups: {\n    path: \"/budgets/:budgetId/groups\",\n    title: \"Spending Trends\",\n    Component: Groups,\n    props: props => ({ budget: props.budget })\n  },\n  group: {\n    path: \"/budgets/:budgetId/groups/:categoryGroupId\",\n    title: (params, budget) =>\n      budget.categoryGroupsById[params.categoryGroupId].name,\n    Component: Group,\n    props: (props, params) => ({\n      budget: props.budget,\n      categoryGroup: props.budget.categoryGroupsById[params.categoryGroupId]\n    }),\n    breadcrumbs: [\"groups\"]\n  },\n  category: {\n    path: \"/budgets/:budgetId/groups/:categoryGroupId/categories/:categoryId\",\n    title: (params, budget) => budget.categoriesById[params.categoryId].name,\n    Component: Category,\n    props: (props, params) => ({\n      budget: props.budget,\n      category: props.budget.categoriesById[params.categoryId]\n    }),\n    breadcrumbs: [\"groups\", \"group\"]\n  },\n  categoryPayee: {\n    path:\n      \"/budgets/:budgetId/groups/:categoryGroupId/categories/:categoryId/payees/:payeeId\",\n    title: (params, budget) => budget.payeesById[params.payeeId].name,\n    Component: CategoryPayee,\n    props: (props, params) => ({\n      budget: props.budget,\n      category: props.budget.categoriesById[params.categoryId],\n      payee: props.budget.payeesById[params.payeeId]\n    }),\n    breadcrumbs: [\"groups\", \"group\", \"category\"]\n  },\n  income: {\n    path: \"/budgets/:budgetId/income\",\n    title: \"Income Trends\",\n    Component: Income,\n    props: props => ({\n      budget: props.budget\n    })\n  },\n  incomeVsExpenses: {\n    path: \"/budgets/:budgetId/income-vs-expenses\",\n    title: \"Income vs Expenses\",\n    Component: IncomeVsExpenses,\n    props: props => ({\n      budget: props.budget,\n      investmentAccounts: props.investmentAccounts,\n      showing: props.settings.incomeVsExpensesShowing\n    })\n  },\n  netWorth: {\n    path: \"/budgets/:budgetId/net-worth\",\n    title: \"Net Worth\",\n    Component: NetWorth,\n    props: props => ({\n      budget: props.budget,\n      investmentAccounts: props.investmentAccounts,\n      mortgageAccounts: props.mortgageAccounts\n    })\n  },\n  investments: {\n    path: \"/budgets/:budgetId/investments\",\n    title: \"Investments\",\n    Component: Investments,\n    props: props => ({ budget: props.budget, investmentAccounts: props.investmentAccounts })\n  },\n  projections: {\n    path: \"/budgets/:budgetId/projections\",\n    title: \"Retirement Calculator\",\n    Component: Projections,\n    props: props => ({\n      budget: props.budget,\n      investmentAccounts: props.investmentAccounts,\n      mortgageAccounts: props.mortgageAccounts\n    })\n  },\n  settings: {\n    path: \"/budgets/:budgetId/settings\",\n    title: \"Budget Settings\",\n    Component: Settings,\n    props: props => ({\n      budget: props.budget,\n      investmentAccounts: props.investmentAccounts,\n      mortgageAccounts: props.mortgageAccounts,\n      onUpdateAccounts: props.onUpdateAccounts\n    })\n  }\n};\n\nexport default pages;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { matchPath } from \"react-router\";\nimport styled from \"styled-components\";\nimport pages, { makeLink } from \"../pages\";\nimport Icon from \"./Icon\";\nimport { selectedPlotBandColor, iconWidth } from \"../styleVariables\";\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n  height: 60px;\n`;\n\nconst IconWrapper = styled.div`\n  width: ${iconWidth}px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledLink = styled(NavLink)`\n  color: inherit;\n  display: flex;\n  align-items: center;\n  height: 60px;\n  padding: 0 20px;\n  border-top: 1px solid #eee;\n  background-color: ${props => props.active && selectedPlotBandColor};\n  &:last-of-type {\n    border-bottom: 1px solid #eee;\n  }\n`;\n\nclass SidebarMenuContent extends PureComponent {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    hasMultipleBudgets: PropTypes.bool.isRequired,\n    location: PropTypes.string.isRequired,\n    onCloseSidebar: PropTypes.func.isRequired\n  };\n\n  render() {\n    const { budgetId, hasMultipleBudgets, location, onCloseSidebar } = this.props;\n\n    return (\n      <Fragment>\n        <PureHeader onCloseSidebar={onCloseSidebar} budgetId={budgetId} />\n        {[\n          \"currentMonth\",\n          \"groups\",\n          \"income\",\n          \"incomeVsExpenses\",\n          \"netWorth\",\n          \"investments\",\n          \"projections\"\n        ].map(page => {\n          const { path, title } = pages[page];\n\n          return (\n            <PureStyledLink\n              key={path}\n              to={makeLink(path, { budgetId })}\n              active={matchPath(location, { path })}\n              onClick={onCloseSidebar}\n            >\n              {title}\n            </PureStyledLink>\n          );\n        })}\n        {hasMultipleBudgets && (\n          <PureStyledLink to=\"/\">Switch Budgets</PureStyledLink>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nclass PureHeader extends PureComponent {\n  render() {\n    const { onCloseSidebar, budgetId } = this.props;\n    return (\n      <Header>\n        <IconWrapper onClick={onCloseSidebar}>\n          <Icon icon=\"times\" />\n        </IconWrapper>\n        <Link\n          to={makeLink(pages.settings.path, { budgetId })}\n          style={{ display: \"flex\", color: \"inherit\" }}\n          onClick={onCloseSidebar}\n        >\n          <IconWrapper>\n            <Icon icon=\"cog\" />\n          </IconWrapper>\n        </Link>\n      </Header>\n    );\n  }\n}\n\nclass PureStyledLink extends PureComponent {\n  render() {\n    return <StyledLink {...this.props} />;\n  }\n}\n\nexport default SidebarMenuContent;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Sidebar from \"react-sidebar\";\nimport { iconWidth } from \"../styleVariables\";\nimport Icon from \"./Icon\";\nimport SidebarMenuContent from \"./SidebarMenuContent\";\n\nclass SidebarMenu extends Component {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    children: PropTypes.func.isRequired,\n    hasMultipleBudgets: PropTypes.bool.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  state = { open: false };\n\n  handleSetOpen = open => {\n    this.setState({ open });\n  };\n\n  handleTriggerClick = () => {\n    this.setState({ open: true });\n  };\n\n  handleCloseSidebar = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { budgetId, children, hasMultipleBudgets, location } = this.props;\n    const { open } = this.state;\n\n    return (\n      <Sidebar\n        sidebar={\n          <SidebarMenuContent\n            budgetId={budgetId}\n            hasMultipleBudgets={hasMultipleBudgets}\n            location={location}\n            onCloseSidebar={this.handleCloseSidebar}\n          />\n        }\n        open={open}\n        onSetOpen={this.handleSetOpen}\n        styles={{\n          sidebar: {\n            backgroundColor: \"#fff\",\n            width: 280,\n            pointerEvents: !open && \"none\"\n          }\n        }}\n      >\n        {children({\n          sidebarTrigger: <Trigger onClick={this.handleTriggerClick} />\n        })}\n      </Sidebar>\n    );\n  }\n}\n\nconst Trigger = ({ onClick }) => (\n  <div\n    onClick={onClick}\n    style={{\n      alignSelf: \"stretch\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: iconWidth\n    }}\n  >\n    <Icon icon=\"bars\" />\n  </div>\n);\n\nexport default SidebarMenu;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Scroller extends Component {\n  static propTypes = {\n    action: PropTypes.string.isRequired,\n    children: PropTypes.func.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  toBeScrolled = null;\n\n  raf = null;\n\n  scrollPositions = {};\n\n  getSnapshotBeforeUpdate() {\n    return { scrollTop: this.toBeScrolled.scrollTop };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { action, location } = this.props;\n\n    if (location === prevProps.location) {\n      return;\n    }\n\n    if (action === \"POP\") {\n      this.scrollPositions[prevProps.location] = snapshot.scrollTop;\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = this.scrollPositions[location] || 0;\n      });\n    }\n\n    if (action === \"PUSH\") {\n      this.scrollPositions[prevProps.location] = snapshot.scrollTop;\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = 0;\n      });\n    }\n\n    if (action === \"REPLACE\") {\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = 0;\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.raf);\n  }\n\n  render() {\n    return this.props.children({\n      ref: el => {\n        this.toBeScrolled = el;\n      }\n    });\n  }\n}\n\nexport default Scroller;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport EnsureBudgetLoaded from \"./EnsureBudgetLoaded\";\nimport { PageTitle } from \"./typeComponents\";\nimport { PrimaryButton } from \"./Button\";\nimport SidebarMenu from \"./SidebarMenu\";\nimport Scroller from \"./Scroller\";\n\nconst Container = styled.div`\n  height: 100%;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Header = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  height: 60px;\n  padding-left: 0;\n  padding-right: 20px;\n  background-color: #fff;\n  border-bottom: 1px solid #ccc;\n  white-space: pre;\n  user-select: none;\n`;\n\nconst Body = styled.div`\n  flex-grow: 1;\n  overflow-y: auto;\n`;\n\nconst PageWrapper = ({\n  content,\n  authorized,\n  budgetId,\n  budgetLoaded,\n  hasMultipleBudgets,\n  historyAction,\n  location,\n  title,\n  actions,\n  breadcrumbs,\n  onAuthorize,\n  onRequestBudget\n}) => (\n  <EnsureBudgetLoaded\n    budgetId={budgetId}\n    budgetLoaded={budgetLoaded}\n    onRequestBudget={onRequestBudget}\n  >\n    <SidebarMenu\n      budgetId={budgetId}\n      location={location}\n      hasMultipleBudgets={hasMultipleBudgets}\n    >\n      {({ sidebarTrigger }) => (\n        <Container>\n          <Header>\n            {sidebarTrigger}\n            <div style={{ flexGrow: 1 }}>\n              {breadcrumbs}\n              <PageTitle style={{ lineHeight: 1 }}>{title}</PageTitle>\n            </div>\n            {actions}\n          </Header>\n          <Scroller action={historyAction} location={location}>\n            {({ ref }) => <Body ref={ref}>{content}</Body>}\n          </Scroller>\n          {!authorized && (\n            <div\n              style={{\n                padding: \"15px 20px\",\n                backgroundColor: \"#fff\",\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                flexShrink: 0,\n                borderTop: \"1px solid #ccc\"\n              }}\n            >\n              Your authorization expired.\n              <PrimaryButton onClick={onAuthorize}>Reauthorize</PrimaryButton>\n            </div>\n          )}\n        </Container>\n      )}\n    </SidebarMenu>\n  </EnsureBudgetLoaded>\n);\n\nPageWrapper.propTypes = {\n  actions: PropTypes.node.isRequired,\n  authorized: PropTypes.bool.isRequired,\n  breadcrumbs: PropTypes.node.isRequired,\n  budgetId: PropTypes.string.isRequired,\n  budgetLoaded: PropTypes.bool.isRequired,\n  content: PropTypes.node.isRequired,\n  hasMultipleBudgets: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  title: PropTypes.node.isRequired,\n  onAuthorize: PropTypes.func.isRequired,\n  onRequestBudget: PropTypes.func.isRequired\n};\n\nexport default PageWrapper;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route } from \"react-router-dom\";\nimport values from \"lodash/fp/values\";\nimport pages from \"../pages\";\n\nconst PageTitle = ({ budget }) =>\n  budget && (\n    <Switch>\n      {values(pages).map(({ path, title }) => (\n        <Route\n          key={path}\n          path={path}\n          exact\n          render={props =>\n            typeof title === \"function\"\n              ? title(props.match.params, budget)\n              : title\n          }\n        />\n      ))}\n      <Route render={() => \"Page Not Found\"} />\n    </Switch>\n  );\n\nPageTitle.propTypes = {\n  budget: PropTypes.object\n};\n\nexport default PageTitle;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport values from \"lodash/fp/values\";\nimport pages, { makeLink } from \"../pages\";\nimport { MinorText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\n\nconst routes = values(pages)\n  .filter(page => !!page.breadcrumbs)\n  .map(page => ({\n    path: page.path,\n    breadcrumbs: page.breadcrumbs.map(pageKey => ({\n      title: pages[pageKey].title,\n      path: pages[pageKey].path\n    }))\n  }));\n\nconst PageBreadcrumbs = ({ budget }) =>\n  budget && (\n    <Switch>\n      {routes.map(({ path, breadcrumbs }) => (\n        <Route\n          key={path}\n          path={path}\n          exact\n          render={props => (\n            <MinorText style={{ lineHeight: 1, whiteSpace: \"normal\" }}>\n              {breadcrumbs.map(({ title, path }, index) => (\n                <Fragment key={path}>\n                  <Link\n                    to={makeLink(path, props.match.params)}\n                    style={{\n                      paddingBottom: 8,\n                      display: \"inline-block\"\n                    }}\n                  >\n                    {typeof title === \"function\"\n                      ? title(props.match.params, budget)\n                      : title}\n                  </Link>\n                  {index !== breadcrumbs.length - 1 && (\n                    <Icon\n                      icon=\"chevron-right\"\n                      style={{ padding: \"0 5px\", fontSize: 8 }}\n                    />\n                  )}\n                </Fragment>\n              ))}\n            </MinorText>\n          )}\n        />\n      ))}\n    </Switch>\n  );\n\nPageBreadcrumbs.propTypes = {\n  budget: PropTypes.object\n};\n\nexport default PageBreadcrumbs;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport pages, { makeLink } from \"../pages\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { SecondaryText } from \"./typeComponents\";\n\nconst PageActions = ({ settings, onChangeSetting }) => (\n  <Switch>\n    <Route\n      path={pages.currentMonth.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.groups.path, match.params)}>\n            Past Months\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.currentMonthGroup.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.group.path, match.params)}>Past Months</Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.currentMonthCategory.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.category.path, match.params)}>\n            Past Months\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.groups.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonth.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.group.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonthGroup.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.category.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonthCategory.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.incomeVsExpenses.path}\n      exact\n      render={() => (\n        <SecondaryText\n          onClick={() => {\n            onChangeSetting({\n              setting: \"incomeVsExpensesShowing\",\n              value:\n                settings.incomeVsExpensesShowing === \"average\"\n                  ? \"total\"\n                  : \"average\"\n            });\n          }}\n          style={{ userSelect: \"none\" }}\n        >\n          {settings.incomeVsExpensesShowing}\n        </SecondaryText>\n      )}\n    />\n  </Switch>\n);\n\nPageActions.propTypes = {\n  settings: PropTypes.object.isRequired,\n  onChangeSetting: PropTypes.func.isRequired\n};\n\nexport default PageActions;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst INITIAL_STATE = {\n  selectedMonth: null,\n  selectedGroupId: null,\n  selectedCategoryId: null,\n  selectedPayeeId: null\n};\n\nclass CategoriesState extends Component {\n  static propTypes = {\n    action: PropTypes.oneOf([\"PUSH\", \"POP\", \"REPLACE\"]).isRequired,\n    children: PropTypes.func.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  state = INITIAL_STATE;\n\n  cachedStates = {};\n\n  getSnapshotBeforeUpdate() {\n    return this.state;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { location, action } = this.props;\n\n    if (location === prevProps.location) {\n      return;\n    }\n\n    if (action === \"POP\") {\n      this.cachedStates[prevProps.location] = snapshot;\n      this.setState(this.cachedStates[location]);\n    }\n\n    if (action === \"PUSH\") {\n      this.cachedStates[prevProps.location] = snapshot;\n      this.setState(INITIAL_STATE);\n    }\n\n    if (action === \"REPLACE\") {\n      this.setState(INITIAL_STATE);\n    }\n  }\n\n  handleSelectMonth = month => {\n    this.setState(state => ({\n      ...state,\n      selectedMonth: state.selectedMonth === month ? null : month\n    }));\n  };\n\n  handleSelectGroup = groupId => {\n    this.setState(state => ({\n      ...state,\n      selectedGroupId: state.selectedGroupId === groupId ? null : groupId\n    }));\n  };\n\n  handleSelectCategory = categoryId => {\n    this.setState(state => ({\n      ...state,\n      selectedCategoryId:\n        state.selectedCategoryId === categoryId ? null : categoryId\n    }));\n  };\n\n  handleSelectPayee = payeeId => {\n    this.setState(state => ({\n      ...state,\n      selectedPayeeId: state.selectedPayeeId === payeeId ? null : payeeId\n    }));\n  };\n\n  render() {\n    return this.props.children({\n      ...this.state,\n      onSelectMonth: this.handleSelectMonth,\n      onSelectGroup: this.handleSelectGroup,\n      onSelectCategory: this.handleSelectCategory,\n      onSelectPayee: this.handleSelectPayee,\n      onSetExclusion: this.handleSetExclusion\n    });\n  }\n}\n\nexport default CategoriesState;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Switch, Route } from \"react-router-dom\";\nimport values from \"lodash/fp/values\";\nimport moment from \"moment\";\nimport { groupBy, notAny, simpleMemoize } from \"../dataUtils\";\nimport {\n  getFirstMonth,\n  getTransactionMonth,\n  isIncome,\n  isStartingBalanceOrReconciliation,\n  isTransfer\n} from \"../budgetUtils\";\nimport { useMonthExclusions } from \"../commonHooks\";\nimport pages, { makeLink } from \"../pages\";\nimport CategoriesState from \"./CategoriesState\";\n\nconst getFilteredTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) => {\n    const firstMonth = getFirstMonth(budget);\n    const lastMonth = moment().format(\"YYYY-MM\");\n    return budget.transactions.filter(\n      notAny([\n        isStartingBalanceOrReconciliation(budget),\n        isTransfer(investmentAccounts),\n        transaction =>\n          excludeFirstMonth && getTransactionMonth(transaction) === firstMonth,\n        transaction =>\n          excludeLastMonth && getTransactionMonth(transaction) === lastMonth\n      ])\n    );\n  }\n);\n\nconst getFilteredSpendingTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) =>\n    getFilteredTransactions(\n      budget,\n      investmentAccounts,\n      excludeFirstMonth,\n      excludeLastMonth\n    ).filter(transaction => !isIncome(budget)(transaction))\n);\n\nconst getFilteredIncomeTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) =>\n    getFilteredTransactions(\n      budget,\n      investmentAccounts,\n      excludeFirstMonth,\n      excludeLastMonth\n    )\n      .filter(transaction => isIncome(budget)(transaction))\n      .map(transaction => ({ ...transaction, amount: -transaction.amount }))\n);\n\nconst trendsPath = pages.groups.path;\nconst groupedPages = groupBy(\n  page => (page.path.startsWith(trendsPath) ? \"trendPages\" : \"otherPages\")\n)(values(pages));\n\nconst PageContent = props => {\n  if (!props.budget) {\n    return null;\n  }\n\n  const {\n    excludeFirstMonth,\n    excludeLastMonth,\n    months,\n    onSetExclusion\n  } = useMonthExclusions(props.budget);\n\n  return (\n    <Switch>\n      <Route\n        path={trendsPath}\n        render={({ match }) => {\n          const filteredTransactions = getFilteredSpendingTransactions(\n            props.budget,\n            props.investmentAccounts,\n            excludeFirstMonth,\n            excludeLastMonth\n          );\n\n          return (\n            <CategoriesState\n              key={match.params.categoryGroupId}\n              action={props.historyAction}\n              location={props.location}\n            >\n              {({\n                selectedMonth,\n                selectedGroupId,\n                selectedCategoryId,\n                selectedPayeeId,\n                onSelectMonth,\n                onSelectGroup,\n                onSelectCategory,\n                onSelectPayee\n              }) => (\n                <Switch>\n                  {groupedPages.trendPages.map(\n                    ({ path, props: propsFunction, Component }) => (\n                      <Route\n                        key={path}\n                        path={path}\n                        exact\n                        render={({ match }) => (\n                          <Component\n                            {...propsFunction(props, match.params)}\n                            excludeFirstMonth={excludeFirstMonth}\n                            excludeLastMonth={excludeLastMonth}\n                            months={months}\n                            selectedMonth={selectedMonth}\n                            selectedGroupId={selectedGroupId}\n                            selectedCategoryId={selectedCategoryId}\n                            selectedPayeeId={selectedPayeeId}\n                            transactions={filteredTransactions}\n                            onSelectMonth={onSelectMonth}\n                            onSelectGroup={onSelectGroup}\n                            onSelectCategory={onSelectCategory}\n                            onSelectPayee={onSelectPayee}\n                            onSetExclusion={onSetExclusion}\n                          />\n                        )}\n                      />\n                    )\n                  )}\n                </Switch>\n              )}\n            </CategoriesState>\n          );\n        }}\n      />\n      <Route\n        path={pages.income.path}\n        exact\n        render={({ match }) => {\n          const { Component } = pages.income;\n          const filteredTransactions = getFilteredIncomeTransactions(\n            props.budget,\n            props.investmentAccounts,\n            excludeFirstMonth,\n            excludeLastMonth\n          );\n          return (\n            <Component\n              {...pages.income.props(props, match.params)}\n              excludeFirstMonth={excludeFirstMonth}\n              excludeLastMonth={excludeLastMonth}\n              months={months}\n              transactions={filteredTransactions}\n              onSetExclusion={onSetExclusion}\n            />\n          );\n        }}\n      />\n      <Route\n        path={pages.incomeVsExpenses.path}\n        exact\n        render={({ match }) => {\n          const { Component } = pages.incomeVsExpenses;\n          const filteredTransactions = getFilteredTransactions(\n            props.budget,\n            props.investmentAccounts,\n            excludeFirstMonth,\n            excludeLastMonth\n          );\n          return (\n            <Component\n              {...pages.incomeVsExpenses.props(props, match.params)}\n              excludeFirstMonth={excludeFirstMonth}\n              excludeLastMonth={excludeLastMonth}\n              transactions={filteredTransactions}\n              onSetExclusion={onSetExclusion}\n            />\n          );\n        }}\n      />\n      {groupedPages.otherPages.map(\n        ({ path, props: propsFunction, Component }) => (\n          <Route\n            key={path}\n            path={path}\n            exact\n            render={({ match }) => (\n              <Component {...propsFunction(props, match.params)} />\n            )}\n          />\n        )\n      )}\n      <Route\n        render={() => (\n          <div style={{ padding: 20 }}>\n            <Link\n              to={makeLink(pages.currentMonth.path, {\n                budgetId: props.budget.id\n              })}\n            >\n              Return to {pages.currentMonth.title}\n            </Link>\n          </div>\n        )}\n      />\n    </Switch>\n  );\n};\n\nPageContent.propTypes = {\n  currentMonth: PropTypes.string.isRequired,\n  historyAction: PropTypes.oneOf([\"PUSH\", \"POP\", \"REPLACE\"]).isRequired,\n  investmentAccounts: PropTypes.object.isRequired,\n  location: PropTypes.string.isRequired,\n  mortgageAccounts: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired,\n  onUpdateAccounts: PropTypes.func.isRequired,\n  budget: PropTypes.object\n};\n\nexport default PageContent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Section from \"./Section\";\nimport { PageTitle, StrongText, SecondaryText } from \"./typeComponents\";\nimport { PrimaryButton } from \"./Button\";\n\nconst Unauthorized = ({ onAuthorize }) => (\n  <Section>\n    <PageTitle>Budget Reports</PageTitle>\n    <div style={{ marginBottom: 10 }}>Get various insights from your YNAB account.</div>\n    <PrimaryButton onClick={onAuthorize}>\n      Authorize YNAB\n    </PrimaryButton>\n    <StrongText style={{ marginTop: 30 }}>Privacy Policy</StrongText>\n    <SecondaryText>\n      This website does not store any information from you or your YNAB account\n      on it's server. All data retrieved from the YNAB API is stored only in\n      your browser's local storage and is never transmitted to any other location or\n      third-party.\n    </SecondaryText>\n  </Section>\n);\n\nUnauthorized.propTypes = {\n  onAuthorize: PropTypes.func.isRequired\n};\n\nexport default Unauthorized;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 10px 20px;\n`;\n\n\nconst ErrorPage = ({ message }) => (\n  <Container>\n    <h3>{message}</h3>\n    <div>\n      <Link to=\"/\">Home</Link>\n    </div>\n  </Container>\n);\n\nErrorPage.propTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default ErrorPage;\n","import React from \"react\";\nimport ErrorPage from \"./ErrorPage\";\n\nconst NotFound = () => <ErrorPage message=\"Page not found\" />;\n\nexport default NotFound;\n","/* global Rollbar */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ErrorPage from \"./ErrorPage\";\n\nclass ErrorBoundary extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    message: PropTypes.string\n  };\n\n  static defaultProps = {\n    message: \"Something went wrong\"\n  };\n\n  state = { hasError: false };\n\n  componentDidCatch(error) {\n    Rollbar.error(error);\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorPage message={this.props.message} />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport pages, { makeLink } from \"../pages\";\nimport { StrongText } from \"./typeComponents\";\nimport Section from \"./Section\";\nimport Loading from \"./Loading\";\n\nclass Budgets extends Component {\n  static propTypes = {\n    budgets: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    budgetsLoaded: PropTypes.bool.isRequired,\n    onRequestBudgets: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    if (!this.props.budgetsLoaded) {\n      this.props.onRequestBudgets();\n    }\n  }\n\n  render() {\n    const { budgets, budgetsLoaded } = this.props;\n\n    if (!budgetsLoaded) {\n      return <Loading />;\n    }\n\n    return (\n      <Section>\n        <StrongText>Select a budget:</StrongText>\n        {budgets.map(({ id, name }) => (\n          <div key={id}>\n            <Link to={makeLink(pages.currentMonth.path, { budgetId: id })}>\n              {name}\n            </Link>\n          </div>\n        ))}\n      </Section>\n    );\n  }\n}\n\nexport default Budgets;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Switch } from \"react-router-dom\";\nimport moment from \"moment\";\nimport get from \"lodash/fp/get\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport {\n  getBudgets,\n  getUpdatedBudget,\n  AUTHORIZE_URL,\n  setLastLocation\n} from \"../ynabRepo\";\nimport { setSetting, getSetting } from \"../uiRepo\";\nimport PageWrapper from \"./PageWrapper\";\nimport PageTitle from \"./PageTitle\";\nimport PageBreadcrumbs from \"./PageBreadcrumbs\";\nimport PageActions from \"./PageActions\";\nimport PageContent from \"./PageContent\";\nimport Unauthorized from \"./Unauthorized\";\nimport NotFound from \"./NotFound\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport Budgets from \"./Budgets\";\nimport CurrencyContext from \"./CurrencyContext\";\n\nclass App extends Component {\n  static propTypes = {\n    hasToken: PropTypes.bool.isRequired\n  };\n\n  state = {\n    authorized: true,\n    budgetsLoaded: false,\n    budgetIds: [],\n    budgets: {},\n    budgetDetails: {},\n    currentMonth: moment().format(\"YYYY-MM\"),\n    settings: {\n      payeesSort: \"amount\",\n      incomeVsExpensesShowing: \"average\"\n    }\n  };\n\n  handleRequestBudgets = callback => {\n    getBudgets().then(({ budgets }) => {\n      this.setState(\n        {\n          budgetsLoaded: true,\n          budgetIds: budgets.map(b => b.id),\n          budgets: keyBy(\"id\")(budgets)\n        },\n        callback\n      );\n    });\n  };\n\n  handleRequestBudget = id => {\n    getUpdatedBudget(id).then(({ budget, authorized }) => {\n      this.setState(state => ({\n        ...state,\n        authorized,\n        budgetDetails: {\n          ...state.budgetDetails,\n          [id]: budget\n        }\n      }));\n    });\n  };\n\n  handleAuthorize = () => {\n    setLastLocation();\n    window.location.replace(AUTHORIZE_URL);\n  };\n\n  handleChangeSetting = ({ setting, value }) => {\n    this.setState(state => ({\n      ...state,\n      settings: {\n        ...state.settings,\n        [setting]: value\n      }\n    }));\n  };\n\n  render() {\n    const { hasToken } = this.props;\n    const {\n      authorized,\n      budgetsLoaded,\n      budgetIds,\n      budgets,\n      budgetDetails,\n      currentMonth,\n      settings\n    } = this.state;\n\n    if (!hasToken) {\n      return <Unauthorized onAuthorize={this.handleAuthorize} />;\n    }\n\n    return (\n      <ErrorBoundary>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <Budgets\n                budgets={budgetIds.map(id => budgets[id])}\n                budgetsLoaded={budgetsLoaded}\n                onRequestBudgets={this.handleRequestBudgets}\n              />\n            )}\n          />\n          <Route\n            path=\"/budgets/:budgetId\"\n            render={props => {\n              const { budgetId } = props.match.params;\n              const budget = budgetDetails[budgetId];\n\n              return (\n                <CurrencyContext.Provider value={get(\"currencyFormat\")(budget)}>\n                  <PageWrapper\n                    authorized={authorized}\n                    budgetId={budgetId}\n                    budgetLoaded={!!budget}\n                    hasMultipleBudgets={budgetIds.length > 1}\n                    historyAction={props.history.action}\n                    location={props.location.pathname}\n                    onAuthorize={this.handleAuthorize}\n                    onRequestBudget={this.handleRequestBudget}\n                    title={<PageTitle budget={budget} />}\n                    breadcrumbs={<PageBreadcrumbs budget={budget} />}\n                    actions={\n                      <PageActions\n                        settings={settings}\n                        onChangeSetting={this.handleChangeSetting}\n                      />\n                    }\n                    content={\n                      <PageContent\n                        budget={budget}\n                        currentMonth={currentMonth}\n                        investmentAccounts={getSetting(\n                          \"investmentAccounts\",\n                          budgetId\n                        )}\n                        mortgageAccounts={getSetting(\n                          \"mortgageAccounts\",\n                          budgetId\n                        )}\n                        settings={settings}\n                        historyAction={props.history.action}\n                        location={props.location.pathname}\n                        onChangeSetting={this.handleChangeSetting}\n                        onUpdateAccounts={({ type, value }) => {\n                          if (type === \"investment\") {\n                            setSetting(\"investmentAccounts\", budgetId, value);\n                          }\n                          if (type === \"mortgage\") {\n                            setSetting(\"mortgageAccounts\", budgetId, value);\n                          }\n                          this.forceUpdate();\n                        }}\n                      />\n                    }\n                  />\n                </CurrencyContext.Provider>\n              );\n            }}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { getAuthorizeToken, initializeYnabApi } from \"./ynabRepo\";\nimport App from \"./components/App\";\n\nconst token = getAuthorizeToken();\n\nif (token) {\n  initializeYnabApi(token);\n}\n\nReactDOM.render(\n  <HashRouter>\n    <App hasToken={!!token} />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}