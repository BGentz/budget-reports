{"version":3,"sources":["localstorageUtils.js","uiRepo.js","dataUtils.js","repoUtils.js","localBudgetCache.js","ynabRepo.js","components/typeComponents.js","components/Loading.js","components/EnsureBudgetLoaded.js","styleVariables.js","components/Button.js","components/Icon.js","budgetUtils.js","components/CollapsibleSection.js","components/Chart.js","components/CurrencyContext.js","components/Amount.js","components/ChartNumbers.js","components/SpendingChart.js","components/Modal.js","components/ChartSettingsModal.js","components/DayByDaySection.js","components/ListItem.js","components/EmptyText.js","components/NoTransactions.js","components/LabelWithMinorText.js","components/LabelWithTransactionCount.js","components/AmountWithPercentage.js","components/SeeAll.js","components/GenericEntitiesSection.js","components/CurrentMonth.js","components/Transaction.js","components/TransactionsSection.js","components/CurrentMonthGroup.js","components/CurrentMonthCategory.js","components/MonthlyChart.js","components/Toggle.js","components/ToggleWithLabel.js","components/MonthByMonthSettingsModal.js","components/MonthByMonthSection.js","components/Groups.js","components/TransactionsByMonthSection.js","components/Group.js","components/Category.js","components/CategoryPayee.js","components/IncomeVsExpensesChart.js","components/BreakdownNode.js","components/Breakdown.js","components/ExpensesBreakdown.js","components/IncomeBreakdown.js","components/Breakdowns.js","components/IncomeVsExpenses.js","components/NetWorthChart.js","components/NetWorthAccounts.js","components/NetWorth.js","components/MonthExclusions.js","components/Investments.js","components/ProjectionsChart.js","components/ClickOff.js","components/ProjectionsSlider.js","components/Projections.js","projectionUtils.js","components/Section.js","components/AccountsSelectionForm.js","components/Settings.js","pages.js","components/SidebarMenuContent.js","components/SidebarMenu.js","components/Scroller.js","components/PageWrapper.js","components/PageTitle.js","components/PageBreadcrumbs.js","components/PageActions.js","components/CategoriesState.js","components/PageContent.js","components/Unauthorized.js","components/ErrorPage.js","components/NotFound.js","components/ErrorBoundary.js","components/Budgets.js","components/App.js","registerServiceWorker.js","index.js"],"names":["cache","getStorage","key","raw","localStorage","getItem","parsed","JSON","parse","setStorage","obj","setItem","stringify","e","SETTINGS","excludeFirstMonth","localStorageKey","default","excludeLastMonth","investmentAccounts","lastUpdated","mortgageAccounts","netWorthHiddenAccounts","spendingMonthsToCompare","trendsShowAverage","getSetting","settingsKey","budgetId","setting","Error","get","setSetting","value","previousSetting","Object","objectSpread","defineProperty","groupBy","func","arr","grouped","forEach","push","groupByProp","keyByProp","reduce","acc","curr","sumByProp","simpleMemoize","lastArgs","lastResult","_len","arguments","length","args","Array","_key","every","index","apply","notAny","predicates","arg","predicate","formatCurrency","utils","convertMilliUnitsToCurrencyAmount","GROUPS_TO_HIDE","sanitizeBudget","budget","transactionIdsFromSub","uniq","subtransactions","map","transaction","transaction_id","categoryGroups","category_groups","filter","group","includes","name","categories","category","deleted","activity","balance","budgeted","categoriesById","earliestDate","moment","subtract","MAX_MONTHS_TO_SHOW","format","currencyFormat","symbol","currency_format","currency_symbol","omit","accountsById","accounts","categoryGroupsById","payeesById","payees","months","sortBy","transactions","compose","amount","category_id","flatMap","id","subs","sub","matchesProperty","reverse","dropWhile","date","applyDeltas","deltas","undefined","updater","prev","exists","newArr","item","concat","upsertBy","arraysToUpdate","cachedDetails","getAllBudgetDetails","setBudgetDetails","_ref","server_knowledge","details","newDetails","AUTHORIZE_URL","api","getBudgets","budgets","then","data","catch","matches","error","message","getBudget","getBudgetById","_ref2","valueOf","authorized","getUpdatedBudget","budgetDetails","getBudgetDetails","_ref3","mergeBudgets","setLastLocation","window","location","hash","PageTitle","styled","div","_templateObject","LargeNumber","_templateObject2","StrongText","_templateObject3","SecondaryText","_templateObject4","MinorText","_templateObject5","Loading","react_default","a","createElement","style","height","display","flexDirection","alignItems","justifyContent","EnsureBudgetLoaded","_this$props","this","props","budgetLoaded","onRequestBudget","children","components_Loading","Component","selectedPlotBandColor","tinyColor","lighten","desaturate","toHexString","lighterPrimaryColor","lightPrimaryColor","negativeChartColor","Button","Button_templateObject","PrimaryButton","Button_templateObject2","library","add","faArrowLeft","faBars","faCaretDown","faChevronRight","faCog","faEllipsisV","faEye","faEyeSlash","faPencilAlt","faTimes","ICONS","arrow-left","bars","caret-down","chevron-right","cog","pencil","ellipsis-v","eye","eye-slash","times","PRESET_STYLES","faded","fontWeight","color","fontSize","Icon","icon","other","objectWithoutProperties","react_fontawesome_index_es","assign","mapRaw","convert","cap","isStartingBalanceOrReconciliation","startingBalancePayeeId","find","payee","reconciliationPayeeId","payee_id","isIncome","toBeBudgetedId","isTransfer","transfer_account_id","getTransactionMonth","slice","getFirstMonth","getPayeeNodes","divideBy","payeeId","pick","sanitizeName","replace","trim","Container","CollapsibleSection_templateObject","Header","CollapsibleSection_templateObject2","SettingsContainer","CollapsibleSection_templateObject3","Body","CollapsibleSection_templateObject4","CollapsibleSection","state","expanded","handleClickTitle","_this","setState","actions","hasSettings","noPadding","title","onClickSettings","CollapsibleSection_Container","onClick","components_Icon","transform","rotate","marginLeft","es","isExpanded","padding","CHART_DEFAULTS","chart","spacing","credits","enabled","legend","text","subtitle","tooltip","xAxis","tickLength","Chart","options","highcharts_react_official_default","highcharts","Highcharts","CurrencyContext","React","createContext","Amount","amountAfterDecimal","showCurrencySymbol","components_CurrencyContext","Consumer","nStr","x","split","x1","x2","rgx","test","addCommas","Math","abs","toFixed","defaultProps","ChartNumbers","numbers","alwaysRound","smallNumbers","some","textAlign","lineHeight","marginBottom","label","_ref3$isMoney","isMoney","decimalsToRound","components_Amount","isNumber","DateLabels","SpendingChart_templateObject","getData","month","transactionsByDate","today","cumulative","range","daysInMonth","numDays","padCharsStart","sumBy","SpendingChart","total","highlightFunction","currentMonth","monthsToCompare","highlightedTransactions","highlightSeries","type","enableMouseTracking","marker","animation","lineWidth","fillOpacity","firstDate","lastDate","lineData","day","firstDayOfWeek","parseInt","plotBands","num","from","to","comparisonSeries","numMonths","mix","toHex","spent","takeWhile","chartNumbers","react","components_ChartNumbers","components_Chart","labels","yAxis","visible","endOnTick","startOnTick","series","dashStyle","toConsumableArray","PureComponent","Modal_templateObject","Overlay","Modal_templateObject2","ModalContent","Modal_templateObject3","ensureNextTick","callback","requestAnimationFrame","Modal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleTransitionEnd","animationState","el","document","body","appendChild","prevProps","_this2","open","removeChild","onClose","width","shouldShow","createPortal","Modal_Container","opacity","onTransitionEnd","marginTop","ChartSettingsModal","onDecrementMonths","onIncrementMonths","components_Modal","marginRight","components_Button","MAX_MONTHS","DayByDaySection","handleClickSettings","modalOpen","handleCloseModal","handleDecrementMonths","max","saveSetting","handleIncrementMonths","min","_this$state","components_CollapsibleSection","components_SpendingChart","components_ChartSettingsModal","ListItem","ListItem_templateObject","isContinuing","EmptyText","EmptyText_templateObject","NoTransactions","components_EmptyText","LabelWithMinorText","minorText","inLink","bold","whiteSpace","overflow","Link","textOverflow","LabelWithTransactionCount","count","selected","showCount","components_LabelWithMinorText","AmountWithPercentage","SeeAll","pluralizedName","showAll","onToggle","mapWithKeys","keyToPluralizedName","category_group_id","GenericEntitiesSection","allMounted","handleToggleShowAll","emptyName","entityKey","entityFunction","entitiesById","linkFunction","limitShowingProp","limitShowing","selectedEntityId","showAverage","showAverageToggle","showTransactionCount","onClickEntity","onToggleAverage","_this$state2","entities","entityId","LIMIT","topEntities","otherEntities","components_NoTransactions","GenericEntitiesSection_GenericItemLink","components_SeeAll","MaybeLink","GenericItemLink","_this$props2","components_ListItem","components_LabelWithTransactionCount","GenericEntitiesSection_MaybeLink","evt","stopPropagation","components_AmountWithPercentage","CurrentMonth","selectedGroupId","handleSelectGroup","groupId","selectedGroup","transactionsThisMonth","components_DayByDaySection","components_GenericEntitiesSection","makeLink","pages","currentMonthGroup","path","categoryGroupId","Transaction","memo","TransactionsSection","categoryId","components_Transaction","CurrentMonthGroup","selectedCategoryId","handleSelectCategory","allCategories","allTransactions","selectedCategory","categoryIds","transactionsInGroup","transactionsInGroupForMonth","available","currentMonthCategory","components_TransactionsSection","CurrentMonthCategory","transactionsInCategory","transactionsInCategoryForMonth","MonthlyChart","average","selectedMonth","stacked","onSelectMonth","yearLines","d","highlights","zIndex","findIndex","events","click","event","round","plotLines","gridLineColor","plotOptions","stacking","s","valueFunction","borderWidth","states","hover","brightness","Track","Toggle_templateObject","HEIGHT","on","Handle","Toggle_templateObject2","WIDTH","Toggle","ToggleWithLabel_templateObject","Label","ToggleWithLabel_templateObject2","ToggleWithLabel","checked","onChange","ToggleWithLabel_Container","target","components_Toggle","MonthByMonthSettingsModal","onSetExclusion","components_ToggleWithLabel","exclude","MonthByMonthSection","settingsModalOpen","selectedMonthTotal","transactionsByMonth","false","highlighted","true","components_MonthlyChart","components_MonthByMonthSettingsModal","Groups","handleToggleGroupAverage","onSelectGroup","transactionsForMonth","components_MonthByMonthSection","TransactionsByMonthSection","selectedPayeeId","selectedPayee","topTransactions","otherTransactions","Group","handleToggleAverage","categoryGroup","onSelectCategory","transactionsInSelectedMonth","components_TransactionsByMonthSection","Category","onSelectPayee","transactionsForCategory","categoryPayee","handleSelectMonth","transactionsForCategoryAndPayee","IncomeVsExpensesChart","income","expenses","BreakdownNode","childrenMounted","handleToggleExpand","nodes","isTopLevel","valueRenderer","hasChildNodes","BreakdownNode_Container","BreakdownNode_ToggleNode","BreakdownNode_LeafNode","BreakdownNode_Nodes","Nodes","paddingLeft","node","BreakdownNode_BreakdownNode","NodeWrapper","BreakdownNode_templateObject","IconWrapper","BreakdownNode_templateObject2","ToggleNode","LeafNode","Breakdown","components_BreakdownNode","ExpensesBreakdown","totalIncome","categoryNodes","payeeNodes","groupNodes","rootPayeeNodes","components_Breakdown","IncomeBreakdown","Breakdowns","expenseTransactions","incomeTransactions","components_ExpensesBreakdown","components_IncomeBreakdown","IncomeVsExpenses","handleCloseSettingsModal","getSummaries","showing","showTotals","allSummaries","summaries","summary","totalExpenses","denominator","components_IncomeVsExpensesChart","components_Breakdowns","CREDIT_ACCOUNTS","NetWorthChart","groupedData","getStack","monthlyData","assets","asset","liabilities","liability","getNodes","accountsByGroup","account","startCase","AccountBreakdown","_ref4","hiddenAccounts","onToggleAccounts","_ref5","propEq","ids","NetWorthAccounts","keyBy","visibleNodes","reject","hiddenNodes","NetWorthAccounts_AccountBreakdown","values","last","NetWorth","groupByMonthAndAccount","mapValues","getMonths","identity","keys","getSummaryByAccount","groupedTransactions","getSelectedBalances","selectedMonthIndex","eq","accountSummaries","handleToggleAccounts","shouldHide","newHiddenAccounts","selectedBalances","filterHidden","omitBy","_","selectedLiabilities","sum","b","selectedAssets","components_NetWorthChart","constant","components_NetWorthAccounts","CategoriesState","handleSetExclusion","firstBudgetMonth","firstMonth","lastMonth","m","isContribution","account_id","isCapitalGainOrLoss","Investments","selectedBreakdown","handleClickBreakdown","breakdown","settings","investmentTransactions","isInvestmentTransaction","transactionsInMonth","MonthExclusions","contribution","capitalGain","ProjectionsChart","investmentsProjection","mortgageProjection","amountNeededToRetire","yearsUntilRetirement","floor","isDescendant","parent","child","parentNode","ClickOff","handleBodyClick","onClickOff","addEventListener","removeEventListener","ref","bodyEl","getElementsByTagName","ProjectionsSlider_templateObject","ProjectionsSlider","formatter","onBlur","onReset","rangeOptions","components_ClickOff","ProjectionsSlider_Container","innerRef","borderTop","ProjectionsSlider_Range","val","Range","adjustableEntries","adjustableEntriesByName","getInitialState","mortgageAccount","t","lastMonthTransactions","takeRightWhile","P","P1","c","prop","r","N","log","rate","paymentsLeft","projection","n","pow","mortgagePayment","principalProjection","getMortgageRate","remainingMortgagePayments","returnOnInvestments","investmentAccountIds","tr","startForMonth","returnRates","trs","contributions","gains","returns","totalReturn","multiply","getReturnOnInvestments","averageContribution","_ref6","transferAccountId","_ref7","accountId","diff","head","getAverageContribution","currentInvestments","getCurrentInvestments","averageExpenses","_ref8","startingBalanceId","mortgageAccountIds","getAverageExpensesWithoutMortgage","retirementReturns","retirementTaxRate","maxAverageExpenses","ceil","maxAverageContribution","Projections","handleChange","parseFloat","handleSelectAdjusting","adjustingName","handleClearSelection","handleResetCalculation","calculation","_ref9","monthlyRate","getProjection","YEARS_TO_PROJECT","monthlyRetirementReturn","remainingMortgage","projectionWithRetirement","_ref10","monthsBeforeRetirement","monthlyExpenses","getProjectionWithRetirement","hasMortgage","projectionByYear","chunk","mortgageProjectionByYear","nameToRangeOptions","step","components_ProjectionsChart","Projections_AdjustableEntry","isAdjusting","onSelect","Projections_Entry","components_ProjectionsSlider","AdjustableEntry","highlightValue","isAdjustable","Entry","_ref4$formatter","backgroundColor","borderRadius","Section","Section_templateObject","top","AccountsSelectionForm","_evt$target","SectionHeader","Settings_templateObject","Space","Settings_templateObject2","Settings","investmentModalOpen","mortgageModalOpen","handleClickEdit","section","handleCloseInvestmentModal","handleCloseMortgageModal","handleChangeInvestment","accountsObject","onUpdateAccounts","handleChangeMortgage","potentialInvestmentAccounts","on_budget","potentialMortageAccounts","investmentAccountsList","mortgageAccountList","components_Section","components_AccountsSelectionForm","params","part","breadcrumbs","groups","CategoryPayee","incomeVsExpenses","incomeVsExpensesShowing","netWorth","investments","projections","SidebarMenuContent_templateObject","SidebarMenuContent_templateObject2","StyledLink","NavLink","SidebarMenuContent_templateObject3","active","SidebarMenuContent","hasMultipleBudgets","onCloseSidebar","SidebarMenuContent_PureHeader","page","_pages$page","SidebarMenuContent_PureStyledLink","matchPath","PureHeader","SidebarMenuContent_Header","SidebarMenuContent_IconWrapper","PureStyledLink","SidebarMenu","handleSetOpen","handleTriggerClick","handleCloseSidebar","react_sidebar_esm","sidebar","components_SidebarMenuContent","onSetOpen","styles","pointerEvents","sidebarTrigger","SidebarMenu_Trigger","Trigger","alignSelf","Scroller","toBeScrolled","raf","scrollPositions","scrollTop","prevState","snapshot","action","cancelAnimationFrame","_this3","PageWrapper_templateObject","PageWrapper_templateObject2","PageWrapper_templateObject3","PageWrapper","content","historyAction","onAuthorize","components_EnsureBudgetLoaded","components_SidebarMenu","PageWrapper_Container","PageWrapper_Header","flexGrow","typeComponents_PageTitle","components_Scroller","PageWrapper_Body","flexShrink","Switch","Route","exact","render","match","routes","pageKey","PageBreadcrumbs","paddingBottom","PageActions","onChangeSetting","userSelect","INITIAL_STATE","cachedStates","handleSelectPayee","getFilteredTransactions","getFilteredSpendingTransactions","trendsPath","groupedPages","startsWith","PageContent","filteredTransactions","components_CategoriesState","trendPages","propsFunction","otherPages","Unauthorized","ErrorPage_templateObject","ErrorPage","ErrorPage_Container","NotFound","components_ErrorPage","ErrorBoundary","hasError","Rollbar","Budgets","budgetsLoaded","onRequestBudgets","App","budgetIds","payeesSort","handleRequestBudgets","handleRequestBudget","handleAuthorize","handleChangeSetting","hasToken","components_ErrorBoundary","components_Budgets","Provider","components_PageWrapper","history","pathname","components_PageTitle","components_PageBreadcrumbs","components_PageActions","components_PageContent","forceUpdate","component","components_Unauthorized","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","token","search","substring","decodeURIComponent","removeItem","getAuthorizeToken","ynab","ReactDOM","HashRouter","components_App","getElementById","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.22bad17f.chunk.js","sourcesContent":["const cache = {};\n\nexport const getStorage = key => {\n  if (cache[key]) {\n    return cache[key];\n  }\n  const raw = localStorage.getItem(key);\n  if (raw) {\n    const parsed = JSON.parse(raw);\n    cache[key] = parsed;\n    return parsed;\n  }\n  return null;\n};\n\nexport const setStorage = (key, obj) => {\n  delete cache[key];\n\n  try {\n    localStorage.setItem(key, JSON.stringify(obj));\n  } catch (e) {\n    // Most likely exceeds storage quota\n  }\n};\n","import { getStorage, setStorage } from \"./localstorageUtils\";\nimport get from \"lodash/get\";\n\nconst SETTINGS = {\n  excludeFirstMonth: {\n    localStorageKey: \"budget-reports-exclude-first-month\",\n    default: false\n  },\n  excludeLastMonth: {\n    localStorageKey: \"budget-reports-exclude-last-month\",\n    default: false\n  },\n  investmentAccounts: {\n    localStorageKey: \"budget-reports-investment-accounts\",\n    default: {}\n  },\n  lastUpdated: {\n    localStorageKey: \"budget-reports-last-updated\",\n    default: null\n  },\n  mortgageAccounts: {\n    localStorageKey: \"budget-reports-mortgage-accounts\",\n    default: {}\n  },\n  netWorthHiddenAccounts: {\n    localStorageKey: \"budget-reports-networth-hidden-accounts\",\n    default: {}\n  },\n  spendingMonthsToCompare: {\n    localStorageKey: \"budget-reports-spending-months-to-compare\",\n    default: 3\n  },\n  trendsShowAverage: {\n    localStorageKey: \"budget-reports-trends-show-average\",\n    default: true\n  }\n};\n\nexport const getSetting = (settingsKey, budgetId) => {\n  const setting = SETTINGS[settingsKey];\n\n  if (!setting) {\n    throw new Error(\"not a valid settings key\");\n  }\n\n  return get(getStorage(setting.localStorageKey), budgetId, setting.default);\n};\n\nexport const setSetting = (settingsKey, budgetId, value) => {\n  const setting = SETTINGS[settingsKey];\n\n  if (!setting) {\n    throw new Error(\"not a valid settings key\");\n  }\n\n  const previousSetting = getStorage(setting.localStorageKey);\n\n  setStorage(setting.localStorageKey, {\n    ...previousSetting,\n    [budgetId]: value\n  });\n};\n","export const groupBy = func => arr => {\n  const grouped = {};\n  arr.forEach(obj => {\n    const key = func(obj);\n    if (!grouped[key]) {\n      grouped[key] = [];\n    }\n    grouped[key].push(obj);\n  });\n  return grouped;\n};\n\nexport const groupByProp = key => arr => {\n  const grouped = {};\n  arr.forEach(obj => {\n    if (!grouped[obj[key]]) {\n      grouped[obj[key]] = [];\n    }\n    grouped[obj[key]].push(obj);\n  });\n  return grouped;\n};\n\nexport const keyByProp = key => arr =>\n  arr.reduce((acc, curr) => ({ ...acc, [curr[key]]: curr }), {});\n\nexport const sumBy = func => arr =>\n  arr.reduce((acc, curr) => acc + func(curr), 0);\n\nexport const sumByProp = key => arr =>\n  arr.reduce((acc, curr) => acc + curr[key], 0);\n\nexport const simpleMemoize = func => {\n  let lastArgs = null;\n  let lastResult = null;\n  return (...args) => {\n    if (\n      lastArgs !== null &&\n      lastArgs.length === args.length &&\n      args.every((value, index) => value === lastArgs[index])\n    ) {\n      return lastResult;\n    }\n    lastArgs = args;\n    lastResult = func(...args);\n    return lastResult;\n  };\n};\n\nexport const notAny = predicates => arg =>\n  predicates.every(predicate => !predicate(arg));\n\nexport const upsertBy = (arr, key, obj, updater = (prev, curr) => curr) => {\n  let exists = false;\n  const newArr = arr.map(item => {\n    if (item[key] === obj[key]) {\n      exists = true;\n      return updater(item, obj);\n    }\n    return item;\n  });\n  return exists ? newArr : newArr.concat(obj);\n};\n","import { utils } from \"ynab\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport flatMap from \"lodash/fp/flatMap\";\nimport dropWhile from \"lodash/fp/dropWhile\";\nimport matchesProperty from \"lodash/fp/matchesProperty\";\nimport omit from \"lodash/fp/omit\";\nimport reverse from \"lodash/fp/reverse\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport uniq from \"lodash/fp/uniq\";\nimport { upsertBy, keyByProp } from \"./dataUtils\";\n\nconst formatCurrency = utils.convertMilliUnitsToCurrencyAmount;\n\nconst GROUPS_TO_HIDE = [\"Internal Master Category\", \"Credit Card Payments\"];\n\nconst MAX_MONTHS_TO_SHOW = 24;\n\nexport const sanitizeBudget = budget => {\n  const transactionIdsFromSub = uniq(\n    budget.subtransactions.map(transaction => transaction.transaction_id)\n  );\n  const categoryGroups = budget.category_groups.filter(\n    group => !GROUPS_TO_HIDE.includes(group.name)\n  );\n  const categories = budget.categories\n    .filter(category => !category.deleted)\n    .map(category => ({\n      ...category,\n      activity: formatCurrency(category.activity),\n      balance: formatCurrency(category.balance),\n      budgeted: formatCurrency(category.budgeted)\n    }));\n  const categoriesById = keyByProp(\"id\")(categories);\n  const earliestDate = moment()\n    .subtract(MAX_MONTHS_TO_SHOW - 1, \"months\")\n    .format(\"YYYY-MM-01\");\n  const currencyFormat = {\n    symbol: budget.currency_format.currency_symbol\n  };\n\n  return {\n    ...omit([\"category_groups\", \"currency_format\"])(budget),\n    accountsById: keyByProp(\"id\")(budget.accounts),\n    categoryGroups,\n    categoryGroupsById: keyByProp(\"id\")(categoryGroups),\n    categories,\n    categoriesById,\n    currencyFormat,\n    payeesById: keyByProp(\"id\")(budget.payees),\n    months: sortBy(\"month\")(budget.months),\n    transactions: compose([\n      transactions =>\n        transactions.map(transaction => ({\n          ...transaction,\n          amount: formatCurrency(transaction.amount)\n        })),\n      // Not sure how this would happen, but seeing it in production\n      transactions =>\n        transactions.filter(\n          transaction =>\n            !transaction.category_id ||\n            !!categoriesById[transaction.category_id]\n        ),\n      flatMap(\n        transaction =>\n          transactionIdsFromSub.includes(transaction.id)\n            ? compose([\n                subs =>\n                  subs.map(sub =>\n                    omit(\"transaction_id\")({ ...transaction, ...sub })\n                  ),\n                subs =>\n                  subs.filter(matchesProperty(\"transaction_id\", transaction.id))\n              ])(budget.subtransactions)\n            : transaction\n      ),\n      reverse,\n      dropWhile(transaction => transaction.date < earliestDate),\n      sortBy(\"date\"),\n      transactions =>\n        transactions.filter(transaction => transaction.amount !== 0)\n    ])(budget.transactions)\n  };\n};\n\nconst applyDeltas = (arr, deltas, key = \"id\", updater) =>\n  deltas.reduce((acc, curr) => upsertBy(acc, key, curr, updater), arr);\n\nconst arraysToUpdate = [\n  \"accounts\",\n  \"categories\",\n  \"category_groups\",\n  \"payee_locations\",\n  \"payees\",\n  \"scheduled_subtransactions\",\n  \"scheduled_transactions\",\n  \"subtransactions\",\n  \"transactions\"\n];\n\nexport const mergeBudgets = (budget, deltas) => ({\n  ...budget,\n  ...deltas,\n  ...arraysToUpdate.reduce(\n    (acc, curr) => ({\n      ...acc,\n      [curr]: applyDeltas(budget[curr], deltas[curr])\n    }),\n    {}\n  ),\n  months: applyDeltas(budget.months, deltas.months, \"month\", (prev, curr) => ({\n    ...prev,\n    ...curr,\n    categories: applyDeltas(prev.categories, curr.categories)\n  }))\n});\n","import get from \"lodash/fp/get\";\nimport { getStorage, setStorage } from \"./localstorageUtils\";\n\nconst BUDGET_DETAILS_STORAGE_KEY = \"ynab_budget_details\";\n\nlet cachedDetails = null;\n\nconst getAllBudgetDetails = () => {\n  if (cachedDetails) {\n    return cachedDetails;\n  }\n  cachedDetails = getStorage(BUDGET_DETAILS_STORAGE_KEY);\n  return cachedDetails;\n};\n\nexport const getBudgetDetails = id => get(id)(getAllBudgetDetails());\n\nexport const setBudgetDetails = ({ id, budget, server_knowledge }) => {\n  const details = getAllBudgetDetails();\n  const newDetails = {\n    ...details,\n    [id]: { budget, server_knowledge }\n  };\n  setStorage(BUDGET_DETAILS_STORAGE_KEY, newDetails);\n  cachedDetails = newDetails;\n};\n","import * as ynab from \"ynab\";\nimport moment from \"moment\";\nimport get from \"lodash/fp/get\";\nimport matches from \"lodash/fp/matches\";\nimport { getStorage, setStorage } from \"./localstorageUtils\";\nimport { setSetting, getSetting } from \"./uiRepo\";\nimport { sanitizeBudget, mergeBudgets } from \"./repoUtils\";\nimport { getBudgetDetails, setBudgetDetails } from \"./localBudgetCache\";\nimport { clientId, redirectUri } from \"./ynabConfig\";\n\nconst TOKEN_STORAGE_KEY = \"ynab_access_token\";\nconst BUDGETS_STORAGE_KEY = \"ynab_budgets\";\nconst LAST_LOCATION_KEY = \"budget-reports-last-location\";\n\nconst TIME_LIMIT_FOR_FULL_REFRESH = 8 * 1000;\n\nexport const AUTHORIZE_URL =\n  \"https://api.youneedabudget.com/oauth/authorize?client_id=\" +\n  clientId +\n  \"&redirect_uri=\" +\n  redirectUri +\n  \"&response_type=token\";\n\nexport const getAuthorizeToken = () => {\n  // check for hash route\n  if (window.location.hash[1] === \"/\") {\n    return localStorage.getItem(TOKEN_STORAGE_KEY);\n  }\n\n  const search = window.location.hash\n    .substring(1)\n    .replace(/&/g, '\",\"')\n    .replace(/=/g, '\":\"');\n\n  if (!search) {\n    return localStorage.getItem(TOKEN_STORAGE_KEY);\n  }\n\n  const token = get(\"access_token\")(\n    JSON.parse(\n      '{\"' + search + '\"}',\n      (key, value) => (key === \"\" ? value : decodeURIComponent(value))\n    )\n  );\n  localStorage.setItem(TOKEN_STORAGE_KEY, token);\n  window.location.hash = localStorage.getItem(LAST_LOCATION_KEY) || \"\";\n  localStorage.removeItem(LAST_LOCATION_KEY);\n\n  return token;\n};\n\nlet api = null;\n\nexport const initializeYnabApi = token => {\n  api = new ynab.api(token);\n};\n\nexport const getBudgets = () =>\n  api.budgets\n    .getBudgets()\n    .then(({ data }) => {\n      setStorage(BUDGETS_STORAGE_KEY, data);\n      return data;\n    })\n    .catch(e => {\n      if (\n        matches({\n          id: \"401\",\n          name: \"unauthorized\"\n        })(e.error) ||\n        e.message === \"Failed to fetch\"\n      ) {\n        return getStorage(BUDGETS_STORAGE_KEY) || { budgets: [] };\n      }\n\n      throw e;\n    });\n\nconst getBudget = id =>\n  api.budgets\n    .getBudgetById(id)\n    .then(({ data }) => {\n      const { budget, server_knowledge } = data;\n\n      setBudgetDetails({ id, budget, server_knowledge });\n      setSetting(\"lastUpdated\", id, moment().valueOf());\n\n      return { budget: sanitizeBudget(budget), authorized: true };\n    })\n    .catch(e => {\n      if (\n        matches({ id: \"401\", name: \"unauthorized\" })(e.error) ||\n        e.message === \"Failed to fetch\"\n      ) {\n        return {\n          budget: { categories: [], transactions: [], payees: [] },\n          authorized: false\n        };\n      }\n\n      throw e;\n    });\n\nexport const getUpdatedBudget = id => {\n  const budgetDetails = getBudgetDetails(id);\n\n  if (!budgetDetails) {\n    return getBudget(id);\n  }\n\n  if (\n    moment().valueOf() - getSetting(\"lastUpdated\", id) <\n    TIME_LIMIT_FOR_FULL_REFRESH\n  ) {\n    return getBudget(id);\n  }\n\n  return api.budgets\n    .getBudgetById(id, budgetDetails.server_knowledge)\n    .then(({ data }) => {\n      const budget = mergeBudgets(budgetDetails.budget, data.budget);\n\n      setBudgetDetails({ id, budget, server_knowledge: data.server_knowledge });\n      setSetting(\"lastUpdated\", id, moment().valueOf());\n\n      return { budget: sanitizeBudget(budget), authorized: true };\n    })\n    .catch(e => {\n      if (\n        matches({ id: \"401\", name: \"unauthorized\" })(e.error) ||\n        e.message === \"Failed to fetch\"\n      ) {\n        return {\n          budget: sanitizeBudget(budgetDetails.budget),\n          authorized: false\n        };\n      }\n\n      throw e;\n    });\n};\n\nexport const setLastLocation = () => {\n  localStorage.setItem(LAST_LOCATION_KEY, window.location.hash);\n};\n","import styled from \"styled-components\";\n\nexport const PageTitle = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: #222;\n`;\n\nexport const LargeNumber = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  color: #222;\n`;\n\nexport const StrongText = styled.div`\n  font-size: 14px;\n  line-height: 22px;\n  font-weight: 500;\n  color: #222;\n`;\n\nexport const SecondaryText = styled.div`\n  font-size: 13px;\n  line-height: 21px;\n  font-weight: 400;\n  color: #666;\n`;\n\nexport const MinorText = styled.div`\n  font-size: 11px;\n  line-height: 16px;\n  font-weight: 400;\n  color: #999;\n`;\n","import React from \"react\";\nimport { StrongText, SecondaryText } from \"./typeComponents\";\n\nconst Loading = () => (\n  <div\n    style={{\n      height: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }}\n  >\n    <StrongText>Loading&hellip;</StrongText>\n    <SecondaryText>beep, beep, boop</SecondaryText>\n  </div>\n);\n\nLoading.propTypes = {};\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loading from \"./Loading\";\n\nclass EnsureBudgetLoaded extends Component {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    budgetLoaded: PropTypes.bool.isRequired,\n    children: PropTypes.node.isRequired,\n    onRequestBudget: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    const { budgetId, budgetLoaded, onRequestBudget } = this.props;\n\n    if (!budgetLoaded) {\n      onRequestBudget(budgetId);\n    }\n  }\n\n  render() {\n    if (!this.props.budgetLoaded) {\n      return <Loading />\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default EnsureBudgetLoaded;\n","import tinyColor from \"tinycolor2\";\n\nexport const primaryColor = \"#4399ff\";\nexport const positiveColor = \"#2cbc2f\";\nexport const plotBandColor = \"#f2f2f2\";\nexport const negativeColor = \"red\";\nexport const selectedPlotBandColor = tinyColor(primaryColor)\n  .lighten(32)\n  .desaturate()\n  .toHexString();\nexport const lighterPrimaryColor = tinyColor(primaryColor)\n  .lighten(5)\n  .desaturate()\n  .toHexString();\nexport const lightPrimaryColor = tinyColor(primaryColor)\n  .lighten(25)\n  .desaturate()\n  .toHexString();\nexport const negativeChartColor = tinyColor(negativeColor)\n  .lighten(30)\n  .desaturate(60)\n  .toHexString();\n\nexport const iconWidth = 60;\n","import styled from \"styled-components\";\nimport { SecondaryText } from \"./typeComponents\";\nimport { primaryColor } from \"../styleVariables\";\n\nconst Button = styled(SecondaryText)`\n  display: inline-block;\n  user-select: none;\n  border: 1px solid #ccc;\n  padding: 4px 12px;\n  border-radius: 2px;\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nexport const PrimaryButton = styled(Button)`\n  background-color: ${primaryColor};\n  border-color: ${primaryColor};\n  color: #fff;\n`;\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/fp/keys\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons/faArrowLeft\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons/faBars\";\nimport { faCaretDown } from \"@fortawesome/free-solid-svg-icons/faCaretDown\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons/faChevronRight\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons/faCog\";\nimport { faEllipsisV } from \"@fortawesome/free-solid-svg-icons/faEllipsisV\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons/faEye\";\nimport { faEyeSlash } from \"@fortawesome/free-solid-svg-icons/faEyeSlash\";\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons/faPencilAlt\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons/faTimes\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nlibrary.add(\n  faArrowLeft,\n  faBars,\n  faCaretDown,\n  faChevronRight,\n  faCog,\n  faEllipsisV,\n  faEye,\n  faEyeSlash,\n  faPencilAlt,\n  faTimes\n);\n\nconst ICONS = {\n  \"arrow-left\": faArrowLeft,\n  bars: faBars,\n  \"caret-down\": faCaretDown,\n  \"chevron-right\": faChevronRight,\n  cog: faCog,\n  pencil: faPencilAlt,\n  \"ellipsis-v\": faEllipsisV,\n  eye: faEye,\n  \"eye-slash\": faEyeSlash,\n  times: faTimes\n};\n\nconst PRESET_STYLES = {\n  faded: {\n    fontWeight: 400,\n    color: \"#aaa\",\n    fontSize: 10\n  }\n};\n\nconst Icon = ({ icon, style, faded, ...other }) => (\n  <FontAwesomeIcon\n    {...other}\n    icon={ICONS[icon]}\n    style={{ ...style, ...(faded && PRESET_STYLES.faded) }}\n  />\n);\n\nIcon.propTypes = {\n  icon: PropTypes.oneOf(keys(ICONS)).isRequired,\n  faded: PropTypes.bool\n};\n\nexport default Icon;\n","import compose from \"lodash/fp/compose\";\nimport pick from \"lodash/fp/pick\";\nimport mapRaw from \"lodash/fp/map\";\nimport get from \"lodash/fp/get\";\nimport { groupByProp, simpleMemoize, sumByProp } from \"./dataUtils\";\n\nconst map = mapRaw.convert({ cap: false });\n\nexport const isStartingBalanceOrReconciliation = simpleMemoize(budget => {\n  const startingBalancePayeeId = get(\"id\")(\n    budget.payees.find(payee => payee.name === \"Starting Balance\")\n  );\n  const reconciliationPayeeId = get(\"id\")(\n    budget.payees.find(\n      payee => payee.name === \"Reconciliation Balance Adjustment\"\n    )\n  );\n\n  return transaction =>\n    transaction.payee_id === startingBalancePayeeId ||\n    transaction.payee_id === reconciliationPayeeId;\n});\n\nexport const isIncome = simpleMemoize(budget => {\n  const toBeBudgetedId = get(\"id\")(\n    budget.categories.find(category => category.name === \"To be Budgeted\")\n  );\n  return transaction => transaction.category_id === toBeBudgetedId;\n});\n\nexport const isTransfer = (investmentAccounts = {}) => transaction =>\n  !transaction.category_id ||\n  !!investmentAccounts[transaction.transfer_account_id];\n\nexport const getTransactionMonth = transaction => transaction.date.slice(0, 7);\n\nexport const getFirstMonth = budget =>\n  getTransactionMonth(budget.transactions[budget.transactions.length - 1]);\n\nexport const getPayeeNodes = ({ payeesById, transactions }, divideBy = 1) =>\n  compose([\n    map((transactions, payeeId) => ({\n      ...(payeesById[payeeId]\n        ? pick([\"id\", \"name\"])(payeesById[payeeId])\n        : { id: \"no-payee\", name: \"(no payee)\" }),\n      amount: sumByProp(\"amount\")(transactions) / divideBy\n    })),\n    groupByProp(\"payee_id\")\n  ])(transactions);\n\nexport const sanitizeName = name => name.replace(/[^a-zA-Z0-9 ]/g, \"\").trim();\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { StrongText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\n\nconst Container = styled.div`\n  margin: 2px;\n  background-color: #fff;\n  border: 1px solid #e5e5e5;\n  border-radius: 2px;\n`;\n\nconst Header = styled(StrongText)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px 20px;\n  user-select: none;\n`;\n\nconst SettingsContainer = styled.div`\n  padding: 0 10px;\n  margin-right: -10px;\n  align-self: stretch;\n  display: flex;\n  align-items: center;\n`;\n\nconst Body = styled.div`\n  padding: 0 20px 15px;\n`;\n\nclass CollapsibleSection extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    title: PropTypes.string.isRequired,\n    actions: PropTypes.node,\n    hasSettings: PropTypes.bool,\n    noPadding: PropTypes.bool,\n    onClickSettings: PropTypes.func\n  };\n\n  state = { expanded: true };\n\n  handleClickTitle = () => {\n    this.setState(state => ({ ...state, expanded: !state.expanded }));\n  };\n\n  render() {\n    const {\n      actions,\n      children,\n      hasSettings,\n      noPadding,\n      title,\n      onClickSettings\n    } = this.props;\n\n    const { expanded } = this.state;\n\n    return (\n      <Container>\n        <Header>\n          <div\n            style={{ display: \"flex\", alignItems: \"center\" }}\n            onClick={this.handleClickTitle}\n          >\n            {title}\n            <Icon\n              icon=\"chevron-right\"\n              transform={{ rotate: expanded ? 90 : 0 }}\n              style={{ marginLeft: 10 }}\n              faded\n            />\n          </div>\n          {hasSettings &&\n            expanded && (\n              <SettingsContainer onClick={onClickSettings}>\n                <Icon icon=\"cog\" faded />\n              </SettingsContainer>\n            )}\n          {expanded && actions}\n        </Header>\n        <AnimateHeight isExpanded={expanded}>\n          <Body style={{ padding: noPadding && 0 }}>{children}</Body>\n        </AnimateHeight>\n      </Container>\n    );\n  }\n}\n\nexport default CollapsibleSection;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst CHART_DEFAULTS = {\n  chart: { height: 240, spacing: [0, 0, 0, 0] },\n  credits: { enabled: false },\n  legend: { enabled: false },\n  title: { text: \"\" },\n  subtitle: { text: \"\" },\n  tooltip: { enabled: false },\n  xAxis: { tickLength: 0 }\n};\n\nconst Chart = ({ options }) => (\n  <HighchartsReact\n    highcharts={Highcharts}\n    options={{\n      ...CHART_DEFAULTS,\n      ...options,\n      chart: { ...CHART_DEFAULTS.chart, ...options.chart },\n      xAxis: { ...CHART_DEFAULTS.xAxis, ...options.xAxis }\n    }}\n  />\n);\n\nChart.propTypes = {\n  options: PropTypes.object\n};\n\nexport default Chart;\n","import React from \"react\";\n\nconst CurrencyContext = React.createContext();\n\nexport default CurrencyContext;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { positiveColor } from \"../styleVariables\";\nimport CurrencyContext from \"./CurrencyContext\";\n\nexport const addCommas = nStr => {\n  nStr += \"\";\n\n  const x = nStr.split(\".\");\n  let x1 = x[0];\n  const x2 = x.length > 1 ? \".\" + x[1] : \"\";\n  const rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, \"$1,$2\");\n  }\n  return x1 + x2;\n};\n\nconst Amount = ({ amount, amountAfterDecimal, showCurrencySymbol, style }) => (\n  <CurrencyContext.Consumer>\n    {currencyFormat => (\n      <span style={{ color: amount > 0 && positiveColor, ...style }}>\n        {amount > 0 && \"+\"}\n        {showCurrencySymbol && currencyFormat.symbol}\n        {addCommas(Math.abs(amount).toFixed(amountAfterDecimal))}\n      </span>\n    )}\n  </CurrencyContext.Consumer>\n);\n\nAmount.propTypes = {\n  amount: PropTypes.number.isRequired,\n  amountAfterDecimal: PropTypes.number,\n  showCurrencySymbol: PropTypes.bool,\n  style: PropTypes.object\n};\n\nAmount.defaultProps = {\n  amountAfterDecimal: 2\n};\n\nexport default Amount;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport isNumber from \"lodash/fp/isNumber\";\nimport { MinorText, LargeNumber } from \"./typeComponents\";\nimport Amount from \"./Amount\";\n\nconst ChartNumbers = ({ numbers, alwaysRound }) => {\n  const smallNumbers = numbers.some(({ amount }) => Math.abs(amount) < 100);\n  return (\n    <div\n      style={{\n        textAlign: \"right\",\n        lineHeight: \"16px\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        flexDirection: \"row-reverse\",\n        marginBottom: 8\n      }}\n    >\n      {numbers.map(({ amount, label, isMoney = true, decimalsToRound }) => (\n        <div key={label} style={{ marginLeft: 20 }}>\n          <LargeNumber style={{ lineHeight: \"16px\" }}>\n            <Amount\n              amount={amount}\n              amountAfterDecimal={\n                isNumber(decimalsToRound)\n                  ? decimalsToRound\n                  : smallNumbers && !alwaysRound\n                    ? 2\n                    : 0\n              }\n              showCurrencySymbol={isMoney}\n            />\n          </LargeNumber>\n          <MinorText>{label}</MinorText>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nChartNumbers.propTypes = {\n  numbers: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      label: PropTypes.string.isRequired,\n      alwaysRound: PropTypes.bool,\n      decimalsToRound: PropTypes.number,\n      isMoney: PropTypes.bool\n    })\n  ).isRequired,\n  alwaysRound: PropTypes.bool\n};\n\nexport default ChartNumbers;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport tinyColor from \"tinycolor2\";\nimport compose from \"lodash/fp/compose\";\nimport isNumber from \"lodash/fp/isNumber\";\nimport padCharsStart from \"lodash/fp/padCharsStart\";\nimport range from \"lodash/fp/range\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport { groupByProp, sumByProp } from \"../dataUtils\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport { primaryColor, plotBandColor } from \"../styleVariables\";\nimport { MinorText } from \"./typeComponents\";\nimport Chart from \"./Chart\";\nimport ChartNumbers from \"./ChartNumbers\";\n\nconst DateLabels = styled.div`\n  border-top: 1px solid #ddd;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst getData = ({ month, transactionsByDate }) => {\n  const today = moment().format(\"YYYY-MM-DD\");\n  let cumulative = 0;\n  return range(-1, moment(month).daysInMonth()).map(numDays => {\n    const date =\n      numDays === -1\n        ? moment(month).add(-1, \"days\")\n        : `${month}-${padCharsStart(\"0\")(2)(numDays + 1)}`;\n\n    if (date > today) {\n      return null;\n    }\n\n    cumulative += -sumBy(\"amount\")(transactionsByDate[date] || []);\n\n    return cumulative;\n  });\n};\n\nclass SpendingChart extends PureComponent {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    currentMonth: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        date: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    total: PropTypes.number\n  };\n\n  render() {\n    const {\n      total,\n      transactions,\n      highlightFunction,\n      currentMonth,\n      monthsToCompare\n    } = this.props;\n\n    const highlightedTransactions = highlightFunction\n      ? transactions.filter(highlightFunction)\n      : [];\n    const highlightData = getData({\n      month: currentMonth,\n      transactionsByDate: groupByProp(\"date\")(highlightedTransactions)\n    });\n    const highlightSeries = {\n      type: \"areaspline\",\n      data: highlightData,\n      enableMouseTracking: false,\n      marker: { enabled: false },\n      animation: false,\n      color: primaryColor,\n      lineWidth: 0,\n      fillOpacity: 0.8\n    };\n    const daysInMonth = moment(currentMonth).daysInMonth();\n    const firstDate = moment(currentMonth).add(-1, \"days\");\n    const lastDate = moment(currentMonth).add(daysInMonth - 1, \"days\");\n\n    const transactionsByDate = groupByProp(\"date\")(transactions);\n    const data = getData({ month: currentMonth, transactionsByDate });\n    const lineData = range(0, daysInMonth + 1).map(\n      day => (day / daysInMonth) * total\n    );\n    const firstDayOfWeek = parseInt(firstDate.format(\"d\"), 10);\n    const plotBands = range(0, 6).map(num => ({\n      color: plotBandColor,\n      from: num * 7 - 1.5 - firstDayOfWeek,\n      to: num * 7 + 0.5 - firstDayOfWeek\n    }));\n\n    const comparisonSeries = range(monthsToCompare, 0).map(numMonths => ({\n      type: \"spline\",\n      data: getData({\n        month: moment(currentMonth)\n          .subtract(numMonths, \"months\")\n          .format(\"YYYY-MM\"),\n        transactionsByDate\n      }),\n      enableMouseTracking: false,\n      color:\n        \"#\" +\n        tinyColor\n          .mix(\n            primaryColor,\n            \"#f2f2f2\",\n            30 + ((numMonths - 1) * 70) / monthsToCompare\n          )\n          .toHex(),\n      lineWidth: 1,\n      marker: { enabled: false },\n      animation: false\n    }));\n\n    const spent = compose([\n      sumByProp(\"amount\"),\n      takeWhile(\n        transaction => getTransactionMonth(transaction) === currentMonth\n      )\n    ])(transactions);\n    const chartNumbers = [{ amount: spent, label: \"spent\" }];\n    if (isNumber(total)) {\n      chartNumbers.push({ amount: -(total + spent), label: \"available\" });\n    }\n\n    return (\n      <Fragment>\n        <ChartNumbers numbers={chartNumbers} />\n        <Chart\n          key={monthsToCompare}\n          options={{\n            chart: { spacing: [0, 0, 0, 0], height: 140, animation: false },\n            xAxis: {\n              labels: { enabled: false },\n              plotBands\n            },\n            yAxis: { visible: false, endOnTick: false, startOnTick: false },\n            series: [\n              {\n                type: \"line\",\n                color: \"#aaa\",\n                dashStyle: \"Dot\",\n                lineWidth: 1,\n                data: lineData,\n                enableMouseTracking: false,\n                marker: { enabled: false },\n                animation: false\n              },\n              ...comparisonSeries,\n              {\n                type: \"spline\",\n                data,\n                enableMouseTracking: false,\n                color: primaryColor,\n                marker: { enabled: false },\n                animation: false,\n                ...(highlightFunction && {\n                  type: \"areaspline\",\n                  fillOpacity: 0.2\n                })\n              },\n              highlightSeries\n            ]\n          }}\n        />\n        <DateLabels>\n          <MinorText>{firstDate.format(\"MMM D\")}</MinorText>\n          <MinorText>{lastDate.format(\"MMM D\")}</MinorText>\n        </DateLabels>\n      </Fragment>\n    );\n  }\n}\n\nexport default SpendingChart;\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { StrongText } from \"./typeComponents\";\nimport { PrimaryButton } from \"./Button\";\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  opacity: 0;\n  transition: opacity 0.2s ease-in-out;\n`;\n\nconst ModalContent = styled.div`\n  position: relative;\n  min-width: 200px;\n  padding: 15px 20px;\n  margin-left: 20px;\n  margin-right: 20px;\n  background-color: #fff;\n  border-radius: 2px;\n  transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out;\n`;\n\nconst ensureNextTick = callback =>\n  requestAnimationFrame(() => {\n    requestAnimationFrame(callback);\n  });\n\nclass Modal extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    width: PropTypes.number\n  };\n\n  constructor() {\n    super();\n    this.el = document.createElement(\"div\");\n    this.state = { animationState: \"left\" };\n  }\n\n  componentDidMount() {\n    document.body.appendChild(this.el);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.open && this.props.open) {\n      ensureNextTick(() => {\n        this.setState({ animationState: \"entering\" });\n      });\n    }\n    if (prevProps.open && !this.props.open) {\n      ensureNextTick(() => {\n        this.setState({ animationState: \"leaving\" });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    document.body.removeChild(this.el);\n  }\n\n  handleTransitionEnd = () => {\n    const { animationState } = this.state;\n\n    if (animationState === \"entering\") {\n      this.setState({ animationState: \"entered\" });\n    } else if (animationState === \"leaving\") {\n      this.setState({ animationState: \"left\" });\n    }\n  };\n\n  render() {\n    const { open, children, title, onClose, width } = this.props;\n    const { animationState } = this.state;\n\n    if (!open && animationState === \"left\") {\n      return null;\n    }\n\n    const shouldShow = [\"entering\", \"entered\"].includes(animationState);\n\n    return createPortal(\n      <Container>\n        <Overlay\n          onClick={onClose}\n          style={{ opacity: shouldShow ? 1 : 0 }}\n          onTransitionEnd={this.handleTransitionEnd}\n        />\n        <ModalContent\n          style={{\n            opacity: shouldShow ? 1 : 0,\n            transform: `translate3d(0, ${shouldShow ? \"0\" : \"20px\"}, 0)`,\n            width\n          }}\n        >\n          {title && (\n            <StrongText style={{ marginBottom: 10 }}>{title}</StrongText>\n          )}\n          {children}\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              marginTop: 20\n            }}\n          >\n            <PrimaryButton onClick={onClose}>Done</PrimaryButton>\n          </div>\n        </ModalContent>\n      </Container>,\n      this.el\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"./Modal\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Button from \"./Button\";\n\nconst ChartSettingsModal = ({\n  open,\n  monthsToCompare,\n  onClose,\n  onDecrementMonths,\n  onIncrementMonths\n}) => (\n  <Modal open={open} title=\"Chart Settings\" onClose={onClose}>\n    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n      <div style={{ marginRight: 10 }}>\n        <Button onClick={onDecrementMonths}>-</Button>\n        <Button onClick={onIncrementMonths}>+</Button>\n      </div>\n      <SecondaryText>\n        Compare with the last {monthsToCompare} month\n        {monthsToCompare === 1 ? \"\" : \"s\"}\n      </SecondaryText>\n    </div>\n  </Modal>\n);\n\nChartSettingsModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  monthsToCompare: PropTypes.number.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onDecrementMonths: PropTypes.func.isRequired,\n  onIncrementMonths: PropTypes.func.isRequired\n};\n\nexport default ChartSettingsModal;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getSetting, setSetting } from \"../uiRepo\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport SpendingChart from \"./SpendingChart\";\nimport ChartSettingsModal from \"./ChartSettingsModal\";\n\nconst MAX_MONTHS = 12;\n\nclass DayByDaySection extends Component {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    currentMonth: PropTypes.string.isRequired,\n    transactions: PropTypes.array.isRequired,\n    highlightFunction: PropTypes.func,\n    title: PropTypes.string,\n    total: PropTypes.number\n  };\n\n  static defaultProps = { title: \"Day by Day\" };\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      modalOpen: false,\n      monthsToCompare: getSetting(\"spendingMonthsToCompare\", props.budgetId)\n    };\n  }\n\n  handleClickSettings = () => {\n    this.setState({ modalOpen: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ modalOpen: false });\n  };\n\n  handleDecrementMonths = () => {\n    this.setState(\n      state => ({\n        ...state,\n        monthsToCompare: Math.max(state.monthsToCompare - 1, 0)\n      }),\n      this.saveSetting\n    );\n  };\n\n  handleIncrementMonths = () => {\n    this.setState(\n      state => ({\n        ...state,\n        monthsToCompare: Math.min(state.monthsToCompare + 1, MAX_MONTHS)\n      }),\n      this.saveSetting\n    );\n  };\n\n  saveSetting = () => {\n    setSetting(\n      \"spendingMonthsToCompare\",\n      this.props.budgetId,\n      this.state.monthsToCompare\n    );\n  };\n\n  render() {\n    const { transactions, budgetId, currentMonth, highlightFunction, title, total } = this.props;\n    const { modalOpen, monthsToCompare } = this.state;\n\n    return (\n      <Fragment>\n        <CollapsibleSection\n          title={title}\n          hasSettings\n          onClickSettings={this.handleClickSettings}\n        >\n          <SpendingChart\n            budgetId={budgetId}\n            currentMonth={currentMonth}\n            highlightFunction={highlightFunction}\n            monthsToCompare={monthsToCompare}\n            total={total}\n            transactions={transactions}\n          />\n        </CollapsibleSection>\n        <ChartSettingsModal\n          open={modalOpen}\n          monthsToCompare={monthsToCompare}\n          onClose={this.handleCloseModal}\n          onDecrementMonths={this.handleDecrementMonths}\n          onIncrementMonths={this.handleIncrementMonths}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default DayByDaySection;\n","import styled from \"styled-components\";\n\nconst ListItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 0;\n  border-top: 1px dotted #ddd;\n  user-select: none;\n\n  &:first-child {\n    border-top: ${props => !props.isContinuing && 0};\n    padding-top: ${props => !props.isContinuing && 0};\n  }\n`;\n\nexport default ListItem;\n","import styled from \"styled-components\";\nimport { SecondaryText } from \"./typeComponents\";\n\nconst EmptyText = styled(SecondaryText)`\n  text-align: center;\n  margin: 10px;\n  opacity: 0.5;\n`;\n\nexport default EmptyText;\n","import React from \"react\";\nimport EmptyText from \"./EmptyText\";\n\nconst NoTransactions = () => <EmptyText>No transactions this month</EmptyText>;\n\nexport default NoTransactions;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\n\nclass LabelWithMinorText extends PureComponent {\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    bold: PropTypes.bool,\n    inLink: PropTypes.bool,\n    minorText: PropTypes.string,\n    to: PropTypes.string\n  };\n\n  render() {\n    const { label, minorText, inLink, to, bold } = this.props;\n    return (\n      <SecondaryText\n        style={{\n          fontWeight: bold && 700,\n          display: \"flex\",\n          alignItems: \"baseline\",\n          whiteSpace: \"pre\",\n          overflow: \"hidden\",\n          color: inLink && \"inherit\"\n        }}\n      >\n        {to ? (\n          <Link to={to}>{label}</Link>\n        ) : label}\n        {minorText && (\n          <MinorText\n            style={{\n              fontWeight: bold && 700,\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\"\n            }}\n          >\n            &nbsp;&ndash; {minorText}\n          </MinorText>\n        )}\n      </SecondaryText>\n    );\n  }\n}\n\nexport default LabelWithMinorText;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport LabelWithMinorText from \"./LabelWithMinorText\";\n\nclass LabelWithTransactionCount extends PureComponent {\n  static propTypes = {\n    count: PropTypes.number.isRequired,\n    label: PropTypes.string.isRequired,\n    inLink: PropTypes.bool,\n    selected: PropTypes.bool,\n    showCount: PropTypes.bool,\n    to: PropTypes.string\n  };\n\n  static defaultProps = { showCount: true };\n\n  render() {\n    const { label, count, inLink, selected, showCount, to } = this.props;\n    return (\n      <LabelWithMinorText\n        bold={selected}\n        label={label}\n        minorText={showCount && `${count} transaction${count === 1 ? \"\" : \"s\"}`}\n        inLink={inLink}\n        to={to}\n      />\n    );\n  }\n}\n\nexport default LabelWithTransactionCount;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\n\nclass AmountWithPercentage extends PureComponent {\n  static propTypes = {\n    amount: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    faded: PropTypes.bool,\n    selected: PropTypes.bool\n  };\n\n  render() {\n    const { amount, total, faded, selected } = this.props;\n    return (\n      <SecondaryText\n        style={{\n          display: \"flex\",\n          alignItems: \"baseline\",\n          opacity: faded ? 0.3 : 1,\n          fontWeight: selected && 700\n        }}\n      >\n        <Amount amount={amount} />\n        <MinorText\n          style={{ width: 44, textAlign: \"right\", fontWeight: selected && 700 }}\n        >\n          {total ? `${((amount / total) * 100).toFixed(1)}%` : `–`}\n        </MinorText>\n      </SecondaryText>\n    );\n  }\n}\n\nexport default AmountWithPercentage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { MinorText } from \"./typeComponents\";\n\nconst SeeAll = ({ count, pluralizedName, showAll, onToggle }) => (\n  <MinorText style={{ textAlign: \"center\", marginTop: 5 }} onClick={onToggle}>\n    {showAll ? \"see less\" : `see all ${count} ${pluralizedName}`}\n  </MinorText>\n);\n\nSeeAll.propTypes = {\n  count: PropTypes.number.isRequired,\n  pluralizedName: PropTypes.string.isRequired,\n  showAll: PropTypes.bool.isRequired,\n  onToggle: PropTypes.func.isRequired\n};\n\nexport default SeeAll;\n","import React, { Component, PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport get from \"lodash/fp/get\";\nimport map from \"lodash/fp/map\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { groupBy, groupByProp, sumByProp } from \"../dataUtils\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { Link } from \"react-router-dom\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport { SecondaryText } from \"./typeComponents\";\nimport ListItem from \"./ListItem\";\nimport NoTransactions from \"./NoTransactions\";\nimport LabelWithTransactionCount from \"./LabelWithTransactionCount\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\nimport SeeAll from \"./SeeAll\";\n\nconst mapWithKeys = map.convert({ cap: false });\nconst LIMIT = 5;\n\nconst keyToPluralizedName = {\n  category_group_id: \"category groups\",\n  category_id: \"categories\",\n  payee_id: \"payees\"\n};\n\nclass GenericEntitiesSection extends Component {\n  static propTypes = {\n    entitiesById: PropTypes.object.isRequired,\n    title: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    entityKey: PropTypes.oneOf([\n      \"category_id\",\n      \"category_group_id\",\n      \"payee_id\"\n    ]),\n    emptyName: PropTypes.string,\n    entityFunction: PropTypes.func,\n    linkFunction: PropTypes.func,\n    limitShowing: PropTypes.bool,\n    numMonths: PropTypes.number,\n    selectedEntityId: PropTypes.string,\n    showAverage: PropTypes.bool,\n    showAverageToggle: PropTypes.bool,\n    showTransactionCount: PropTypes.bool,\n    onClickEntity: PropTypes.func,\n    onToggleAverage: PropTypes.func\n  };\n\n  static defaultProps = { emptyName: \"(none)\" };\n\n  state = { showAll: false, allMounted: false };\n\n  handleToggleShowAll = () => {\n    const { allMounted, showAll } = this.state;\n    if (allMounted) {\n      this.setState({ showAll: !showAll });\n    } else {\n      this.setState({ allMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ showAll: true });\n      });\n    }\n  };\n\n  render() {\n    const {\n      emptyName,\n      entityKey,\n      entityFunction,\n      entitiesById,\n      linkFunction,\n      limitShowing: limitShowingProp,\n      numMonths,\n      selectedEntityId,\n      showAverage,\n      showAverageToggle,\n      showTransactionCount,\n      title,\n      transactions,\n      onClickEntity,\n      onToggleAverage\n    } = this.props;\n    const { allMounted, showAll } = this.state;\n    let total = 0;\n    const entities = compose([\n      sortBy(\"amount\"),\n      mapWithKeys((transactions, entityId) => {\n        const amount = sumByProp(\"amount\")(transactions);\n        total += amount;\n\n        return {\n          entityId,\n          transactions: transactions.length,\n          amount\n        };\n      }),\n      entityFunction ? groupBy(entityFunction) : groupByProp(entityKey)\n    ])(transactions);\n\n    const limitShowing = limitShowingProp && entities.length > LIMIT + 1;\n    const topEntities = entities.slice(0, LIMIT);\n    const otherEntities = entities.slice(LIMIT);\n\n    return (\n      <CollapsibleSection\n        title={title}\n        actions={\n          showAverageToggle && (\n            <SecondaryText onClick={onToggleAverage}>\n              {showAverage ? \"average\" : \"total\"}\n            </SecondaryText>\n          )\n        }\n      >\n        {entities.length === 0 && <NoTransactions />}\n        {(limitShowing ? topEntities : entities).map(\n          ({ entityId, transactions, amount }) => (\n            <GenericItemLink\n              key={entityId}\n              showTransactionCount={showTransactionCount}\n              to={\n                linkFunction && !!entitiesById[entityId]\n                  ? linkFunction(entityId)\n                  : null\n              }\n              transactions={transactions}\n              name={get(\"name\")(entitiesById[entityId]) || emptyName}\n              amount={showAverage ? amount / numMonths : amount}\n              selected={entityId === selectedEntityId}\n              total={showAverage ? total / numMonths : total}\n              id={entityId}\n              onClick={onClickEntity}\n            />\n          )\n        )}\n        {allMounted && (\n          <AnimateHeight isExpanded={showAll}>\n            <Fragment>\n              {otherEntities.map(({ entityId, transactions, amount }) => (\n                <GenericItemLink\n                  key={entityId}\n                  showTransactionCount={showTransactionCount}\n                  to={\n                    linkFunction && !!entitiesById[entityId]\n                      ? linkFunction(entityId)\n                      : null\n                  }\n                  transactions={transactions}\n                  name={get(\"name\")(entitiesById[entityId]) || emptyName}\n                  amount={showAverage ? amount / numMonths : amount}\n                  selected={entityId === selectedEntityId}\n                  total={total}\n                  id={entityId}\n                  onClick={onClickEntity}\n                  isContinuing\n                />\n              ))}\n            </Fragment>\n          </AnimateHeight>\n        )}\n        {!!otherEntities.length &&\n          limitShowing && (\n            <SeeAll\n              count={entities.length}\n              pluralizedName={keyToPluralizedName[entityKey]}\n              showAll={showAll}\n              onToggle={this.handleToggleShowAll}\n            />\n          )}\n      </CollapsibleSection>\n    );\n  }\n}\n\nconst MaybeLink = ({ to, children, ...other }) =>\n  to ? (\n    <Link {...other} to={to}>\n      {children}\n    </Link>\n  ) : (\n    <span {...other}>{children}</span>\n  );\n\nclass GenericItemLink extends PureComponent {\n  render() {\n    const {\n      showTransactionCount,\n      to,\n      transactions,\n      name,\n      amount,\n      total,\n      selected,\n      id,\n      onClick,\n      isContinuing\n    } = this.props;\n    return (\n      <ListItem\n        isContinuing={isContinuing}\n        onClick={onClick && (() => onClick(id))}\n      >\n        {showTransactionCount ? (\n          <LabelWithTransactionCount\n            count={transactions}\n            label={name}\n            selected={selected}\n            to={to}\n          />\n        ) : (\n          <MaybeLink\n            to={to}\n            onClick={\n              to &&\n              (evt => {\n                evt.stopPropagation();\n              })\n            }\n          >\n            <SecondaryText\n              style={{\n                whiteSpace: \"pre\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\",\n                color: \"inherit\",\n                fontWeight: selected && 700\n              }}\n            >\n              {name}\n            </SecondaryText>\n          </MaybeLink>\n        )}\n        <AmountWithPercentage\n          amount={amount}\n          total={total}\n          selected={selected}\n        />\n      </ListItem>\n    );\n  }\n}\n\nGenericItemLink.propTypes = {\n  amount: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  total: PropTypes.number.isRequired,\n  transactions: PropTypes.number.isRequired,\n  id: PropTypes.string,\n  isContinuing: PropTypes.bool,\n  selected: PropTypes.bool,\n  showTransactionCount: PropTypes.bool,\n  to: PropTypes.string\n};\n\nexport default GenericEntitiesSection;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport {\n  getTransactionMonth,\n  isTransfer,\n  isStartingBalanceOrReconciliation,\n  isIncome,\n  sanitizeName\n} from \"../budgetUtils\";\nimport { notAny } from \"../dataUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nclass CurrentMonth extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.object.isRequired,\n    currentMonth: PropTypes.string.isRequired,\n    investmentAccounts: PropTypes.object.isRequired\n  };\n\n  state = { selectedGroupId: null };\n\n  handleSelectGroup = groupId => {\n    this.setState(state => ({\n      ...state,\n      selectedGroupId: state.selectedGroupId === groupId ? null : groupId\n    }));\n  };\n\n  render() {\n    const { budget, currentMonth, investmentAccounts } = this.props;\n    const { selectedGroupId } = this.state;\n    const { categoryGroupsById, categoriesById, id: budgetId } = budget;\n\n    const selectedGroup =\n      selectedGroupId && categoryGroupsById[selectedGroupId];\n    const transactions = budget.transactions.filter(\n      notAny([\n        isIncome(budget),\n        isTransfer(investmentAccounts),\n        isStartingBalanceOrReconciliation(budget)\n      ])\n    );\n    const transactionsThisMonth = takeWhile(\n      transaction => getTransactionMonth(transaction) === currentMonth\n    )(transactions);\n\n    return (\n      <Fragment>\n        <DayByDaySection\n          budgetId={budget.id}\n          currentMonth={currentMonth}\n          transactions={transactions}\n          highlightFunction={\n            selectedGroupId &&\n            (transaction =>\n              categoriesById[transaction.category_id].category_group_id ===\n              selectedGroupId)\n          }\n          title={\n            selectedGroup\n              ? `Day by Day: ${sanitizeName(selectedGroup.name)}`\n              : \"Day by Day\"\n          }\n        />\n        <GenericEntitiesSection\n          entitiesById={categoryGroupsById}\n          entityFunction={transaction =>\n            categoriesById[transaction.category_id].category_group_id\n          }\n          linkFunction={groupId =>\n            makeLink(pages.currentMonthGroup.path, {\n              budgetId,\n              categoryGroupId: groupId\n            })\n          }\n          selectedEntityId={selectedGroupId}\n          title=\"Category Groups\"\n          transactions={transactionsThisMonth}\n          showTransactionCount\n          onClickEntity={this.handleSelectGroup}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default CurrentMonth;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport get from \"lodash/fp/get\";\nimport { SecondaryText, MinorText } from \"./typeComponents\";\nimport ListItem from \"./ListItem\";\nimport Amount from \"./Amount\";\nimport LabelWithMinorText from \"./LabelWithMinorText\";\n\nclass Transaction extends PureComponent {\n  static propTypes = {\n    amount: PropTypes.number.isRequired,\n    date: PropTypes.string.isRequired,\n    category: PropTypes.shape({\n      name: PropTypes.string.isRequired\n    }),\n    isContinuing: PropTypes.bool,\n    memo: PropTypes.string,\n    payee: PropTypes.shape({\n      name: PropTypes.string.isRequired\n    })\n  };\n\n  render() {\n    const { category, payee, memo, date, amount, isContinuing } = this.props;\n\n    return (\n      <ListItem isContinuing={isContinuing}>\n        <div style={{ overflow: \"hidden\" }}>\n          <LabelWithMinorText\n            label={get(\"name\")(payee) || \"(no payee)\"}\n            minorText={\n              (get(\"name\")(category) || \"\") + (memo ? ` (${memo})` : \"\")\n            }\n          />\n          <MinorText>{moment(date).format(\"dddd, MMM D\")}</MinorText>\n        </div>\n        <SecondaryText>\n          <Amount amount={amount} />\n        </SecondaryText>\n      </ListItem>\n    );\n  }\n}\n\nexport default Transaction;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Transaction from \"./Transaction\";\nimport NoTransactions from \"./NoTransactions\";\n\nconst TransactionsSection = ({\n  transactions,\n  title,\n  categoriesById,\n  payeesById\n}) => (\n  <CollapsibleSection title={title}>\n    {transactions.length ? (\n      transactions.map(\n        ({\n          id,\n          category_id: categoryId,\n          payee_id: payeeId,\n          date,\n          memo,\n          amount\n        }) => (\n          <Transaction\n            key={id}\n            amount={amount}\n            category={categoriesById[categoryId]}\n            date={date}\n            memo={memo}\n            payee={payeesById[payeeId]}\n          />\n        )\n      )\n    ) : (\n      <NoTransactions />\n    )}\n  </CollapsibleSection>\n);\n\nTransactionsSection.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      category_id: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      payee_id: PropTypes.string\n    })\n  ).isRequired,\n  title: PropTypes.string\n};\n\nTransactionsSection.defaultProps = { title: \"Transactions\" };\n\nexport default TransactionsSection;\n","import React, { PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport { sumByProp } from \"../dataUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport TransactionsSection from \"./TransactionsSection\";\n\nclass CurrentMonthGroup extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      categories: PropTypes.array.isRequired,\n      id: PropTypes.string.isRequired,\n      payeesById: PropTypes.object.isRequired,\n      transactions: PropTypes.array.isRequired\n    }).isRequired,\n    categoryGroupId: PropTypes.string.isRequired,\n    currentMonth: PropTypes.string.isRequired\n  };\n\n  state = { selectedCategoryId: null };\n\n  handleSelectCategory = categoryId => {\n    this.setState(state => ({\n      ...state,\n      selectedCategoryId:\n        state.selectedCategoryId === categoryId ? null : categoryId\n    }));\n  };\n\n  render() {\n    const { budget, categoryGroupId, currentMonth } = this.props;\n    const { selectedCategoryId } = this.state;\n    const {\n      id: budgetId,\n      payeesById,\n      categories: allCategories,\n      categoriesById,\n      transactions: allTransactions\n    } = budget;\n\n    const selectedCategory =\n      selectedCategoryId && categoriesById[selectedCategoryId];\n    const categories = allCategories.filter(\n      category => category.category_group_id === categoryGroupId\n    );\n    const categoryIds = categories.map(category => category.id);\n    const transactionsInGroup = allTransactions.filter(transaction =>\n      categoryIds.includes(transaction.category_id)\n    );\n    const transactionsInGroupForMonth = transactionsInGroup.filter(\n      transaction => getTransactionMonth(transaction) === currentMonth\n    );\n    const highlightedTransactions =\n      selectedCategoryId &&\n      transactionsInGroupForMonth.filter(\n        transaction => transaction.category_id === selectedCategoryId\n      );\n\n    const spent = -sumByProp(\"activity\")(categories);\n    const available = sumByProp(\"balance\")(categories);\n\n    return (\n      <Fragment>\n        <DayByDaySection\n          budgetId={budgetId}\n          currentMonth={currentMonth}\n          highlightFunction={\n            selectedCategoryId &&\n            (transaction => transaction.category_id === selectedCategoryId)\n          }\n          title={\n            selectedCategory\n              ? `Day by Day: ${sanitizeName(selectedCategory.name)}`\n              : \"Day by Day\"\n          }\n          transactions={transactionsInGroup}\n          total={spent + available}\n        />\n        <GenericEntitiesSection\n          entityKey=\"category_id\"\n          entitiesById={categoriesById}\n          linkFunction={categoryId =>\n            makeLink(pages.currentMonthCategory.path, {\n              budgetId,\n              categoryGroupId,\n              categoryId\n            })\n          }\n          selectedEntityId={selectedCategoryId}\n          title=\"Categories\"\n          transactions={transactionsInGroupForMonth}\n          showTransactionCount\n          onClickEntity={this.handleSelectCategory}\n        />\n        <TransactionsSection\n          categoriesById={categoriesById}\n          payeesById={payeesById}\n          transactions={highlightedTransactions || transactionsInGroupForMonth}\n          title={\n            selectedCategory\n              ? `Transactions: ${sanitizeName(selectedCategory.name)}`\n              : \"Transactions\"\n          }\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default CurrentMonthGroup;\n","import React, { PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport DayByDaySection from \"./DayByDaySection\";\nimport TransactionsSection from \"./TransactionsSection\";\n\nclass CurrentMonthCategory extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      categories: PropTypes.array.isRequired,\n      id: PropTypes.string.isRequired,\n      payeesById: PropTypes.object.isRequired,\n      transactions: PropTypes.array.isRequired\n    }).isRequired,\n    categoryGroupId: PropTypes.string.isRequired,\n    categoryId: PropTypes.string.isRequired,\n    currentMonth: PropTypes.string.isRequired\n  };\n\n  render() {\n    const { budget, currentMonth, categoryId } = this.props;\n    const {\n      id: budgetId,\n      payeesById,\n      categoriesById,\n      transactions: allTransactions\n    } = budget;\n\n    const category = categoriesById[categoryId];\n    const transactionsInCategory = allTransactions.filter(\n      transaction => transaction.category_id === categoryId\n    );\n    const transactionsInCategoryForMonth = transactionsInCategory.filter(\n      transaction => getTransactionMonth(transaction) === currentMonth\n    );\n\n    const spent = -category.activity;\n    const available = category.balance;\n\n    return (\n      <Fragment>\n        <DayByDaySection\n          key={category ? category.name : \"day-by-day\"}\n          budgetId={budgetId}\n          currentMonth={currentMonth}\n          title=\"Day by Day\"\n          transactions={transactionsInCategory}\n          total={spent + available}\n        />\n        <TransactionsSection\n          categoriesById={categoriesById}\n          payeesById={payeesById}\n          transactions={transactionsInCategoryForMonth}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default CurrentMonthCategory;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport findIndex from \"lodash/fp/findIndex\";\nimport { selectedPlotBandColor } from \"../styleVariables\";\nimport Chart from \"./Chart\";\n\nconst MonthlyChart = ({\n  average,\n  data,\n  height,\n  series,\n  selectedMonth,\n  stacked,\n  onSelectMonth\n}) => {\n  const yearLines = [];\n  const plotBands = [];\n  const categories = data.map(d => moment(d.month).format(\"MMM\"));\n  let highlights = null;\n\n  if (selectedMonth) {\n    highlights = { months: [selectedMonth], color: selectedPlotBandColor };\n  }\n\n  data.forEach(({ month }, index) => {\n    if (moment(month).format(\"MMM\") === \"Jan\") {\n      yearLines.push({\n        color: \"#ccc\",\n        width: 1,\n        value: index - 0.5,\n        zIndex: 3\n      });\n    }\n  });\n\n  if (highlights) {\n    highlights.months.forEach(month => {\n      const index = findIndex(d => d.month === month)(data);\n      plotBands.push({\n        color: highlights.color,\n        from: index - 0.5,\n        to: index + 0.5\n      });\n    });\n  }\n\n  return (\n    <Chart\n      key={data.length}\n      options={{\n        chart: {\n          animation: false,\n          height,\n          type: \"column\",\n          events: {\n            click: event => {\n              onSelectMonth &&\n                onSelectMonth(data[Math.round(event.xAxis[0].value)].month);\n            }\n          }\n        },\n        xAxis: {\n          categories,\n          plotBands,\n          plotLines: yearLines\n        },\n        yAxis: {\n          endOnTick: false,\n          startOnTick: false,\n          gridLineColor: \"transparent\",\n          labels: { enabled: false },\n          title: { text: null },\n          plotLines: average && [\n            {\n              color: \"#aaa\",\n              dashStyle: \"Dot\",\n              width: 1,\n              value: -average,\n              zIndex: 2\n            }\n          ]\n        },\n        plotOptions: {\n          series: { animation: false, stacking: stacked ? \"normal\" : null }\n        },\n        series: series.map(s => {\n          if (s.type === \"line\") {\n            return {\n              color: s.color,\n              data: data.map(s.valueFunction),\n              enableMouseTracking: false,\n              type: \"line\"\n            };\n          }\n\n          return {\n            borderWidth: 0,\n            color: s.color,\n            data: data.map(s.valueFunction),\n            enableMouseTracking: false,\n            states: { hover: { brightness: 0 } }\n          };\n        })\n      }}\n    />\n  );\n};\n\nMonthlyChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      month: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  series: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string.isRequired,\n      valueFunction: PropTypes.func.isRequired,\n      type: PropTypes.oneOf([\"line\"])\n    })\n  ).isRequired,\n  average: PropTypes.number,\n  height: PropTypes.number,\n  selectedMonth: PropTypes.string,\n  stacked: PropTypes.bool,\n  onSelectMonth: PropTypes.func\n};\n\nMonthlyChart.defaultProps = { height: 140, stacked: true };\n\nexport default MonthlyChart;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { primaryColor } from \"../styleVariables\";\n\nconst PADDING = 2;\nconst WIDTH = 32;\nconst HEIGHT = 18;\n\nconst Track = styled.div`\n  box-sizing: border-box;\n  padding: ${PADDING}px;\n  display: inline-block;\n  width: ${WIDTH}px;\n  height: ${HEIGHT}px;\n  border-radius: ${HEIGHT / 2}px;\n  background-color: ${props => (props.on ? primaryColor : \"#ddd\")};\n  transition: background-color 0.15s ease-in-out;\n`;\n\nconst Handle = styled.div`\n  box-sizing: border-box;\n  height: ${HEIGHT - 2 * PADDING}px;\n  width: ${HEIGHT - 2 * PADDING}px;\n  border-radius: 50%;\n  background-color: #fff;\n  transform: translate3d(${props => (props.on ? WIDTH - HEIGHT : 0)}px, 0, 0);\n  transition: transform 0.15s ease-in-out;\n`;\n\nconst Toggle = ({ on, onClick }) => (\n  <Track on={on} onClick={onClick}>\n    <Handle on={on} />\n  </Track>\n);\n\nToggle.propTypes = {\n  on: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Toggle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Toggle from \"./Toggle\";\n\nconst Container = styled.div`\n  user-select: none;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px 0;\n`;\n\nconst Label = styled.div``;\n\nconst ToggleWithLabel = ({ label, name, checked, onChange }) => (\n  <Container\n    onClick={() => {\n      onChange({ target: { name, checked: !checked } });\n    }}\n  >\n    <Label>{label}</Label>\n    <Toggle\n      on={checked}\n      onClick={() => {\n        onChange({ target: { name, checked: !checked } });\n      }}\n    />\n  </Container>\n);\n\nToggleWithLabel.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default ToggleWithLabel;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"./Modal\";\nimport ToggleWithLabel from \"./ToggleWithLabel\";\nimport { MinorText } from \"./typeComponents\";\n\nconst MonthByMonthSettingsModal = ({\n  excludeFirstMonth,\n  excludeLastMonth,\n  open,\n  onClose,\n  onSetExclusion\n}) => (\n  <Modal open={open} onClose={onClose} title=\"Chart Settings\" width={240}>\n    <ToggleWithLabel\n      checked={excludeFirstMonth}\n      label=\"Exclude first month\"\n      name=\"excludeFirstMonth\"\n      onChange={() => {\n        onSetExclusion({ month: \"first\", exclude: !excludeFirstMonth });\n      }}\n    />\n    <ToggleWithLabel\n      checked={excludeLastMonth}\n      label=\"Exclude last month\"\n      name=\"excludeLastMonth\"\n      onChange={() => {\n        onSetExclusion({ month: \"last\", exclude: !excludeLastMonth });\n      }}\n    />\n    <MinorText style={{ marginTop: 5 }}>\n      Excluding incomplete months may lead to more representative averages\n    </MinorText>\n  </Modal>\n);\n\nMonthByMonthSettingsModal.propTypes = {\n  excludeFirstMonth: PropTypes.bool.isRequired,\n  excludeLastMonth: PropTypes.bool.isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSetExclusion: PropTypes.func.isRequired\n};\n\nexport default MonthByMonthSettingsModal;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport { groupBy, sumByProp } from \"../dataUtils\";\nimport { lightPrimaryColor, lighterPrimaryColor } from \"../styleVariables\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport MonthlyChart from \"./MonthlyChart\";\nimport MonthByMonthSettingsModal from \"./MonthByMonthSettingsModal\";\n\nclass MonthByMonthSection extends Component {\n  static propTypes = {\n    excludeFirstMonth: PropTypes.bool.isRequired,\n    excludeLastMonth: PropTypes.bool.isRequired,\n    months: PropTypes.arrayOf(PropTypes.string).isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onSelectMonth: PropTypes.func.isRequired,\n    onSetExclusion: PropTypes.func.isRequired,\n    highlightFunction: PropTypes.func,\n    selectedMonth: PropTypes.string,\n    title: PropTypes.string\n  };\n  static defaultProps = { title: \"Month by Month\" };\n\n  state = { settingsModalOpen: false };\n\n  handleClickSettings = () => {\n    this.setState({ settingsModalOpen: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ settingsModalOpen: false });\n  };\n\n  render() {\n    const {\n      excludeFirstMonth,\n      excludeLastMonth,\n      highlightFunction,\n      months,\n      selectedMonth,\n      title,\n      transactions,\n      onSelectMonth,\n      onSetExclusion\n    } = this.props;\n    const { settingsModalOpen } = this.state;\n\n    let total = 0;\n    let selectedMonthTotal = 0;\n\n    const transactionsByMonth = groupBy(getTransactionMonth)(transactions);\n    const data = months.map(month => {\n      const grouped = groupBy(highlightFunction || (() => false))(\n        transactionsByMonth[month] || []\n      );\n      const amount = sumByProp(\"amount\")(grouped.false || []);\n      const highlighted = sumByProp(\"amount\")(grouped.true || []);\n      total += highlightFunction ? highlighted : amount;\n      if (month === selectedMonth) {\n        selectedMonthTotal = highlightFunction ? highlighted : amount;\n      }\n\n      return { month, amount: -amount, highlighted: -highlighted };\n    });\n\n    const chartNumbers = selectedMonth\n      ? [\n          { amount: total / months.length, label: \"average\" },\n          {\n            amount: selectedMonthTotal,\n            label: moment(selectedMonth).format(\"MMM YYYY\")\n          }\n        ]\n      : [\n          { amount: total / months.length, label: \"average\" },\n          {\n            amount: total,\n            label: \"total\"\n          }\n        ];\n    const series = [\n      {\n        color: highlightFunction ? lightPrimaryColor : lighterPrimaryColor,\n        valueFunction: d => d.amount\n      }\n    ];\n\n    if (highlightFunction) {\n      series.push({\n        color: lighterPrimaryColor,\n        valueFunction: d => d.highlighted\n      });\n    }\n\n    return (\n      <CollapsibleSection\n        title={title}\n        hasSettings\n        onClickSettings={this.handleClickSettings}\n      >\n        <ChartNumbers numbers={chartNumbers} />\n        <MonthlyChart\n          data={data}\n          average={total / months.length}\n          series={series}\n          selectedMonth={selectedMonth}\n          onSelectMonth={onSelectMonth}\n        />\n        <MonthByMonthSettingsModal\n          excludeFirstMonth={excludeFirstMonth}\n          excludeLastMonth={excludeLastMonth}\n          open={settingsModalOpen}\n          onClose={this.handleCloseModal}\n          onSetExclusion={onSetExclusion}\n        />\n      </CollapsibleSection>\n    );\n  }\n}\n\nexport default MonthByMonthSection;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport { getSetting, setSetting } from \"../uiRepo\";\nimport pages, { makeLink } from \"../pages\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nclass Groups extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.object.isRequired,\n    excludeFirstMonth: PropTypes.bool.isRequired,\n    excludeLastMonth: PropTypes.bool.isRequired,\n    months: PropTypes.arrayOf(PropTypes.string).isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onSelectGroup: PropTypes.func.isRequired,\n    onSelectMonth: PropTypes.func.isRequired,\n    onSetExclusion: PropTypes.func.isRequired,\n    selectedGroupId: PropTypes.string,\n    selectedMonth: PropTypes.string\n  };\n\n  constructor(props) {\n    super();\n    this.state = {\n      showAverage: getSetting(\"trendsShowAverage\", props.budget.id)\n    };\n  }\n\n  handleToggleGroupAverage = () => {\n    this.setState(\n      state => ({ ...state, showAverage: !state.showAverage }),\n      () => {\n        setSetting(\n          \"trendsShowAverage\",\n          this.props.budget.id,\n          this.state.showAverage\n        );\n      }\n    );\n  };\n\n  render() {\n    const {\n      budget,\n      excludeFirstMonth,\n      excludeLastMonth,\n      months,\n      transactions,\n      selectedMonth,\n      selectedGroupId,\n      onSelectGroup,\n      onSelectMonth,\n      onSetExclusion\n    } = this.props;\n    const { showAverage } = this.state;\n    const { categoryGroupsById, categoriesById, id: budgetId } = budget;\n    const selectedGroup =\n      selectedGroupId && categoryGroupsById[selectedGroupId];\n\n    const transactionsForMonth =\n      selectedMonth &&\n      transactions.filter(\n        transaction => getTransactionMonth(transaction) === selectedMonth\n      );\n\n    return (\n      <Fragment>\n        <MonthByMonthSection\n          excludeFirstMonth={excludeFirstMonth}\n          excludeLastMonth={excludeLastMonth}\n          highlightFunction={\n            selectedGroupId &&\n            (transaction =>\n              categoriesById[transaction.category_id].category_group_id ===\n              selectedGroupId)\n          }\n          months={months}\n          selectedMonth={selectedMonth}\n          title={\n            selectedGroup\n              ? `Month by Month: ${sanitizeName(selectedGroup.name)}`\n              : \"Month by Month\"\n          }\n          transactions={transactions}\n          onSelectMonth={onSelectMonth}\n          onSetExclusion={onSetExclusion}\n        />\n        <GenericEntitiesSection\n          key={selectedMonth || \"all\"}\n          entityFunction={transaction =>\n            categoriesById[transaction.category_id].category_group_id\n          }\n          entityKey=\"category_group_id\"\n          entitiesById={categoryGroupsById}\n          linkFunction={categoryGroupId =>\n            makeLink(pages.group.path, { budgetId, categoryGroupId })\n          }\n          selectedEntityId={selectedGroupId}\n          title={\n            selectedMonth\n              ? `Category Groups: ${moment(selectedMonth).format(\"MMMM\")}`\n              : \"Category Groups\"\n          }\n          transactions={transactionsForMonth || transactions}\n          onClickEntity={onSelectGroup}\n          numMonths={months.length}\n          showAverageToggle={!selectedMonth}\n          showAverage={showAverage && !selectedMonth}\n          onToggleAverage={this.handleToggleGroupAverage}\n          limitShowing\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default Groups;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Transaction from \"./Transaction\";\nimport NoTransactions from \"./NoTransactions\";\nimport SeeAll from \"./SeeAll\";\n\nconst LIMIT = 3;\n\nclass TransactionsByMonthSection extends Component {\n  static propTypes = {\n    categoriesById: PropTypes.object.isRequired,\n    payeesById: PropTypes.object.isRequired,\n    selectedMonth: PropTypes.string.isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    limitShowing: PropTypes.bool,\n    selectedCategoryId: PropTypes.string,\n    selectedPayeeId: PropTypes.string\n  };\n\n  static defaultProps = { limitShowing: true };\n\n  state = { allMounted: false, showAll: false };\n\n  handleToggleShowAll = () => {\n    const { allMounted, showAll } = this.state;\n\n    if (allMounted) {\n      this.setState({ showAll: !showAll });\n    } else {\n      this.setState({ allMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ showAll: true });\n      });\n    }\n  };\n\n  render() {\n    const {\n      categoriesById,\n      payeesById,\n      selectedCategoryId,\n      selectedPayeeId,\n      selectedMonth,\n      transactions,\n      limitShowing: limitShowingProp\n    } = this.props;\n    const { allMounted, showAll } = this.state;\n\n    const selectedCategory =\n      selectedCategoryId && categoriesById[selectedCategoryId];\n    const selectedPayee = selectedPayeeId && payeesById[selectedPayeeId];\n    const month = moment(selectedMonth).format(\"MMMM\");\n    const transactionsForMonth = compose([\n      limitShowingProp\n        ? sortBy(\"amount\")\n        : transactions => transactions.reverse(),\n      transactions =>\n        transactions.filter(\n          transaction =>\n            getTransactionMonth(transaction) === selectedMonth &&\n            (!selectedCategoryId ||\n              transaction.category_id === selectedCategoryId) &&\n            (!selectedPayeeId || transaction.payee_id === selectedPayeeId)\n        )\n    ])(transactions);\n    const limitShowing =\n      limitShowingProp && transactionsForMonth.length > LIMIT + 2;\n    const topTransactions = limitShowing\n      ? transactionsForMonth.slice(0, LIMIT)\n      : transactionsForMonth;\n    const otherTransactions = limitShowing\n      ? transactionsForMonth.slice(LIMIT)\n      : [];\n\n    return (\n      <CollapsibleSection\n        title={\n          selectedPayee\n            ? `Transactions: ${month}, ${selectedPayee.name}`\n            : selectedCategory\n              ? `Transactions: ${month}, ${selectedCategory.name}`\n              : `Transactions: ${month}`\n        }\n      >\n        {topTransactions.length ? (\n          topTransactions.map(\n            ({\n              id,\n              date,\n              amount,\n              memo,\n              payee_id: payeeId,\n              category_id: categoryId\n            }) => (\n              <Transaction\n                key={id}\n                amount={amount}\n                category={categoriesById[categoryId]}\n                date={date}\n                memo={memo}\n                payee={payeesById[payeeId]}\n              />\n            )\n          )\n        ) : (\n          <NoTransactions />\n        )}\n        {allMounted && (\n          <AnimateHeight isExpanded={showAll}>\n            <Fragment>\n              {otherTransactions.map(\n                ({\n                  id,\n                  date,\n                  amount,\n                  payee_id: payeeId,\n                  category_id: categoryId\n                }) => (\n                  <Transaction\n                    key={id}\n                    amount={amount}\n                    category={categoriesById[categoryId]}\n                    date={date}\n                    payee={payeesById[payeeId]}\n                    isContinuing\n                  />\n                )\n              )}\n            </Fragment>\n          </AnimateHeight>\n        )}\n        {!!otherTransactions.length && (\n          <SeeAll\n            count={transactionsForMonth.length}\n            pluralizedName=\"transactions\"\n            showAll={showAll}\n            onToggle={this.handleToggleShowAll}\n          />\n        )}\n      </CollapsibleSection>\n    );\n  }\n}\n\nexport default TransactionsByMonthSection;\n","import React, { PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport compose from \"lodash/fp/compose\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { getSetting, setSetting } from \"../uiRepo\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nclass Group extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      transactions: PropTypes.arrayOf(\n        PropTypes.shape({\n          categoryId: PropTypes.string\n        })\n      ).isRequired,\n      payeesById: PropTypes.object.isRequired\n    }).isRequired,\n    categoryGroup: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    excludeFirstMonth: PropTypes.bool.isRequired,\n    excludeLastMonth: PropTypes.bool.isRequired,\n    months: PropTypes.arrayOf(PropTypes.string).isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onSelectCategory: PropTypes.func.isRequired,\n    onSelectMonth: PropTypes.func.isRequired,\n    onSetExclusion: PropTypes.func.isRequired,\n    selectedCategoryId: PropTypes.string,\n    selectedMonth: PropTypes.string\n  };\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      showAverage: getSetting(\"trendsShowAverage\", props.budget.id)\n    };\n  }\n\n  handleToggleAverage = () => {\n    this.setState(\n      state => ({ ...state, showAverage: !state.showAverage }),\n      () => {\n        setSetting(\n          \"trendsShowAverage\",\n          this.props.budget.id,\n          this.state.showAverage\n        );\n      }\n    );\n  };\n\n  render() {\n    const {\n      budget,\n      categoryGroup,\n      excludeFirstMonth,\n      excludeLastMonth,\n      months,\n      selectedMonth,\n      selectedCategoryId,\n      transactions,\n      onSelectMonth,\n      onSelectCategory,\n      onSetExclusion\n    } = this.props;\n    const { showAverage } = this.state;\n    const { categories, categoriesById, payeesById, id: budgetId } = budget;\n\n    const selectedCategory =\n      selectedCategoryId && categoriesById[selectedCategoryId];\n\n    const categoriesInGroup = categories.filter(\n      category => category.category_group_id === categoryGroup.id\n    );\n    const categoryIds = categoriesInGroup.map(category => category.id);\n    const transactionsInGroup = transactions.filter(transaction =>\n      categoryIds.includes(transaction.category_id)\n    );\n    const transactionsInSelectedMonth =\n      selectedMonth &&\n      compose([\n        sortBy(\"amount\"),\n        transactions =>\n          transactions.filter(\n            transaction => getTransactionMonth(transaction) === selectedMonth\n          )\n      ])(transactionsInGroup);\n\n    return (\n      <Fragment>\n        <MonthByMonthSection\n          excludeFirstMonth={excludeFirstMonth}\n          excludeLastMonth={excludeLastMonth}\n          months={months}\n          highlightFunction={\n            selectedCategoryId &&\n            (transaction => transaction.category_id === selectedCategoryId)\n          }\n          selectedMonth={selectedMonth}\n          title={\n            selectedCategory\n              ? `Month by Month: ${sanitizeName(selectedCategory.name)}`\n              : \"Month by Month\"\n          }\n          transactions={transactionsInGroup}\n          onSelectMonth={onSelectMonth}\n          onSetExclusion={onSetExclusion}\n        />\n        <GenericEntitiesSection\n          key={`categories-${selectedMonth || \"all\"}`}\n          entityKey=\"category_id\"\n          entitiesById={categoriesById}\n          linkFunction={categoryId =>\n            makeLink(pages.category.path, {\n              budgetId,\n              categoryGroupId: categoryGroup.id,\n              categoryId\n            })\n          }\n          title={\n            selectedMonth\n              ? `Categories: ${moment(selectedMonth).format(\"MMMM\")}`\n              : \"Categories\"\n          }\n          transactions={transactionsInSelectedMonth || transactionsInGroup}\n          selectedEntityId={selectedCategoryId}\n          onClickEntity={onSelectCategory}\n          showAverageToggle={!selectedMonth}\n          showAverage={showAverage && !selectedMonth}\n          numMonths={months.length}\n          onToggleAverage={this.handleToggleAverage}\n          limitShowing\n        />\n        {selectedMonth &&\n          transactionsInSelectedMonth.length > 0 && (\n            <TransactionsByMonthSection\n              key={`transactions-${selectedMonth ||\n                \"all\"}-${selectedCategoryId || \"all\"}`}\n              categoriesById={categoriesById}\n              payeesById={payeesById}\n              selectedMonth={selectedMonth}\n              selectedCategoryId={selectedCategoryId}\n              transactions={transactionsInSelectedMonth}\n            />\n          )}\n      </Fragment>\n    );\n  }\n}\n\nexport default Group;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getTransactionMonth, sanitizeName } from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\n\nclass Category extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      transactions: PropTypes.arrayOf(\n        PropTypes.shape({\n          payee_id: PropTypes.string\n        })\n      ).isRequired,\n      payeesById: PropTypes.object.isRequired\n    }).isRequired,\n    category: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    excludeFirstMonth: PropTypes.bool.isRequired,\n    excludeLastMonth: PropTypes.bool.isRequired,\n    months: PropTypes.arrayOf(PropTypes.string).isRequired,\n    transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onSelectMonth: PropTypes.func.isRequired,\n    onSelectPayee: PropTypes.func.isRequired,\n    onSetExclusion: PropTypes.func.isRequired,\n    selectedMonth: PropTypes.string,\n    selectedPayeeId: PropTypes.string\n  };\n\n  render() {\n    const {\n      category,\n      budget,\n      excludeFirstMonth,\n      excludeLastMonth,\n      months,\n      selectedMonth,\n      selectedPayeeId,\n      transactions,\n      onSelectMonth,\n      onSelectPayee,\n      onSetExclusion\n    } = this.props;\n    const { categoriesById, payeesById, id: budgetId } = budget;\n\n    const selectedPayee = selectedPayeeId && payeesById[selectedPayeeId];\n    const transactionsForCategory = transactions.filter(\n      transaction => transaction.category_id === category.id\n    );\n    const transactionsForMonth =\n      selectedMonth &&\n      transactionsForCategory.filter(\n        transaction => getTransactionMonth(transaction) === selectedMonth\n      );\n\n    return (\n      <Fragment>\n        <MonthByMonthSection\n          excludeFirstMonth={excludeFirstMonth}\n          excludeLastMonth={excludeLastMonth}\n          months={months}\n          onSetExclusion={onSetExclusion}\n          highlightFunction={\n            selectedPayeeId &&\n            (transaction => transaction.payee_id === selectedPayeeId)\n          }\n          selectedMonth={selectedMonth}\n          title={\n            selectedPayee\n              ? `Month by Month: ${sanitizeName(selectedPayee.name)}`\n              : \"Month by Month\"\n          }\n          transactions={transactionsForCategory}\n          onSelectMonth={onSelectMonth}\n        />\n        <GenericEntitiesSection\n          key={`payees-${selectedMonth || \"all\"}`}\n          emptyName=\"(no payee)\"\n          entitiesById={payeesById}\n          entityKey=\"payee_id\"\n          linkFunction={payeeId =>\n            makeLink(pages.categoryPayee.path, {\n              budgetId,\n              categoryGroupId: category.category_group_id,\n              categoryId: category.id,\n              payeeId\n            })\n          }\n          title={\n            selectedMonth\n              ? `Payees: ${moment(selectedMonth).format(\"MMMM\")}`\n              : \"Payees\"\n          }\n          transactions={transactionsForMonth || transactionsForCategory}\n          selectedEntityId={selectedPayeeId}\n          onClickEntity={onSelectPayee}\n          limitShowing\n        />\n        {selectedMonth &&\n          transactionsForMonth.length > 0 && (\n            <TransactionsByMonthSection\n              key={`transactions-${selectedMonth || \"all\"}-${selectedPayeeId ||\n                \"all\"}`}\n              categoriesById={categoriesById}\n              payeesById={payeesById}\n              transactions={transactionsForMonth}\n              selectedMonth={selectedMonth}\n              selectedPayeeId={selectedPayeeId}\n            />\n          )}\n      </Fragment>\n    );\n  }\n}\n\nexport default Category;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport TransactionsByMonthSection from \"./TransactionsByMonthSection\";\n\nclass Category extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      payeesById: PropTypes.object.isRequired\n    }).isRequired,\n    category: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    excludeFirstMonth: PropTypes.bool.isRequired,\n    excludeLastMonth: PropTypes.bool.isRequired,\n    months: PropTypes.arrayOf(PropTypes.string).isRequired,\n    payee: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired,\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        payee_id: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    onSelectMonth: PropTypes.func.isRequired,\n    onSetExclusion: PropTypes.func.isRequired,\n    selectedMonth: PropTypes.string\n  };\n\n  handleSelectMonth = month => {\n    this.setState(state => ({\n      ...state,\n      selectedMonth: state.selectedMonth === month ? null : month\n    }));\n  };\n\n  render() {\n    const {\n      budget,\n      category,\n      excludeFirstMonth,\n      excludeLastMonth,\n      months,\n      payee,\n      selectedMonth,\n      transactions,\n      onSelectMonth,\n      onSetExclusion\n    } = this.props;\n    const { categoriesById, payeesById } = budget;\n\n    const transactionsForCategoryAndPayee = transactions.filter(\n      transaction =>\n        transaction.category_id === category.id &&\n        transaction.payee_id === payee.id\n    );\n\n    return (\n      <Fragment>\n        <MonthByMonthSection\n          excludeFirstMonth={excludeFirstMonth}\n          excludeLastMonth={excludeLastMonth}\n          months={months}\n          selectedMonth={selectedMonth}\n          transactions={transactionsForCategoryAndPayee}\n          onSelectMonth={onSelectMonth}\n          onSetExclusion={onSetExclusion}\n        />\n        {selectedMonth && (\n          <TransactionsByMonthSection\n            categoriesById={categoriesById}\n            payeesById={payeesById}\n            selectedMonth={selectedMonth}\n            transactions={transactionsForCategoryAndPayee}\n            limitShowing={false}\n          />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default Category;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  primaryColor,\n  lightPrimaryColor,\n  negativeChartColor\n} from \"../styleVariables\";\nimport MonthlyChart from \"./MonthlyChart\";\n\nconst IncomeVsExpensesChart = ({ data, onSelectMonth, selectedMonth }) => (\n  <MonthlyChart\n    data={data}\n    height={160}\n    selectedMonth={selectedMonth}\n    series={[\n      { color: lightPrimaryColor, valueFunction: d => d.income },\n      { color: negativeChartColor, valueFunction: d => d.expenses },\n      {\n        type: \"line\",\n        color: primaryColor,\n        valueFunction: d => d.income + d.expenses\n      }\n    ]}\n    onSelectMonth={onSelectMonth}\n  />\n);\n\nIncomeVsExpensesChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      expenses: PropTypes.number.isRequired,\n      income: PropTypes.number.isRequired,\n      month: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string\n};\n\nexport default IncomeVsExpensesChart;\n","import React, { Component, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\nimport ListItem from \"./ListItem\";\nimport Icon from \"./Icon\";\n\nconst INDENTATION = 18;\n\nclass BreakdownNode extends Component {\n  static propTypes = {\n    amount: PropTypes.number.isRequired,\n    id: PropTypes.string.isRequired,\n    isTopLevel: PropTypes.bool.isRequired,\n    name: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n    nodes: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired\n      })\n    ),\n    valueRenderer: PropTypes.func\n  };\n\n  state = { expanded: false, childrenMounted: false };\n\n  handleToggleExpand = () => {\n    const { expanded, childrenMounted } = this.state;\n\n    if (childrenMounted) {\n      this.setState({ expanded: !expanded });\n    } else {\n      this.setState({ childrenMounted: true });\n      requestAnimationFrame(() => {\n        this.setState({ expanded: true });\n      });\n    }\n  };\n\n  render() {\n    const { name, id, amount, nodes, isTopLevel, valueRenderer } = this.props;\n    const { expanded, childrenMounted } = this.state;\n    const hasChildNodes = !!nodes && nodes.length > 0;\n\n    return (\n      <Container hasChildNodes={hasChildNodes} isTopLevel={isTopLevel}>\n        {hasChildNodes ? (\n          <ToggleNode\n            id={id}\n            name={name}\n            amount={amount}\n            expanded={expanded}\n            onToggle={this.handleToggleExpand}\n            valueRenderer={valueRenderer}\n          />\n        ) : (\n          <LeafNode\n            id={id}\n            name={name}\n            amount={amount}\n            valueRenderer={valueRenderer}\n          />\n        )}\n\n        {hasChildNodes &&\n          childrenMounted && (\n            <AnimateHeight isExpanded={expanded}>\n              <Nodes nodes={nodes} valueRenderer={valueRenderer} />\n            </AnimateHeight>\n          )}\n      </Container>\n    );\n  }\n}\n\nclass Nodes extends PureComponent {\n  render() {\n    const { nodes, valueRenderer } = this.props;\n    return (\n      <div style={{ paddingLeft: INDENTATION }}>\n        {nodes.map(node => (\n          <BreakdownNode\n            {...node}\n            key={node.id}\n            isTopLevel={false}\n            valueRenderer={valueRenderer}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst NodeWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n  user-select: none;\n\n  ${ListItem}:first-child > & {\n    padding-top: 0;\n  }\n`;\n\nconst IconWrapper = styled.div`\n  box-sizing: border-box;\n  padding-left: 3px;\n  width: ${INDENTATION}px;\n  font-weight: 400;\n  color: #888;\n  font-size: 10px;\n`;\n\nconst ToggleNode = ({\n  expanded,\n  name,\n  id,\n  amount,\n  valueRenderer,\n  onToggle\n}) => (\n  <NodeWrapper onClick={onToggle}>\n    <SecondaryText\n      style={{ whiteSpace: \"pre\", display: \"flex\", alignItems: \"center\" }}\n    >\n      <IconWrapper>\n        <Icon icon=\"chevron-right\" transform={{ rotate: expanded ? 90 : 0 }} />\n      </IconWrapper>\n      {typeof name === \"function\" ? name({ expanded }) : name}\n    </SecondaryText>\n    {valueRenderer ? (\n      valueRenderer({ amount, id, faded: expanded })\n    ) : (\n      <SecondaryText style={{ opacity: expanded ? 0.3 : 1 }}>\n        <Amount amount={amount} />\n      </SecondaryText>\n    )}\n  </NodeWrapper>\n);\n\nconst LeafNode = ({ name, id, amount, valueRenderer }) => (\n  <NodeWrapper>\n    <SecondaryText>{name}</SecondaryText>\n    {valueRenderer ? (\n      valueRenderer({ amount, id })\n    ) : (\n      <SecondaryText>\n        <Amount amount={amount} />\n      </SecondaryText>\n    )}\n  </NodeWrapper>\n);\n\nconst Container = ({ isTopLevel, hasChildNodes, children }) =>\n  isTopLevel ? (\n    <ListItem style={{ display: \"block\", padding: 0 }}>{children}</ListItem>\n  ) : (\n    children\n  );\n\nexport default BreakdownNode;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BreakdownNode from \"./BreakdownNode\";\n\nconst Breakdown = ({ nodes, valueRenderer }) =>\n  nodes.map(({ id, name, amount, nodes }) => (\n    <BreakdownNode\n      key={id}\n      id={id}\n      name={name}\n      amount={amount}\n      nodes={nodes}\n      valueRenderer={valueRenderer}\n      isTopLevel\n    />\n  ));\n\nBreakdown.propTypes = {\n  nodes: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n      name: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n      nodes: PropTypes.array\n    })\n  ).isRequired,\n  valueRenderer: PropTypes.func\n};\n\nBreakdown.defaultProps = { reverse: false };\n\nexport default Breakdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport concat from \"lodash/fp/concat\";\nimport mapRaw from \"lodash/fp/map\";\nimport omit from \"lodash/fp/omit\";\nimport pick from \"lodash/fp/pick\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { sumByProp, groupByProp } from \"../dataUtils\";\nimport { getPayeeNodes } from \"../budgetUtils\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\n\nconst map = mapRaw.convert({ cap: false });\n\nconst ExpensesBreakdown = ({\n  categoriesById,\n  categoryGroupsById,\n  transactions,\n  totalIncome,\n  payeesById,\n  divideBy\n}) => {\n  const categoryNodes = compose([\n    map((transactions, categoryId) => {\n      const payeeNodes = getPayeeNodes({ payeesById, transactions }, divideBy);\n      return {\n        ...pick([\"id\", \"name\", \"category_group_id\"])(\n          categoriesById[categoryId]\n        ),\n        nodes: sortBy(\"amount\")(payeeNodes),\n        amount: sumByProp(\"amount\")(payeeNodes)\n      };\n    }),\n    groupByProp(\"category_id\")\n  ])(transactions);\n\n  const groupNodes = compose([\n    map((nodes, categoryGroupId) => {\n      const categoryNodes = map(omit(\"category_group_id\"))(nodes);\n      return {\n        ...pick([\"id\", \"name\"])(categoryGroupsById[categoryGroupId]),\n        nodes: sortBy(\"amount\")(categoryNodes),\n        amount: sumByProp(\"amount\")(categoryNodes)\n      };\n    }),\n    groupByProp(\"category_group_id\")\n  ])(categoryNodes);\n\n  const rootPayeeNodes = getPayeeNodes(\n    {\n      payeesById,\n      transactions: transactions.filter(transaction => !transaction.category_id)\n    },\n    divideBy\n  );\n\n  const nodes = compose([\n    nodes =>\n      concat(nodes)([\n        {\n          id: \"net\",\n          amount: -totalIncome - sumByProp(\"amount\")(nodes),\n          name: \"Net Income\"\n        }\n      ]),\n    sortBy(\"amount\"),\n    concat(rootPayeeNodes)\n  ])(groupNodes);\n\n  return (\n    <CollapsibleSection title=\"Expenses Breakdown\">\n      <Breakdown\n        nodes={nodes}\n        valueRenderer={node => (\n          <AmountWithPercentage {...node} total={-totalIncome} />\n        )}\n      />\n    </CollapsibleSection>\n  );\n};\n\nExpensesBreakdown.propTypes = {\n  categoriesById: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      category_group_id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  categoryGroupsById: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  divideBy: PropTypes.number.isRequired,\n  payeesById: PropTypes.objectOf(PropTypes.object).isRequired,\n  totalIncome: PropTypes.number.isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      category_id: PropTypes.string\n    })\n  ).isRequired\n};\n\nExpensesBreakdown.defaultProps = { divideBy: 1 };\n\nexport default ExpensesBreakdown;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport { getPayeeNodes } from \"../budgetUtils\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport AmountWithPercentage from \"./AmountWithPercentage\";\n\nconst IncomeBreakdown = ({ transactions, payeesById, divideBy }) => {\n  const nodes = getPayeeNodes({ payeesById, transactions }, divideBy);\n  const total = sumBy(\"amount\")(nodes);\n  return (\n    <CollapsibleSection title=\"Income Breakdown\">\n      <Breakdown\n        nodes={sortBy(\"amount\")(nodes).reverse()}\n        total={total}\n        valueRenderer={node => <AmountWithPercentage {...node} total={total} />}\n      />\n    </CollapsibleSection>\n  );\n};\n\nIncomeBreakdown.propTypes = {\n  divideBy: PropTypes.number.isRequired,\n  payeesById: PropTypes.objectOf(PropTypes.object).isRequired,\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      categoryId: PropTypes.string\n    })\n  ).isRequired\n};\n\nIncomeBreakdown.defaultProps = { divideBy: 1 };\n\nexport default IncomeBreakdown;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { sumByProp } from \"../dataUtils\";\nimport ExpensesBreakdown from \"./ExpensesBreakdown\";\nimport IncomeBreakdown from \"./IncomeBreakdown\";\n\nconst Breakdowns = ({\n  categoriesById,\n  categoryGroupsById,\n  payeesById,\n  expenseTransactions,\n  incomeTransactions,\n  divideBy\n}) => {\n  return (\n    <Fragment>\n      <ExpensesBreakdown\n        categoriesById={categoriesById}\n        categoryGroupsById={categoryGroupsById}\n        payeesById={payeesById}\n        transactions={expenseTransactions}\n        totalIncome={sumByProp(\"amount\")(incomeTransactions) / divideBy}\n        divideBy={divideBy}\n      />\n      <IncomeBreakdown\n        payeesById={payeesById}\n        transactions={incomeTransactions}\n        divideBy={divideBy}\n      />\n    </Fragment>\n  );\n};\n\nBreakdowns.propTypes = {\n  categoriesById: PropTypes.object.isRequired,\n  categoryGroupsById: PropTypes.object.isRequired,\n  expenseTransactions: PropTypes.array.isRequired,\n  incomeTransactions: PropTypes.array.isRequired,\n  payeesById: PropTypes.object.isRequired,\n  divideBy: PropTypes.number.isRequired\n};\n\nexport default Breakdowns;\n","import React, { PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport find from \"lodash/fp/find\";\nimport flatMap from \"lodash/fp/flatMap\";\nimport mapRaw from \"lodash/fp/map\";\nimport matchesProperty from \"lodash/fp/matchesProperty\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport { sumByProp, groupBy, simpleMemoize } from \"../dataUtils\";\nimport { getTransactionMonth, isIncome } from \"../budgetUtils\";\nimport IncomeVsExpensesChart from \"./IncomeVsExpensesChart\";\nimport Breakdowns from \"./Breakdowns\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport MonthByMonthSettingsModal from \"./MonthByMonthSettingsModal\";\n\nconst map = mapRaw.convert({ cap: false });\n\nclass IncomeVsExpenses extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      months: PropTypes.arrayOf(\n        PropTypes.shape({\n          month: PropTypes.string.isRequired\n        })\n      ).isRequired\n    }).isRequired,\n    excludeFirstMonth: PropTypes.bool.isRequired,\n    excludeLastMonth: PropTypes.bool.isRequired,\n    investmentAccounts: PropTypes.object.isRequired,\n    showing: PropTypes.oneOf([\"average\", \"total\"]).isRequired,\n    transactions: PropTypes.arrayOf(\n      PropTypes.shape({\n        amount: PropTypes.number.isRequired,\n        date: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    onSetExclusion: PropTypes.func.isRequired\n  };\n\n  state = { selectedMonth: null, settingsModalOpen: false };\n\n  handleClickSettings = () => {\n    this.setState({ settingsModalOpen: true });\n  };\n\n  handleCloseSettingsModal = () => {\n    this.setState({ settingsModalOpen: false });\n  };\n\n  handleSelectMonth = month => {\n    this.setState(state => ({\n      ...state,\n      selectedMonth: state.selectedMonth === month ? null : month\n    }));\n  };\n\n  getSummaries = simpleMemoize((transactions, investmentAccounts, budget) =>\n    compose([\n      sortBy(\"month\"),\n      map((transactions, month) => {\n        const grouped = groupBy(isIncome(budget))(transactions);\n\n        return {\n          month,\n          expenseTransactions: grouped.false || [],\n          incomeTransactions: grouped.true || [],\n          income: sumByProp(\"amount\")(grouped.true || []),\n          expenses: sumByProp(\"amount\")(grouped.false || [])\n        };\n      }),\n      groupBy(getTransactionMonth)\n    ])(transactions)\n  );\n\n  render() {\n    const {\n      budget,\n      excludeFirstMonth,\n      excludeLastMonth,\n      investmentAccounts,\n      showing,\n      transactions,\n      onSetExclusion\n    } = this.props;\n    const { selectedMonth, settingsModalOpen } = this.state;\n    const { categoriesById, categoryGroupsById, payeesById } = budget;\n\n    const showTotals = showing === \"total\";\n    const allSummaries = this.getSummaries(\n      transactions,\n      investmentAccounts,\n      budget\n    );\n    const summaries = selectedMonth\n      ? [find(matchesProperty(\"month\", selectedMonth))(allSummaries)]\n      : allSummaries;\n\n    const incomeTransactions = flatMap(summary => summary.incomeTransactions)(\n      summaries\n    );\n    const expenseTransactions = flatMap(summary => summary.expenseTransactions)(\n      summaries\n    );\n\n    const totalExpenses = sumByProp(\"amount\")(expenseTransactions);\n    const totalIncome = sumByProp(\"amount\")(incomeTransactions);\n    const denominator = showTotals ? 1 : summaries.length;\n\n    return (\n      <Fragment>\n        <CollapsibleSection\n          title=\"Monthly Trend\"\n          hasSettings\n          onClickSettings={this.handleClickSettings}\n        >\n          <ChartNumbers\n            numbers={[\n              {\n                label: \"net income\",\n                amount: -(totalExpenses + totalIncome) / denominator\n              },\n              {\n                label: \"expenses\",\n                amount: totalExpenses / denominator\n              },\n              {\n                label: \"income\",\n                amount: -totalIncome / denominator\n              }\n            ]}\n          />\n          <IncomeVsExpensesChart\n            data={allSummaries}\n            selectedMonth={selectedMonth}\n            onSelectMonth={this.handleSelectMonth}\n          />\n          <MonthByMonthSettingsModal\n            excludeFirstMonth={excludeFirstMonth}\n            excludeLastMonth={excludeLastMonth}\n            open={settingsModalOpen}\n            onClose={this.handleCloseSettingsModal}\n            onSetExclusion={onSetExclusion}\n          />\n        </CollapsibleSection>\n        <Breakdowns\n          categoriesById={categoriesById}\n          categoryGroupsById={categoryGroupsById}\n          payeesById={payeesById}\n          expenseTransactions={expenseTransactions}\n          incomeTransactions={incomeTransactions}\n          divideBy={showTotals ? 1 : summaries.length}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default IncomeVsExpenses;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport includes from \"lodash/fp/includes\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport { groupBy } from \"../dataUtils\";\nimport {\n  primaryColor,\n  lightPrimaryColor,\n  negativeChartColor\n} from \"../styleVariables\";\nimport MonthlyChart from \"./MonthlyChart\";\n\nconst CREDIT_ACCOUNTS = [\"mortgage\", \"creditCard\"];\nconst getStack = ({ type, id, mortgageAccounts }) => {\n  if (mortgageAccounts[id]) {\n    return \"liability\";\n  }\n\n  return includes(type)(CREDIT_ACCOUNTS) ? \"liability\" : \"asset\";\n};\n\nconst NetWorthChart = ({\n  data,\n  months,\n  mortgageAccounts,\n  selectedMonth,\n  onSelectMonth\n}) => {\n  const groupedData = groupBy(d =>\n    getStack({ type: d.type, id: d.id, mortgageAccounts })\n  )(data);\n  const monthlyData = months.map((month, index) => ({\n    month,\n    assets: sumBy(d => d.data[index])(groupedData.asset),\n    liabilities: sumBy(d => d.data[index])(groupedData.liability)\n  }));\n\n  return (\n    <MonthlyChart\n      selectedMonth={selectedMonth}\n      onSelectMonth={onSelectMonth}\n      data={monthlyData}\n      height={160}\n      series={[\n        {\n          color: negativeChartColor,\n          valueFunction: d => Math.max(-d.liabilities, 0)\n        },\n        {\n          color: lightPrimaryColor,\n          valueFunction: d => Math.max(d.assets, 0)\n        },\n        {\n          color: primaryColor,\n          type: \"line\",\n          valueFunction: d => d.assets + d.liabilities\n        }\n      ]}\n      stacked={false}\n    />\n  );\n};\n\nNetWorthChart.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(PropTypes.number).isRequired,\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  months: PropTypes.arrayOf(PropTypes.string).isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onSelectMonth: PropTypes.func.isRequired,\n  selectedMonth: PropTypes.string\n};\n\nexport default NetWorthChart;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport every from \"lodash/fp/every\";\nimport filter from \"lodash/fp/filter\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport mapRaw from \"lodash/fp/map\";\nimport propEq from \"lodash/fp/propEq\";\nimport reject from \"lodash/fp/reject\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport startCase from \"lodash/fp/startCase\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport values from \"lodash/fp/values\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport Breakdown from \"./Breakdown\";\nimport { SecondaryText } from \"./typeComponents\";\nimport Amount from \"./Amount\";\nimport Icon from \"./Icon\";\n\nconst map = mapRaw.convert({ cap: false });\n\nconst getNodes = ({ accounts, investmentAccounts, mortgageAccounts }) => {\n  const accountsByGroup = groupBy(account => {\n    if (investmentAccounts[account.id]) {\n      return \"Investments\";\n    }\n\n    if (mortgageAccounts[account.id]) {\n      return \"Mortgages\";\n    }\n\n    return startCase(account.type);\n  })(accounts);\n\n  return compose([\n    accounts => accounts.reverse(),\n    sortBy(\"amount\"),\n    map((accounts, name) => ({\n      name,\n      accounts,\n      amount: sumBy(\"balance\")(accounts),\n      id: name,\n      nodes: compose([\n        sortBy(\"balance\"),\n        map(({ id, name, balance }) => ({\n          amount: balance,\n          id,\n          name\n        }))\n      ])(accounts)\n    }))\n  ])(accountsByGroup);\n};\n\nconst NetWorthAccounts = ({\n  accounts,\n  hiddenAccounts,\n  onToggleAccounts,\n  investmentAccounts,\n  mortgageAccounts\n}) => {\n  const accountsById = keyBy(\"id\")(accounts);\n  const visibleNodes = getNodes({\n    accounts: reject(account => hiddenAccounts[account.id])(accounts),\n    investmentAccounts,\n    mortgageAccounts\n  });\n  const hiddenNodes = getNodes({\n    accounts: filter(account => hiddenAccounts[account.id])(accounts),\n    investmentAccounts,\n    mortgageAccounts\n  });\n\n  return (\n    <Fragment>\n      <CollapsibleSection title=\"Accounts\">\n        <AccountBreakdown\n          accountsById={accountsById}\n          hiddenAccounts={hiddenAccounts}\n          nodes={visibleNodes}\n          onToggleAccounts={onToggleAccounts}\n        />\n      </CollapsibleSection>\n\n      {values(hiddenNodes).length > 0 && (\n        <CollapsibleSection title=\"Hidden Accounts\">\n          <AccountBreakdown\n            accountsById={accountsById}\n            hiddenAccounts={hiddenAccounts}\n            nodes={hiddenNodes}\n            onToggleAccounts={onToggleAccounts}\n          />\n        </CollapsibleSection>\n      )}\n    </Fragment>\n  );\n};\n\nNetWorthAccounts.propTypes = {\n  accounts: PropTypes.arrayOf(\n    PropTypes.shape({\n      balance: PropTypes.number.isRequired,\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  hiddenAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n  onToggleAccounts: PropTypes.func.isRequired\n};\n\nconst AccountBreakdown = ({\n  accountsById,\n  hiddenAccounts,\n  nodes,\n  onToggleAccounts\n}) => (\n  <Breakdown\n    nodes={nodes}\n    valueRenderer={({ id, amount }) => {\n      const node = nodes.find(propEq(\"id\", id));\n      const accounts = node ? node.accounts : [accountsById[id]];\n\n      return (\n        <SecondaryText style={{ display: \"flex\", alignItems: \"center\" }}>\n          <Amount amount={amount} />\n          <div\n            style={{ width: 36, textAlign: \"center\" }}\n            onClick={evt => {\n              evt.stopPropagation();\n              onToggleAccounts({ ids: map(\"id\")(accounts) });\n            }}\n          >\n            {every(account => hiddenAccounts[account.id])(accounts) ? (\n              <Icon icon=\"eye-slash\" />\n            ) : (\n              <Icon icon=\"eye\" />\n            )}\n          </div>\n        </SecondaryText>\n      );\n    }}\n  />\n);\n\nexport default NetWorthAccounts;\n","import React, { PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport compose from \"lodash/fp/compose\";\nimport constant from \"lodash/fp/constant\";\nimport eq from \"lodash/fp/eq\";\nimport filter from \"lodash/fp/filter\";\nimport findIndex from \"lodash/fp/findIndex\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport identity from \"lodash/fp/identity\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport keys from \"lodash/fp/keys\";\nimport last from \"lodash/fp/last\";\nimport map from \"lodash/fp/map\";\nimport mapValues from \"lodash/fp/mapValues\";\nimport omitBy from \"lodash/fp/omitBy\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sum from \"lodash/fp/sum\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport values from \"lodash/fp/values\";\nimport { simpleMemoize } from \"../dataUtils\";\nimport { getSetting, setSetting } from \"../uiRepo\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ChartNumbers from \"./ChartNumbers\";\nimport NetWorthChart from \"./NetWorthChart\";\nimport NetWorthAccounts from \"./NetWorthAccounts\";\n\nconst cumulative = arr =>\n  arr.reduce(\n    (acc, curr) => (acc.length === 0 ? [curr] : acc.concat(last(acc) + curr)),\n    []\n  );\n\nclass NetWorth extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      accounts: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          name: PropTypes.string.isRequired,\n          type: PropTypes.string.isRequired\n        })\n      ).isRequired,\n      accountsById: PropTypes.objectOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          name: PropTypes.string.isRequired,\n          type: PropTypes.string.isRequired\n        })\n      ).isRequired,\n      transactions: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          account_id: PropTypes.string.isRequired,\n          amount: PropTypes.number.isRequired,\n          date: PropTypes.string.isRequired\n        })\n      ).isRequired\n    }).isRequired,\n    investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired\n  };\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      hiddenAccounts: getSetting(\"netWorthHiddenAccounts\", props.budget.id),\n      selectedMonth: null\n    };\n  }\n\n  groupByMonthAndAccount = simpleMemoize(\n    compose([\n      mapValues(groupBy(\"account_id\")),\n      groupBy(({ date }) => date.slice(0, 7))\n    ])\n  );\n\n  getMonths = simpleMemoize(budget =>\n    compose([sortBy(identity), keys, this.groupByMonthAndAccount])(\n      budget.transactions\n    )\n  );\n\n  getSummaryByAccount = simpleMemoize(budget => {\n    const groupedTransactions = this.groupByMonthAndAccount(\n      budget.transactions\n    );\n    const months = this.getMonths(budget);\n    return map(({ id }) => ({\n      id,\n      data: compose([\n        cumulative,\n        map(month => sumBy(\"amount\")(groupedTransactions[month][id]))\n      ])(months)\n    }))(budget.accounts);\n  });\n\n  getSelectedBalances = simpleMemoize((selectedMonth, budget) => {\n    const months = this.getMonths(budget);\n    const selectedMonthIndex = findIndex(eq(selectedMonth))(months);\n    const accountSummaries = this.getSummaryByAccount(budget);\n\n    return compose([\n      mapValues(\n        ({ data }) =>\n          selectedMonthIndex > -1 ? data[selectedMonthIndex] : last(data)\n      ),\n      keyBy(\"id\")\n    ])(accountSummaries);\n  });\n\n  handleSelectMonth = month => {\n    this.setState(state => ({\n      ...state,\n      selectedMonth: state.selectedMonth === month ? null : month\n    }));\n  };\n\n  handleToggleAccounts = ({ ids }) => {\n    const { budget } = this.props;\n    const { hiddenAccounts } = this.state;\n    const shouldHide = ids.some(id => !hiddenAccounts[id]);\n    const newHiddenAccounts = ids.reduce(\n      (acc, id) => ({ ...acc, [id]: shouldHide }),\n      hiddenAccounts\n    );\n\n    this.setState({ hiddenAccounts: newHiddenAccounts });\n    setSetting(\"netWorthHiddenAccounts\", budget.id, newHiddenAccounts);\n  };\n\n  render() {\n    const { budget, investmentAccounts, mortgageAccounts } = this.props;\n    const { hiddenAccounts, selectedMonth } = this.state;\n\n    const months = this.getMonths(budget);\n    const accountSummaries = this.getSummaryByAccount(budget);\n    const selectedBalances = this.getSelectedBalances(selectedMonth, budget);\n    const filterHidden = omitBy((_, id) => hiddenAccounts[id]);\n    const selectedLiabilities = compose([\n      sum,\n      filter(b => b < 0),\n      values,\n      filterHidden\n    ])(selectedBalances);\n    const selectedAssets = compose([\n      sum,\n      filter(b => b > 0),\n      values,\n      filterHidden\n    ])(selectedBalances);\n\n    return (\n      <Fragment>\n        <CollapsibleSection title=\"Monthly Trend\">\n          <ChartNumbers\n            numbers={[\n              {\n                amount: -(selectedAssets + selectedLiabilities),\n                label: \"Net Worth\"\n              },\n              { amount: -selectedAssets, label: \"Assets\" },\n              { amount: selectedLiabilities, label: \"Liabilities\" }\n            ]}\n            alwaysRound\n          />\n          <NetWorthChart\n            data={map(({ id, data }) => ({\n              data: hiddenAccounts[id] ? data.map(constant(0)) : data,\n              type: budget.accountsById[id].type,\n              id\n            }))(accountSummaries)}\n            months={months}\n            mortgageAccounts={mortgageAccounts}\n            selectedMonth={selectedMonth}\n            onSelectMonth={this.handleSelectMonth}\n          />\n        </CollapsibleSection>\n        <NetWorthAccounts\n          accounts={map(account => ({\n            ...account,\n            balance: selectedBalances[account.id]\n          }))(budget.accounts)}\n          hiddenAccounts={hiddenAccounts}\n          investmentAccounts={investmentAccounts}\n          mortgageAccounts={mortgageAccounts}\n          onToggleAccounts={this.handleToggleAccounts}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default NetWorth;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport { getSetting, setSetting } from \"../uiRepo\";\nimport { getFirstMonth } from \"../budgetUtils\";\n\nconst getMonths = (firstMonth, lastMonth) => {\n  const months = [firstMonth];\n  let m = firstMonth;\n\n  while (m !== lastMonth) {\n    m = moment(m)\n      .add(1, \"months\")\n      .format(\"YYYY-MM\");\n    months.push(m);\n  }\n\n  return months;\n};\n\nclass CategoriesState extends Component {\n  static propTypes = {\n    budget: PropTypes.shape({\n      transactions: PropTypes.arrayOf(PropTypes.object).isRequired\n    }).isRequired,\n    children: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      excludeFirstMonth: getSetting(\"excludeFirstMonth\", props.budget.id),\n      excludeLastMonth: getSetting(\"excludeLastMonth\", props.budget.id)\n    };\n  }\n\n  handleSetExclusion = ({ month, exclude }) => {\n    const setting =\n      month === \"first\" ? \"excludeFirstMonth\" : \"excludeLastMonth\";\n    this.setState(\n      {\n        [setting]: exclude\n      },\n      () => {\n        setSetting(setting, this.props.budget.id, this.state[setting]);\n      }\n    );\n  };\n\n  render() {\n    const { budget } = this.props;\n    const { excludeFirstMonth, excludeLastMonth } = this.state;\n\n    const firstBudgetMonth = getFirstMonth(budget);\n    const firstMonth = excludeFirstMonth\n      ? moment(firstBudgetMonth)\n          .add(1, \"months\")\n          .format(\"YYYY-MM\")\n      : firstBudgetMonth;\n    const lastMonth = excludeLastMonth\n      ? moment()\n          .subtract(1, \"months\")\n          .format(\"YYYY-MM\")\n      : moment().format(\"YYYY-MM\");\n    const months = getMonths(firstMonth, lastMonth);\n\n    return this.props.children({\n      ...this.state,\n      months,\n      onSetExclusion: this.handleSetExclusion\n    });\n  }\n}\n\nexport default CategoriesState;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/fp/keys\";\nimport get from \"lodash/fp/get\";\nimport EmptyText from \"./EmptyText\";\nimport { Link } from \"react-router-dom\";\nimport pages, { makeLink } from \"../pages\";\nimport MonthByMonthSection from \"./MonthByMonthSection\";\nimport MonthExclusions from \"./MonthExclusions\";\nimport { getTransactionMonth } from \"../budgetUtils\";\nimport GenericEntitiesSection from \"./GenericEntitiesSection\";\n\nconst isContribution = investmentAccounts => transaction =>\n  !!investmentAccounts[transaction.account_id] &&\n  !!transaction.transfer_account_id &&\n  !investmentAccounts[transaction.transfer_account_id];\n\nconst isCapitalGainOrLoss = (investmentAccounts, payeesById) => transaction =>\n  !!investmentAccounts[transaction.account_id] &&\n  !transaction.transfer_account_id &&\n  get([transaction.payee_id, \"name\"])(payeesById) !== \"Starting Balance\";\n\nconst isInvestmentTransaction = (\n  investmentAccounts,\n  payeesById\n) => transaction =>\n  isContribution(investmentAccounts)(transaction) ||\n  isCapitalGainOrLoss(investmentAccounts, payeesById)(transaction);\n\nclass Investments extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.object.isRequired,\n    investmentAccounts: PropTypes.object.isRequired\n  };\n\n  state = { selectedMonth: null, selectedBreakdown: null };\n\n  handleSelectMonth = month => {\n    this.setState(state => ({\n      ...state,\n      selectedMonth: state.selectedMonth === month ? null : month\n    }));\n  };\n\n  handleClickBreakdown = breakdown => {\n    this.setState(state => ({\n      ...state,\n      selectedBreakdown:\n        state.selectedBreakdown === breakdown ? null : breakdown\n    }));\n  };\n\n  render() {\n    const { budget, investmentAccounts } = this.props;\n    const { selectedMonth, selectedBreakdown } = this.state;\n    const { payeesById } = budget;\n\n    if (keys(investmentAccounts).length === 0) {\n      return (\n        <EmptyText>\n          You don't have any accounts marked as investment accounts.{\" \"}\n          <Link to={makeLink(pages.settings.path, { budgetId: budget.id })}>\n            Go to Settings\n          </Link>\n        </EmptyText>\n      );\n    }\n\n    const investmentTransactions = budget.transactions\n      .filter(isInvestmentTransaction(investmentAccounts, payeesById))\n      .map(transaction => ({ ...transaction, amount: -transaction.amount }));\n    const transactionsInMonth =\n      selectedMonth &&\n      investmentTransactions.filter(\n        transaction => getTransactionMonth(transaction) === selectedMonth\n      );\n\n    return (\n      <Fragment>\n        <MonthExclusions budget={budget}>\n          {({\n            excludeFirstMonth,\n            excludeLastMonth,\n            months,\n            onSetExclusion\n          }) => (\n            <MonthByMonthSection\n              excludeFirstMonth={excludeFirstMonth}\n              excludeLastMonth={excludeLastMonth}\n              highlightFunction={\n                selectedBreakdown &&\n                (transaction =>\n                  selectedBreakdown === \"contribution\"\n                    ? isContribution(investmentAccounts)(transaction)\n                    : isCapitalGainOrLoss(investmentAccounts, payeesById)(\n                        transaction\n                      ))\n              }\n              months={months}\n              selectedMonth={selectedMonth}\n              transactions={investmentTransactions}\n              onSelectMonth={this.handleSelectMonth}\n              onSetExclusion={onSetExclusion}\n            />\n          )}\n        </MonthExclusions>\n        <GenericEntitiesSection\n          transactions={transactionsInMonth || investmentTransactions}\n          entitiesById={{\n            contribution: { name: \"Contributions\" },\n            capitalGain: { name: \"Capital Gains/Losses\" }\n          }}\n          title=\"Growth Breakdown\"\n          onClickEntity={this.handleClickBreakdown}\n          selectedEntityId={selectedBreakdown}\n          entityFunction={transaction =>\n            isContribution(investmentAccounts)(transaction)\n              ? \"contribution\"\n              : \"capitalGain\"\n          }\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default Investments;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  primaryColor,\n  negativeColor,\n  selectedPlotBandColor\n} from \"../styleVariables\";\nimport Chart from \"./Chart\";\n\nconst ProjectionsChart = ({\n  investmentsProjection,\n  mortgageProjection,\n  amountNeededToRetire,\n  yearsUntilRetirement\n}) => (\n  <Chart\n    options={{\n      chart: {\n        type: \"column\"\n      },\n      xAxis: {\n        type: \"category\",\n        plotBands: [\n          {\n            color: selectedPlotBandColor,\n            from: Math.floor(yearsUntilRetirement) - 0.5,\n            to: Math.floor(yearsUntilRetirement) + 0.5\n          }\n        ]\n      },\n      yAxis: {\n        title: { text: null },\n        endOnTick: false,\n        plotLines: [\n          {\n            value: amountNeededToRetire,\n            color: \"#ccc\",\n            width: 1\n          }\n        ]\n      },\n      legend: {\n        enabled: false\n      },\n      series: [\n        { data: investmentsProjection, color: primaryColor, borderWidth: 0 },\n        { data: mortgageProjection, color: negativeColor, borderWidth: 0 }\n      ]\n    }}\n  />\n);\n\nProjectionsChart.propTypes = {\n  amountNeededToRetire: PropTypes.number.isRequired,\n  investmentsProjection: PropTypes.arrayOf(PropTypes.number).isRequired,\n  mortgageProjection: PropTypes.arrayOf(PropTypes.number).isRequired,\n  yearsUntilRetirement: PropTypes.number.isRequired\n};\n\nexport default ProjectionsChart;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst isDescendant = (parent, child) => {\n  let node = child.parentNode;\n  while (node !== null) {\n    if (node === parent) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n  return false;\n};\n\nclass ClickOff extends Component {\n  static propTypes = {\n    children: PropTypes.func.isRequired,\n    onClickOff: PropTypes.func\n  };\n\n  parent = null;\n\n  componentDidMount() {\n    document.body.addEventListener(\"click\", this.handleBodyClick);\n  }\n\n  componentWillUnmount() {\n    document.body.removeEventListener(\"click\", this.handleBodyClick);\n  }\n\n  handleBodyClick = evt => {\n    if (this.props.onClickOff && !isDescendant(this.parent, evt.target)) {\n      this.props.onClickOff();\n    }\n  };\n\n  render() {\n    return this.props.children({\n      ref: el => {\n        this.parent = el;\n      }\n    });\n  }\n}\n\nexport default ClickOff;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AnimateHeight from \"react-animate-height-auto\";\nimport ClickOff from \"./ClickOff\";\nimport Button from \"./Button\";\n\nconst bodyEl = document.getElementsByTagName(\"body\")[0];\n\nconst Container = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: #fff;\n`;\n\nconst ProjectionsSlider = ({\n  name,\n  formatter,\n  label,\n  value,\n  onBlur,\n  onChange,\n  onReset,\n  rangeOptions\n}) =>\n  createPortal(\n    <ClickOff onClickOff={name && onBlur}>\n      {({ ref }) => (\n        <Container innerRef={ref}>\n          <AnimateHeight isExpanded={!!name}>\n            <div style={{ borderTop: \"1px solid #bbb\", padding: \"15px 20px\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  marginBottom: 15\n                }}\n              >\n                {label}: {formatter(value || 0)}\n                <Button\n                  onClick={() => {\n                    onReset(name);\n                  }}\n                >\n                  reset\n                </Button>\n              </div>\n              <Range\n                {...rangeOptions}\n                name={name}\n                value={value || 0}\n                onChange={onChange}\n              />\n            </div>\n          </AnimateHeight>\n        </Container>\n      )}\n    </ClickOff>,\n    bodyEl\n  );\n\nProjectionsSlider.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n  formatter: PropTypes.func,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.number\n};\n\nProjectionsSlider.defaultProps = {\n  formatter: val => val\n};\n\nconst Range = ({ name, onReset, ...other }) => (\n  <input\n    {...other}\n    name={name}\n    type=\"range\"\n    style={{ display: \"block\", width: \"100%\" }}\n  />\n);\n\nexport default ProjectionsSlider;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport chunk from \"lodash/fp/chunk\";\nimport compose from \"lodash/fp/compose\";\nimport get from \"lodash/fp/get\";\nimport head from \"lodash/fp/head\";\nimport map from \"lodash/fp/map\";\nimport pick from \"lodash/fp/pick\";\nimport range from \"lodash/fp/range\";\nimport { simpleMemoize, keyByProp } from \"../dataUtils\";\nimport { selectedPlotBandColor } from \"../styleVariables\";\nimport {\n  getMortgageRate,\n  getReturnOnInvestments,\n  getAverageContribution,\n  getCurrentInvestments,\n  getAverageExpensesWithoutMortgage,\n  getProjection,\n  getProjectionWithRetirement\n} from \"../projectionUtils\";\nimport Icon from \"./Icon\";\nimport CollapsibleSection from \"./CollapsibleSection\";\nimport ProjectionsChart from \"./ProjectionsChart\";\nimport ProjectionsSlider from \"./ProjectionsSlider\";\nimport ChartNumbers from \"./ChartNumbers\";\n\nconst YEARS_TO_PROJECT = 50;\n\nconst adjustableEntries = [\n  {\n    label: \"Average monthly contribution\",\n    name: \"averageContribution\",\n    formatter: val => `$${Math.round(val)}`\n  },\n  {\n    label: \"Average return on investments\",\n    name: \"returnOnInvestments\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  },\n  {\n    label: \"Average expenses without mortgage\",\n    name: \"averageExpenses\",\n    formatter: val => `$${Math.round(val)}`\n  },\n  {\n    label: \"Return on investment after retirement\",\n    name: \"retirementReturns\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  },\n  {\n    label: \"Average tax rate after retirement\",\n    name: \"retirementTaxRate\",\n    formatter: val => `${(val * 100).toFixed(1)}%`\n  }\n];\n\nconst adjustableEntriesByName = keyByProp(\"name\")(adjustableEntries);\n\nconst getInitialState = simpleMemoize(\n  (budget, investmentAccounts, mortgageAccounts) => {\n    const {\n      paymentsLeft: remainingMortgagePayments,\n      mortgagePayment,\n      principalProjection: mortgageProjection\n    } = getMortgageRate(budget, mortgageAccounts) || {};\n    const returnOnInvestments = getReturnOnInvestments(\n      budget,\n      investmentAccounts\n    );\n    const averageContribution = getAverageContribution(\n      budget,\n      investmentAccounts\n    );\n    const currentInvestments = getCurrentInvestments(\n      budget,\n      investmentAccounts\n    );\n    const averageExpenses = getAverageExpensesWithoutMortgage(\n      budget,\n      investmentAccounts,\n      mortgageAccounts\n    );\n\n    return {\n      mortgagePayment,\n      remainingMortgagePayments,\n      mortgageProjection,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      averageExpenses,\n      retirementReturns: 0.04,\n      retirementTaxRate: 0.15,\n      maxAverageExpenses: Math.ceil((averageExpenses * 2) / 1000) * 1000,\n      maxAverageContribution: Math.ceil((averageContribution * 2) / 1000) * 1000\n    };\n  }\n);\n\nclass Projections extends PureComponent {\n  static propTypes = {\n    budget: PropTypes.shape({\n      transactions: PropTypes.array.isRequired\n    }).isRequired,\n    investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired\n  };\n\n  constructor(props) {\n    super();\n    this.state = {\n      ...getInitialState(\n        props.budget,\n        props.investmentAccounts,\n        props.mortgageAccounts\n      ),\n      adjustingName: null\n    };\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: parseFloat(e.target.value) });\n  };\n\n  handleSelectAdjusting = name => {\n    this.setState(state => ({\n      adjustingName: state.adjustingName === name ? null : name\n    }));\n  };\n\n  handleClearSelection = () => {\n    this.setState({ adjustingName: null });\n  };\n\n  handleResetCalculation = calculation => {\n    const { budget, investmentAccounts, mortgageAccounts } = this.props;\n    this.setState(\n      pick(calculation)(\n        getInitialState(budget, investmentAccounts, mortgageAccounts)\n      )\n    );\n  };\n\n  render() {\n    const {\n      mortgagePayment,\n      remainingMortgagePayments,\n      mortgageProjection,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      averageExpenses,\n      retirementReturns,\n      retirementTaxRate,\n      maxAverageExpenses,\n      maxAverageContribution,\n      adjustingName\n    } = this.state;\n\n    const projection = getProjection({\n      numMonths: YEARS_TO_PROJECT * 12,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments\n    });\n    const monthlyRetirementReturn = (1 + retirementReturns) ** (1 / 12) - 1;\n    const amountNeededToRetire =\n      averageExpenses / (monthlyRetirementReturn * (1 - retirementTaxRate));\n    let m = 0;\n\n    while (m < projection.length) {\n      if (m < remainingMortgagePayments) {\n        const remainingMortgage = range(\n          0,\n          remainingMortgagePayments - m\n        ).reduce(\n          (acc, curr) =>\n            acc +\n            mortgagePayment /\n              (1 + monthlyRetirementReturn * (1 - retirementTaxRate)) ** curr,\n          0\n        );\n        if (\n          (projection[m] - remainingMortgage) *\n            monthlyRetirementReturn *\n            (1 - retirementTaxRate) >\n          averageExpenses\n        ) {\n          break;\n        }\n      } else {\n        if (\n          projection[m] * monthlyRetirementReturn * (1 - retirementTaxRate) >\n          averageExpenses\n        ) {\n          break;\n        }\n      }\n      m += 1;\n    }\n\n    const projectionWithRetirement = getProjectionWithRetirement({\n      numMonths: YEARS_TO_PROJECT * 12,\n      returnOnInvestments,\n      averageContribution,\n      currentInvestments,\n      monthsBeforeRetirement: m,\n      monthlyExpenses: averageExpenses,\n      retirementReturns,\n      retirementTaxRate,\n      remainingMortgagePayments,\n      mortgagePayment\n    });\n    const hasMortgage = !!mortgagePayment;\n\n    const yearsUntilRetirement = m / 12;\n    const projectionByYear = compose([map(head), chunk(12)])(\n      projectionWithRetirement\n    );\n    const mortgageProjectionByYear = compose([map(head), chunk(12)])(\n      mortgageProjection\n    );\n\n    const nameToRangeOptions = {\n      averageContribution: { min: 0, max: maxAverageContribution, step: 50 },\n      returnOnInvestments: { min: 0, max: 0.2, step: 0.001 },\n      averageExpenses: { min: 0, max: maxAverageExpenses, step: 50 },\n      retirementReturns: { min: 0, max: 0.2, step: 0.001 },\n      retirementTaxRate: { min: 0, max: 0.5, step: 0.001 }\n    };\n\n    return (\n      <Fragment>\n        <CollapsibleSection title=\"Projection\">\n          <ChartNumbers\n            numbers={[\n              {\n                amount: -amountNeededToRetire,\n                label: \"needed for retirement\",\n                decimalsToRound: 0\n              },\n              {\n                amount: -yearsUntilRetirement,\n                label: \"years to retirement\",\n                isMoney: false,\n                decimalsToRound: 1\n              }\n            ]}\n          />\n          <ProjectionsChart\n            investmentsProjection={projectionByYear}\n            mortgageProjection={mortgageProjectionByYear}\n            amountNeededToRetire={amountNeededToRetire}\n            yearsUntilRetirement={yearsUntilRetirement}\n          />\n        </CollapsibleSection>\n        <CollapsibleSection title=\"Assumptions\">\n          {adjustableEntries.map(({ label, name, formatter }) => (\n            <AdjustableEntry\n              key={name}\n              label={label}\n              name={name}\n              value={this.state[name]}\n              formatter={formatter}\n              isAdjusting={adjustingName === name}\n              onSelect={this.handleSelectAdjusting}\n              onReset={this.handleResetCalculation}\n              onChange={this.handleChange}\n            />\n          ))}\n          {hasMortgage && (\n            <Fragment>\n              <Entry\n                label=\"Mortgage payment\"\n                value={mortgagePayment}\n                formatter={val => `$${val.toFixed(2)}`}\n              />\n              <Entry\n                label=\"Time remaining on mortgage\"\n                value={remainingMortgagePayments}\n                formatter={val => `${(val / 12).toFixed(1)} years`}\n              />\n            </Fragment>\n          )}\n        </CollapsibleSection>\n        <ProjectionsSlider\n          name={adjustingName}\n          label={get([adjustingName, \"label\"])(adjustableEntriesByName)}\n          onReset={this.handleResetCalculation}\n          onChange={this.handleChange}\n          onBlur={this.handleClearSelection}\n          formatter={get([adjustingName, \"formatter\"])(adjustableEntriesByName)}\n          value={this.state[adjustingName]}\n          rangeOptions={nameToRangeOptions[adjustingName]}\n        />\n      </Fragment>\n    );\n  }\n}\n\nconst AdjustableEntry = ({\n  label,\n  value,\n  formatter,\n  name,\n  onSelect,\n  isAdjusting\n}) => (\n  <Entry\n    label={label}\n    value={value}\n    formatter={formatter}\n    onClick={() => {\n      onSelect(name);\n    }}\n    highlightValue={isAdjusting}\n    isAdjustable\n  />\n);\n\nconst Entry = ({\n  label,\n  value,\n  onClick,\n  highlightValue,\n  isAdjustable,\n  formatter = a => a\n}) => (\n  <div\n    style={{\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      padding: \"2px 0\"\n    }}\n  >\n    {label}:\n    <div style={{ display: \"flex\", alignItems: \"center\" }} onClick={onClick}>\n      <strong\n        style={{\n          backgroundColor: highlightValue ? selectedPlotBandColor : null,\n          padding: isAdjustable && \"0 4px\",\n          borderRadius: 2\n        }}\n      >\n        {formatter(value)}\n      </strong>\n      {isAdjustable && <Icon icon=\"pencil\" faded style={{ marginLeft: 4 }} />}\n    </div>\n  </div>\n);\n\nexport default Projections;\n","import moment from \"moment\";\nimport add from \"lodash/fp/add\";\nimport compose from \"lodash/fp/compose\";\nimport concat from \"lodash/fp/concat\";\nimport filter from \"lodash/fp/filter\";\nimport find from \"lodash/fp/find\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport head from \"lodash/fp/head\";\nimport identity from \"lodash/fp/identity\";\nimport includes from \"lodash/fp/includes\";\nimport keys from \"lodash/fp/keys\";\nimport last from \"lodash/fp/last\";\nimport map from \"lodash/fp/map\";\nimport matches from \"lodash/fp/matches\";\nimport multiply from \"lodash/fp/multiply\";\nimport prop from \"lodash/fp/prop\";\nimport range from \"lodash/fp/range\";\nimport reduce from \"lodash/fp/reduce\";\nimport reject from \"lodash/fp/reject\";\nimport sortBy from \"lodash/fp/sortBy\";\nimport sumBy from \"lodash/fp/sumBy\";\nimport takeWhile from \"lodash/fp/takeWhile\";\nimport takeRightWhile from \"lodash/fp/takeRightWhile\";\nimport uniq from \"lodash/fp/uniq\";\nimport { getTransactionMonth } from \"./budgetUtils\";\n\nexport const getMortgageRate = (\n  { accounts, transactions: allTransactions },\n  mortgageAccounts\n) => {\n  const mortgageAccount = find(account => mortgageAccounts[account.id])(\n    accounts\n  );\n\n  if (!mortgageAccount) {\n    return null;\n  }\n\n  const transactions = compose([\n    sortBy(\"date\"),\n    filter(matches({ account_id: mortgageAccount.id }))\n  ])(allTransactions);\n  const lastMonth = compose([t => t.date.slice(0, 7), last])(transactions);\n  const lastMonthTransactions = takeRightWhile(\n    t => t.date.slice(0, 7) === lastMonth\n  )(transactions);\n\n  const P = -compose([\n    sumBy(\"amount\"),\n    takeWhile(t => t.date.slice(0, 7) !== lastMonth)\n  ])(transactions);\n  const P1 = P - sumBy(\"amount\")(lastMonthTransactions);\n  const c = compose([prop(\"amount\"), find(prop(\"transfer_account_id\"))])(\n    lastMonthTransactions\n  );\n  const r = (P1 + c) / P - 1;\n  const N = -Math.log(1 - (r * P) / c) / Math.log(1 + r);\n\n  const rate = r * 12;\n  const paymentsLeft = N - 1;\n\n  const projection = map(n => (1 + r) ** n * P - (((1 + r) ** n - 1) / r) * c)(\n    range(1, N)\n  );\n\n  return {\n    rate,\n    mortgagePayment: c,\n    paymentsLeft,\n    principalProjection: projection\n  };\n};\n\nexport const getCurrentInvestments = (\n  { accounts, transactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  return compose([\n    sumBy(\"amount\"),\n    filter(({ account_id: accountId }) =>\n      includes(accountId)(investmentAccountIds)\n    )\n  ])(transactions);\n};\n\nexport const getReturnOnInvestments = (\n  { accounts, payees, transactions: allTransactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const transactionsByMonth = compose([\n    groupBy(tr => tr.date.slice(0, 7)),\n    reject(t => includes(t.transfer_account_id)(investmentAccountIds)), // remove transfers between investment accounts\n    filter(t => includes(t.account_id)(investmentAccountIds))\n  ])(allTransactions);\n\n  let startForMonth = 0;\n  const returnRates = [];\n\n  const months = compose([sortBy(identity), keys])(transactionsByMonth);\n  map(month => transactionsByMonth[month])(months).forEach(trs => {\n    const contributions = compose([\n      sumBy(\"amount\"),\n      filter(prop(\"transfer_account_id\"))\n    ])(trs);\n    const gains = reject(prop(\"transfer_account_id\"))(trs);\n    const returns = sumBy(\"amount\")(gains);\n\n    if (startForMonth && gains.length) {\n      returnRates.push(returns / (startForMonth + 0.5 * contributions));\n    }\n\n    startForMonth += returns + contributions;\n  });\n\n  const totalReturn = compose([reduce(multiply, 1), map(add(1))])(returnRates);\n  const numMonths = returnRates.length;\n\n  return totalReturn ** (12 / numMonths) - 1;\n};\n\nexport const getAverageContribution = (\n  { accounts, transactions: allTransactions },\n  investmentAccounts\n) => {\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const contributions = compose([\n    filter(\n      ({ transfer_account_id: transferAccountId }) =>\n        transferAccountId && !includes(transferAccountId)(investmentAccountIds)\n    ),\n    filter(({ account_id: accountId }) =>\n      includes(accountId)(investmentAccountIds)\n    )\n  ])(allTransactions);\n\n  const months = compose([\n    sortBy(identity),\n    uniq,\n    map(d => d.slice(0, 7)),\n    map(\"date\")\n  ])(contributions);\n\n  const totalContributions = sumBy(\"amount\")(contributions);\n  const numMonths =\n    moment(last(months)).diff(moment(head(months)), \"months\") + 1;\n\n  return totalContributions / numMonths;\n};\n\nexport const getAverageExpensesWithoutMortgage = (\n  { transactions, accounts, payees, categoriesById, categoryGroupsById },\n  investmentAccounts,\n  mortgageAccounts\n) => {\n  const startingBalanceId = compose([\n    prop(\"id\"),\n    find(matches({ name: \"Starting Balance\" }))\n  ])(payees);\n  const months = compose([sortBy(identity), uniq, map(getTransactionMonth)])(\n    transactions\n  );\n\n  const mortgageAccountIds = compose([\n    filter(id => mortgageAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const investmentAccountIds = compose([\n    filter(id => investmentAccounts[id]),\n    map(\"id\")\n  ])(accounts);\n\n  const totalExpenses = compose([\n    sumBy(\"amount\"),\n    reject(\n      tr =>\n        tr.amount > 0 &&\n        !tr.transfer_account_id &&\n        (!tr.category_id ||\n          !categoryGroupsById[categoriesById[tr.category_id].category_group_id])\n    ),\n    reject(tr =>\n      includes(tr.transfer_account_id)(\n        concat(mortgageAccountIds, investmentAccountIds)\n      )\n    ),\n    reject(tr =>\n      includes(tr.account_id)(concat(mortgageAccountIds, investmentAccountIds))\n    ),\n    reject(tr =>\n      includes(getTransactionMonth(tr))([head(months), last(months)])\n    ),\n    reject(matches({ payee_id: startingBalanceId }))\n  ])(transactions);\n\n  return -totalExpenses / (months.length - 2);\n};\n\nexport const getProjection = ({\n  numMonths,\n  returnOnInvestments,\n  averageContribution,\n  currentInvestments\n}) => {\n  const monthlyRate = (1 + returnOnInvestments) ** (1 / 12) - 1;\n  let amount = currentInvestments;\n  let projection = [];\n\n  do {\n    projection.push(amount);\n    amount +=\n      averageContribution + (amount + 0.5 * averageContribution) * monthlyRate;\n  } while (projection.length < numMonths);\n\n  return projection;\n};\n\nexport const getProjectionWithRetirement = ({\n  numMonths,\n  returnOnInvestments,\n  averageContribution,\n  currentInvestments,\n  monthsBeforeRetirement,\n  monthlyExpenses,\n  retirementReturns,\n  retirementTaxRate,\n  remainingMortgagePayments,\n  mortgagePayment\n}) => {\n  const monthlyRate = (1 + returnOnInvestments) ** (1 / 12) - 1;\n  const monthlyRetirementReturn = (1 + retirementReturns) ** (1 / 12) - 1;\n  let amount = currentInvestments;\n  let projection = [];\n\n  do {\n    projection.push(amount);\n    if (projection.length < monthsBeforeRetirement) {\n      amount +=\n        averageContribution +\n        (amount + 0.5 * averageContribution) * monthlyRate;\n    } else {\n      amount +=\n        amount * monthlyRetirementReturn * (1 - retirementTaxRate) -\n        monthlyExpenses;\n      if (projection.length < remainingMortgagePayments) {\n        amount -= mortgagePayment;\n      }\n    }\n  } while (projection.length < numMonths);\n\n  return projection;\n};\n","import styled from \"styled-components\";\n\nconst Section = styled.div`\n  margin: ${props => (props.top ? \"0\" : \"3px\")};\n  padding: ${props =>\n    props.noPadding ? \"0\" : props.top ? \"15px 23px\" : \"15px 20px\"};\n  background-color: #fff;\n  border: 1px solid #e5e5e5;\n  border-width: ${props => (props.top ? \"0 0 1px\" : \"1px\")};\n  border-radius: 2px;\n`;\n\nexport default Section;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport omit from \"lodash/fp/omit\";\nimport ToggleWithLabel from \"./ToggleWithLabel\";\n\nclass AccountsSelectionForm extends Component {\n  static propTypes = {\n    accounts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    value: PropTypes.objectOf(PropTypes.bool).isRequired,\n    onChange: PropTypes.func.isRequired\n  };\n\n  handleChange = evt => {\n    const { name, checked } = evt.target;\n    const { value, onChange } = this.props;\n\n    let newValue;\n\n    if (checked) {\n      newValue = {\n        ...value,\n        [name]: true\n      };\n    } else {\n      newValue = omit(name)(value);\n    }\n\n    onChange(newValue);\n  };\n\n  render() {\n    const { accounts, value } = this.props;\n\n    return accounts.map(({ id, name }) => (\n      <ToggleWithLabel\n        key={id}\n        checked={!!value[id]}\n        name={id}\n        onChange={this.handleChange}\n        label={name}\n      />\n    ));\n  }\n}\n\nexport default AccountsSelectionForm;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"./Section\";\nimport { StrongText, MinorText } from \"./typeComponents\";\nimport AccountsSelectionForm from \"./AccountsSelectionForm\";\nimport Modal from \"./Modal\";\nimport EmptyText from \"./EmptyText\";\nimport Icon from \"./Icon\";\n\nconst SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Space = styled.div`\n  height: 20px;\n`;\n\nclass Settings extends Component {\n  static propTypes = {\n    budget: PropTypes.shape({\n      accounts: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          name: PropTypes.string.isRequired\n        })\n      ).isRequired\n    }).isRequired,\n    investmentAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    mortgageAccounts: PropTypes.objectOf(PropTypes.bool).isRequired,\n    onUpdateAccounts: PropTypes.func.isRequired\n  };\n\n  state = {\n    investmentModalOpen: false,\n    mortgageModalOpen: false\n  };\n\n  handleClickEdit = section => {\n    if (section === \"investment\") {\n      this.setState({ investmentModalOpen: true });\n    }\n    if (section === \"mortgage\") {\n      this.setState({ mortgageModalOpen: true });\n    }\n  };\n\n  handleCloseInvestmentModal = () => {\n    this.setState({ investmentModalOpen: false });\n  };\n\n  handleCloseMortgageModal = () => {\n    this.setState({ mortgageModalOpen: false });\n  };\n\n  handleChangeInvestment = accountsObject => {\n    this.props.onUpdateAccounts({ type: \"investment\", value: accountsObject });\n  };\n\n  handleChangeMortgage = accountsObject => {\n    this.props.onUpdateAccounts({ type: \"mortgage\", value: accountsObject });\n  };\n\n  render() {\n    const { budget, investmentAccounts, mortgageAccounts } = this.props;\n    const { investmentModalOpen, mortgageModalOpen } = this.state;\n\n    const potentialInvestmentAccounts = budget.accounts.filter(\n      account => account.type === \"otherAsset\" && !account.on_budget\n    );\n    const potentialMortageAccounts = budget.accounts.filter(\n      account => account.type === \"otherLiability\" && !account.on_budget\n    );\n    const investmentAccountsList = budget.accounts.filter(\n      ({ id }) => investmentAccounts[id]\n    );\n    const mortgageAccountList = budget.accounts.filter(\n      ({ id }) => mortgageAccounts[id]\n    );\n\n    return (\n      <Fragment>\n        <Section>\n          <SectionHeader>\n            <StrongText>Investment Accounts</StrongText>\n            <span\n              onClick={() => {\n                this.handleClickEdit(\"investment\");\n              }}\n            >\n              <Icon icon=\"pencil\" />\n            </span>\n          </SectionHeader>\n          {investmentAccountsList.length ? (\n            investmentAccountsList.map(({ id, name }) => (\n              <div key={id}>{name}</div>\n            ))\n          ) : (\n            <EmptyText>No accounts marked as investment</EmptyText>\n          )}\n          <MinorText style={{ marginTop: 10 }}>\n            Transfers to investment accounts are not counted as spending since\n            it's assumed it's for retirement or some other savings goal.\n          </MinorText>\n          <Modal\n            open={investmentModalOpen}\n            onClose={this.handleCloseInvestmentModal}\n            title=\"Investment Accounts\"\n          >\n            <AccountsSelectionForm\n              accounts={potentialInvestmentAccounts}\n              value={investmentAccounts}\n              onChange={this.handleChangeInvestment}\n            />\n          </Modal>\n          <Space />\n          <SectionHeader>\n            <StrongText>Mortgage Accounts</StrongText>\n            <span\n              onClick={() => {\n                this.handleClickEdit(\"mortgage\");\n              }}\n            >\n              <Icon icon=\"pencil\" />\n            </span>\n          </SectionHeader>\n          {mortgageAccountList.length ? (\n            mortgageAccountList.map(({ id, name }) => (\n              <div key={id}>{name}</div>\n            ))\n          ) : (\n            <EmptyText>No accounts marked as mortgage</EmptyText>\n          )}\n          <MinorText style={{ marginTop: 10 }}>\n            Mortgage accounts are used in the retirement calculator since it's a\n            significant expense you won't have in your retirement presumably.\n          </MinorText>\n          <Modal\n            open={mortgageModalOpen}\n            onClose={this.handleCloseMortgageModal}\n            title=\"Mortgage Account\"\n          >\n            <AccountsSelectionForm\n              accounts={potentialMortageAccounts}\n              value={mortgageAccounts}\n              onChange={this.handleChangeMortgage}\n            />\n          </Modal>\n        </Section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Settings;\n","import CurrentMonth from \"./components/CurrentMonth\";\nimport CurrentMonthGroup from \"./components/CurrentMonthGroup\";\nimport CurrentMonthCategory from \"./components/CurrentMonthCategory\";\nimport Groups from \"./components/Groups\";\nimport Group from \"./components/Group\";\nimport Category from \"./components/Category\";\nimport CategoryPayee from \"./components/CategoryPayee\";\nimport IncomeVsExpenses from \"./components/IncomeVsExpenses\";\nimport NetWorth from \"./components/NetWorth\";\nimport Investments from \"./components/Investments\";\nimport Projections from \"./components/Projections\";\nimport Settings from \"./components/Settings\";\n\nexport const makeLink = (path, params) =>\n  path.replace(/:([a-zA-Z]*)/g, (_, part) => params[part]);\n\nconst pages = {\n  currentMonth: {\n    path: \"/budgets/:budgetId/current\",\n    title: \"Current Month Spending\",\n    Component: CurrentMonth,\n    props: props => ({\n      budget: props.budget,\n      currentMonth: props.currentMonth,\n      investmentAccounts: props.investmentAccounts\n    })\n  },\n  currentMonthGroup: {\n    path: \"/budgets/:budgetId/current/:categoryGroupId\",\n    title: (params, budget) =>\n      budget.categoryGroupsById[params.categoryGroupId].name,\n    Component: CurrentMonthGroup,\n    props: (props, params) => ({\n      budget: props.budget,\n      categoryGroupId: params.categoryGroupId,\n      currentMonth: props.currentMonth\n    }),\n    breadcrumbs: [\"currentMonth\"]\n  },\n  currentMonthCategory: {\n    path: \"/budgets/:budgetId/current/:categoryGroupId/:categoryId\",\n    title: (params, budget) => budget.categoriesById[params.categoryId].name,\n    Component: CurrentMonthCategory,\n    props: (props, params) => ({\n      budget: props.budget,\n      categoryId: params.categoryId,\n      categoryGroupId: params.categoryGroupId,\n      currentMonth: props.currentMonth\n    }),\n    breadcrumbs: [\"currentMonth\", \"currentMonthGroup\"]\n  },\n  groups: {\n    path: \"/budgets/:budgetId/groups\",\n    title: \"Spending Trends\",\n    Component: Groups,\n    props: props => ({ budget: props.budget })\n  },\n  group: {\n    path: \"/budgets/:budgetId/groups/:categoryGroupId\",\n    title: (params, budget) =>\n      budget.categoryGroupsById[params.categoryGroupId].name,\n    Component: Group,\n    props: (props, params) => ({\n      budget: props.budget,\n      categoryGroup: props.budget.categoryGroupsById[params.categoryGroupId]\n    }),\n    breadcrumbs: [\"groups\"]\n  },\n  category: {\n    path: \"/budgets/:budgetId/groups/:categoryGroupId/categories/:categoryId\",\n    title: (params, budget) => budget.categoriesById[params.categoryId].name,\n    Component: Category,\n    props: (props, params) => ({\n      budget: props.budget,\n      category: props.budget.categoriesById[params.categoryId]\n    }),\n    breadcrumbs: [\"groups\", \"group\"]\n  },\n  categoryPayee: {\n    path:\n      \"/budgets/:budgetId/groups/:categoryGroupId/categories/:categoryId/payees/:payeeId\",\n    title: (params, budget) => budget.payeesById[params.payeeId].name,\n    Component: CategoryPayee,\n    props: (props, params) => ({\n      budget: props.budget,\n      category: props.budget.categoriesById[params.categoryId],\n      payee: props.budget.payeesById[params.payeeId]\n    }),\n    breadcrumbs: [\"groups\", \"group\", \"category\"]\n  },\n  incomeVsExpenses: {\n    path: \"/budgets/:budgetId/income-vs-expenses\",\n    title: \"Income vs Expenses\",\n    Component: IncomeVsExpenses,\n    props: props => ({\n      budget: props.budget,\n      investmentAccounts: props.investmentAccounts,\n      showing: props.settings.incomeVsExpensesShowing\n    })\n  },\n  netWorth: {\n    path: \"/budgets/:budgetId/net-worth\",\n    title: \"Net Worth\",\n    Component: NetWorth,\n    props: props => ({\n      budget: props.budget,\n      investmentAccounts: props.investmentAccounts,\n      mortgageAccounts: props.mortgageAccounts\n    })\n  },\n  investments: {\n    path: \"/budgets/:budgetId/investments\",\n    title: \"Investments\",\n    Component: Investments,\n    props: props => ({ budget: props.budget, investmentAccounts: props.investmentAccounts })\n  },\n  projections: {\n    path: \"/budgets/:budgetId/projections\",\n    title: \"Retirement Calculator\",\n    Component: Projections,\n    props: props => ({\n      budget: props.budget,\n      investmentAccounts: props.investmentAccounts,\n      mortgageAccounts: props.mortgageAccounts\n    })\n  },\n  settings: {\n    path: \"/budgets/:budgetId/settings\",\n    title: \"Budget Settings\",\n    Component: Settings,\n    props: props => ({\n      budget: props.budget,\n      investmentAccounts: props.investmentAccounts,\n      mortgageAccounts: props.mortgageAccounts,\n      onUpdateAccounts: props.onUpdateAccounts\n    })\n  }\n};\n\nexport default pages;\n","import React, { Fragment, PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { matchPath } from \"react-router\";\nimport styled from \"styled-components\";\nimport pages, { makeLink } from \"../pages\";\nimport Icon from \"./Icon\";\nimport { selectedPlotBandColor, iconWidth } from \"../styleVariables\";\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n  height: 60px;\n`;\n\nconst IconWrapper = styled.div`\n  width: ${iconWidth}px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledLink = styled(NavLink)`\n  color: inherit;\n  display: flex;\n  align-items: center;\n  height: 60px;\n  padding: 0 20px;\n  border-top: 1px solid #eee;\n  background-color: ${props => props.active && selectedPlotBandColor};\n  &:last-of-type {\n    border-bottom: 1px solid #eee;\n  }\n`;\n\nclass SidebarMenuContent extends PureComponent {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    hasMultipleBudgets: PropTypes.bool.isRequired,\n    location: PropTypes.string.isRequired,\n    onCloseSidebar: PropTypes.func.isRequired\n  };\n\n  render() {\n    const { budgetId, hasMultipleBudgets, location, onCloseSidebar } = this.props;\n\n    return (\n      <Fragment>\n        <PureHeader onCloseSidebar={onCloseSidebar} budgetId={budgetId} />\n        {[\n          \"currentMonth\",\n          \"groups\",\n          \"incomeVsExpenses\",\n          \"netWorth\",\n          \"investments\",\n          \"projections\"\n        ].map(page => {\n          const { path, title } = pages[page];\n\n          return (\n            <PureStyledLink\n              key={path}\n              to={makeLink(path, { budgetId })}\n              active={matchPath(location, { path })}\n              onClick={onCloseSidebar}\n            >\n              {title}\n            </PureStyledLink>\n          );\n        })}\n        {hasMultipleBudgets && (\n          <PureStyledLink to=\"/\">Switch Budgets</PureStyledLink>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nclass PureHeader extends PureComponent {\n  render() {\n    const { onCloseSidebar, budgetId } = this.props;\n    return (\n      <Header>\n        <IconWrapper onClick={onCloseSidebar}>\n          <Icon icon=\"times\" />\n        </IconWrapper>\n        <Link\n          to={makeLink(pages.settings.path, { budgetId })}\n          style={{ display: \"flex\", color: \"inherit\" }}\n          onClick={onCloseSidebar}\n        >\n          <IconWrapper>\n            <Icon icon=\"cog\" />\n          </IconWrapper>\n        </Link>\n      </Header>\n    );\n  }\n}\n\nclass PureStyledLink extends PureComponent {\n  render() {\n    return <StyledLink {...this.props} />;\n  }\n}\n\nexport default SidebarMenuContent;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Sidebar from \"react-sidebar\";\nimport { iconWidth } from \"../styleVariables\";\nimport Icon from \"./Icon\";\nimport SidebarMenuContent from \"./SidebarMenuContent\";\n\nclass SidebarMenu extends Component {\n  static propTypes = {\n    budgetId: PropTypes.string.isRequired,\n    children: PropTypes.func.isRequired,\n    hasMultipleBudgets: PropTypes.bool.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  state = { open: false };\n\n  handleSetOpen = open => {\n    this.setState({ open });\n  };\n\n  handleTriggerClick = () => {\n    this.setState({ open: true });\n  };\n\n  handleCloseSidebar = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { budgetId, children, hasMultipleBudgets, location } = this.props;\n    const { open } = this.state;\n\n    return (\n      <Sidebar\n        sidebar={\n          <SidebarMenuContent\n            budgetId={budgetId}\n            hasMultipleBudgets={hasMultipleBudgets}\n            location={location}\n            onCloseSidebar={this.handleCloseSidebar}\n          />\n        }\n        open={open}\n        onSetOpen={this.handleSetOpen}\n        styles={{\n          sidebar: {\n            backgroundColor: \"#fff\",\n            width: 280,\n            pointerEvents: !open && \"none\"\n          }\n        }}\n      >\n        {children({\n          sidebarTrigger: <Trigger onClick={this.handleTriggerClick} />\n        })}\n      </Sidebar>\n    );\n  }\n}\n\nconst Trigger = ({ onClick }) => (\n  <div\n    onClick={onClick}\n    style={{\n      alignSelf: \"stretch\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: iconWidth\n    }}\n  >\n    <Icon icon=\"bars\" />\n  </div>\n);\n\nexport default SidebarMenu;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Scroller extends Component {\n  static propTypes = {\n    action: PropTypes.string.isRequired,\n    children: PropTypes.func.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  toBeScrolled = null;\n\n  raf = null;\n\n  scrollPositions = {};\n\n  getSnapshotBeforeUpdate() {\n    return { scrollTop: this.toBeScrolled.scrollTop };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { action, location } = this.props;\n\n    if (location === prevProps.location) {\n      return;\n    }\n\n    if (action === \"POP\") {\n      this.scrollPositions[prevProps.location] = snapshot.scrollTop;\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = this.scrollPositions[location] || 0;\n      });\n    }\n\n    if (action === \"PUSH\") {\n      this.scrollPositions[prevProps.location] = snapshot.scrollTop;\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = 0;\n      });\n    }\n\n    if (action === \"REPLACE\") {\n      this.raf = requestAnimationFrame(() => {\n        this.toBeScrolled.scrollTop = 0;\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.raf);\n  }\n\n  render() {\n    return this.props.children({\n      ref: el => {\n        this.toBeScrolled = el;\n      }\n    });\n  }\n}\n\nexport default Scroller;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport EnsureBudgetLoaded from \"./EnsureBudgetLoaded\";\nimport { PageTitle } from \"./typeComponents\";\nimport { PrimaryButton } from \"./Button\";\nimport SidebarMenu from \"./SidebarMenu\";\nimport Scroller from \"./Scroller\";\n\nconst Container = styled.div`\n  height: 100%;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Header = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  height: 60px;\n  padding-left: 0;\n  padding-right: 20px;\n  background-color: #fff;\n  border-bottom: 1px solid #ccc;\n  white-space: pre;\n  user-select: none;\n`;\n\nconst Body = styled.div`\n  flex-grow: 1;\n  overflow-y: auto;\n`;\n\nconst PageWrapper = ({\n  content,\n  authorized,\n  budgetId,\n  budgetLoaded,\n  hasMultipleBudgets,\n  historyAction,\n  location,\n  title,\n  actions,\n  breadcrumbs,\n  onAuthorize,\n  onRequestBudget\n}) => (\n  <EnsureBudgetLoaded\n    budgetId={budgetId}\n    budgetLoaded={budgetLoaded}\n    onRequestBudget={onRequestBudget}\n  >\n    <SidebarMenu\n      budgetId={budgetId}\n      location={location}\n      hasMultipleBudgets={hasMultipleBudgets}\n    >\n      {({ sidebarTrigger }) => (\n        <Container>\n          <Header>\n            {sidebarTrigger}\n            <div style={{ flexGrow: 1 }}>\n              {breadcrumbs}\n              <PageTitle style={{ lineHeight: 1 }}>{title}</PageTitle>\n            </div>\n            {actions}\n          </Header>\n          <Scroller action={historyAction} location={location}>\n            {({ ref }) => <Body ref={ref}>{content}</Body>}\n          </Scroller>\n          {!authorized && (\n            <div\n              style={{\n                padding: \"15px 20px\",\n                backgroundColor: \"#fff\",\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                flexShrink: 0,\n                borderTop: \"1px solid #ccc\"\n              }}\n            >\n              Your authorization expired.\n              <PrimaryButton onClick={onAuthorize}>Reauthorize</PrimaryButton>\n            </div>\n          )}\n        </Container>\n      )}\n    </SidebarMenu>\n  </EnsureBudgetLoaded>\n);\n\nPageWrapper.propTypes = {\n  actions: PropTypes.node.isRequired,\n  authorized: PropTypes.bool.isRequired,\n  breadcrumbs: PropTypes.node.isRequired,\n  budgetId: PropTypes.string.isRequired,\n  budgetLoaded: PropTypes.bool.isRequired,\n  content: PropTypes.node.isRequired,\n  hasMultipleBudgets: PropTypes.bool.isRequired,\n  historyAction: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  title: PropTypes.node.isRequired,\n  onAuthorize: PropTypes.func.isRequired,\n  onRequestBudget: PropTypes.func.isRequired\n};\n\nexport default PageWrapper;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route } from \"react-router-dom\";\nimport values from \"lodash/fp/values\";\nimport pages from \"../pages\";\n\nconst PageTitle = ({ budget }) =>\n  budget && (\n    <Switch>\n      {values(pages).map(({ path, title }) => (\n        <Route\n          key={path}\n          path={path}\n          exact\n          render={props =>\n            typeof title === \"function\"\n              ? title(props.match.params, budget)\n              : title\n          }\n        />\n      ))}\n      <Route render={() => \"Page Not Found\"} />\n    </Switch>\n  );\n\nPageTitle.propTypes = {\n  budget: PropTypes.object\n};\n\nexport default PageTitle;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport values from \"lodash/fp/values\";\nimport pages, { makeLink } from \"../pages\";\nimport { MinorText } from \"./typeComponents\";\nimport Icon from \"./Icon\";\n\nconst routes = values(pages)\n  .filter(page => !!page.breadcrumbs)\n  .map(page => ({\n    path: page.path,\n    breadcrumbs: page.breadcrumbs.map(pageKey => ({\n      title: pages[pageKey].title,\n      path: pages[pageKey].path\n    }))\n  }));\n\nconst PageBreadcrumbs = ({ budget }) =>\n  budget && (\n    <Switch>\n      {routes.map(({ path, breadcrumbs }) => (\n        <Route\n          key={path}\n          path={path}\n          exact\n          render={props => (\n            <MinorText style={{ lineHeight: 1, whiteSpace: \"normal\" }}>\n              {breadcrumbs.map(({ title, path }, index) => (\n                <Fragment key={path}>\n                  <Link\n                    to={makeLink(path, props.match.params)}\n                    style={{\n                      paddingBottom: 8,\n                      display: \"inline-block\"\n                    }}\n                  >\n                    {typeof title === \"function\"\n                      ? title(props.match.params, budget)\n                      : title}\n                  </Link>\n                  {index !== breadcrumbs.length - 1 && (\n                    <Icon\n                      icon=\"chevron-right\"\n                      style={{ padding: \"0 5px\", fontSize: 8 }}\n                    />\n                  )}\n                </Fragment>\n              ))}\n            </MinorText>\n          )}\n        />\n      ))}\n    </Switch>\n  );\n\nPageBreadcrumbs.propTypes = {\n  budget: PropTypes.object\n};\n\nexport default PageBreadcrumbs;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport pages, { makeLink } from \"../pages\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport { SecondaryText } from \"./typeComponents\";\n\nconst PageActions = ({ settings, onChangeSetting }) => (\n  <Switch>\n    <Route\n      path={pages.currentMonth.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.groups.path, match.params)}>\n            Past Months\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.currentMonthGroup.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.group.path, match.params)}>Past Months</Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.currentMonthCategory.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.category.path, match.params)}>\n            Past Months\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.groups.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonth.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.group.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonthGroup.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.category.path}\n      exact\n      render={({ match }) => (\n        <SecondaryText>\n          <Link to={makeLink(pages.currentMonthCategory.path, match.params)}>\n            Current Month\n          </Link>\n        </SecondaryText>\n      )}\n    />\n    <Route\n      path={pages.incomeVsExpenses.path}\n      exact\n      render={() => (\n        <SecondaryText\n          onClick={() => {\n            onChangeSetting({\n              setting: \"incomeVsExpensesShowing\",\n              value:\n                settings.incomeVsExpensesShowing === \"average\"\n                  ? \"total\"\n                  : \"average\"\n            });\n          }}\n          style={{ userSelect: \"none\" }}\n        >\n          {settings.incomeVsExpensesShowing}\n        </SecondaryText>\n      )}\n    />\n  </Switch>\n);\n\nPageActions.propTypes = {\n  settings: PropTypes.object.isRequired,\n  onChangeSetting: PropTypes.func.isRequired\n};\n\nexport default PageActions;\n","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst INITIAL_STATE = {\n  selectedMonth: null,\n  selectedGroupId: null,\n  selectedCategoryId: null,\n  selectedPayeeId: null\n};\n\nclass CategoriesState extends Component {\n  static propTypes = {\n    action: PropTypes.oneOf([\"PUSH\", \"POP\", \"REPLACE\"]).isRequired,\n    children: PropTypes.func.isRequired,\n    location: PropTypes.string.isRequired\n  };\n\n  state = INITIAL_STATE;\n\n  cachedStates = {};\n\n  getSnapshotBeforeUpdate() {\n    return this.state;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { location, action } = this.props;\n\n    if (location === prevProps.location) {\n      return;\n    }\n\n    if (action === \"POP\") {\n      this.cachedStates[prevProps.location] = snapshot;\n      this.setState(this.cachedStates[location]);\n    }\n\n    if (action === \"PUSH\") {\n      this.cachedStates[prevProps.location] = snapshot;\n      this.setState(INITIAL_STATE);\n    }\n\n    if (action === \"REPLACE\") {\n      this.setState(INITIAL_STATE);\n    }\n  }\n\n  handleSelectMonth = month => {\n    this.setState(state => ({\n      ...state,\n      selectedMonth: state.selectedMonth === month ? null : month\n    }));\n  };\n\n  handleSelectGroup = groupId => {\n    this.setState(state => ({\n      ...state,\n      selectedGroupId: state.selectedGroupId === groupId ? null : groupId\n    }));\n  };\n\n  handleSelectCategory = categoryId => {\n    this.setState(state => ({\n      ...state,\n      selectedCategoryId:\n        state.selectedCategoryId === categoryId ? null : categoryId\n    }));\n  };\n\n  handleSelectPayee = payeeId => {\n    this.setState(state => ({\n      ...state,\n      selectedPayeeId: state.selectedPayeeId === payeeId ? null : payeeId\n    }));\n  };\n\n  render() {\n    return this.props.children({\n      ...this.state,\n      onSelectMonth: this.handleSelectMonth,\n      onSelectGroup: this.handleSelectGroup,\n      onSelectCategory: this.handleSelectCategory,\n      onSelectPayee: this.handleSelectPayee,\n      onSetExclusion: this.handleSetExclusion\n    });\n  }\n}\n\nexport default CategoriesState;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Switch, Route } from \"react-router-dom\";\nimport values from \"lodash/fp/values\";\nimport moment from \"moment\";\nimport { groupBy, notAny, simpleMemoize } from \"../dataUtils\";\nimport {\n  getFirstMonth,\n  getTransactionMonth,\n  isIncome,\n  isStartingBalanceOrReconciliation,\n  isTransfer\n} from \"../budgetUtils\";\nimport pages, { makeLink } from \"../pages\";\nimport MonthExclusions from \"./MonthExclusions\";\nimport CategoriesState from \"./CategoriesState\";\n\nconst getFilteredTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) => {\n    const firstMonth = getFirstMonth(budget);\n    const lastMonth = moment().format(\"YYYY-MM\");\n    return budget.transactions.filter(\n      notAny([\n        isStartingBalanceOrReconciliation(budget),\n        isTransfer(investmentAccounts),\n        transaction =>\n          excludeFirstMonth && getTransactionMonth(transaction) === firstMonth,\n        transaction =>\n          excludeLastMonth && getTransactionMonth(transaction) === lastMonth\n      ])\n    );\n  }\n);\n\nconst getFilteredSpendingTransactions = simpleMemoize(\n  (budget, investmentAccounts, excludeFirstMonth, excludeLastMonth) =>\n    getFilteredTransactions(\n      budget,\n      investmentAccounts,\n      excludeFirstMonth,\n      excludeLastMonth\n    ).filter(transaction => !isIncome(budget)(transaction))\n);\n\nconst trendsPath = pages.groups.path;\nconst groupedPages = groupBy(\n  page => (page.path.startsWith(trendsPath) ? \"trendPages\" : \"otherPages\")\n)(values(pages));\n\nconst PageContent = props =>\n  props.budget && (\n    <Switch>\n      <Route\n        path={trendsPath}\n        render={({ match }) => (\n          <MonthExclusions budget={props.budget}>\n            {({\n              excludeFirstMonth,\n              excludeLastMonth,\n              months,\n              onSetExclusion\n            }) => {\n              const filteredTransactions = getFilteredSpendingTransactions(\n                props.budget,\n                props.investmentAccounts,\n                excludeFirstMonth,\n                excludeLastMonth\n              );\n\n              return (\n                <CategoriesState\n                  key={match.params.categoryGroupId}\n                  action={props.historyAction}\n                  location={props.location}\n                >\n                  {({\n                    selectedMonth,\n                    selectedGroupId,\n                    selectedCategoryId,\n                    selectedPayeeId,\n                    onSelectMonth,\n                    onSelectGroup,\n                    onSelectCategory,\n                    onSelectPayee\n                  }) => (\n                    <Switch>\n                      {groupedPages.trendPages.map(\n                        ({ path, props: propsFunction, Component }) => (\n                          <Route\n                            key={path}\n                            path={path}\n                            exact\n                            render={({ match }) => (\n                              <Component\n                                {...propsFunction(props, match.params)}\n                                excludeFirstMonth={excludeFirstMonth}\n                                excludeLastMonth={excludeLastMonth}\n                                months={months}\n                                selectedMonth={selectedMonth}\n                                selectedGroupId={selectedGroupId}\n                                selectedCategoryId={selectedCategoryId}\n                                selectedPayeeId={selectedPayeeId}\n                                transactions={filteredTransactions}\n                                onSelectMonth={onSelectMonth}\n                                onSelectGroup={onSelectGroup}\n                                onSelectCategory={onSelectCategory}\n                                onSelectPayee={onSelectPayee}\n                                onSetExclusion={onSetExclusion}\n                              />\n                            )}\n                          />\n                        )\n                      )}\n                    </Switch>\n                  )}\n                </CategoriesState>\n              );\n            }}\n          </MonthExclusions>\n        )}\n      />\n      <Route\n        path={pages.incomeVsExpenses.path}\n        exact\n        render={({ match }) => {\n          const { Component } = pages.incomeVsExpenses;\n          return (\n            <MonthExclusions budget={props.budget}>\n              {({ excludeFirstMonth, excludeLastMonth, onSetExclusion }) => {\n                const filteredTransactions = getFilteredTransactions(\n                  props.budget,\n                  props.investmentAccounts,\n                  excludeFirstMonth,\n                  excludeLastMonth\n                );\n                return (\n                  <Component\n                    {...pages.incomeVsExpenses.props(props, match.params)}\n                    excludeFirstMonth={excludeFirstMonth}\n                    excludeLastMonth={excludeLastMonth}\n                    transactions={filteredTransactions}\n                    onSetExclusion={onSetExclusion}\n                  />\n                );\n              }}\n            </MonthExclusions>\n          );\n        }}\n      />\n      {groupedPages.otherPages.map(\n        ({ path, props: propsFunction, Component }) => (\n          <Route\n            key={path}\n            path={path}\n            exact\n            render={({ match }) => (\n              <Component {...propsFunction(props, match.params)} />\n            )}\n          />\n        )\n      )}\n      <Route\n        render={() => (\n          <div style={{ padding: 20 }}>\n            <Link\n              to={makeLink(pages.currentMonth.path, {\n                budgetId: props.budget.id\n              })}\n            >\n              Return to {pages.currentMonth.title}\n            </Link>\n          </div>\n        )}\n      />\n    </Switch>\n  );\n\nPageContent.propTypes = {\n  currentMonth: PropTypes.string.isRequired,\n  historyAction: PropTypes.oneOf([\"PUSH\", \"POP\", \"REPLACE\"]).isRequired,\n  investmentAccounts: PropTypes.object.isRequired,\n  location: PropTypes.string.isRequired,\n  mortgageAccounts: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired,\n  onUpdateAccounts: PropTypes.func.isRequired,\n  budget: PropTypes.object\n};\n\nexport default PageContent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Section from \"./Section\";\nimport { PageTitle, StrongText, SecondaryText } from \"./typeComponents\";\nimport { PrimaryButton } from \"./Button\";\n\nconst Unauthorized = ({ onAuthorize }) => (\n  <Section>\n    <PageTitle>Budget Reports</PageTitle>\n    <div style={{ marginBottom: 10 }}>Get various insights from your YNAB account.</div>\n    <PrimaryButton onClick={onAuthorize}>\n      Authorize YNAB\n    </PrimaryButton>\n    <StrongText style={{ marginTop: 30 }}>Privacy Policy</StrongText>\n    <SecondaryText>\n      This website does not store any information from you or your YNAB account\n      on it's server. All data retrieved from the YNAB API is stored only in\n      your browser's local storage and is never transmitted to any other location or\n      third-party.\n    </SecondaryText>\n  </Section>\n);\n\nUnauthorized.propTypes = {\n  onAuthorize: PropTypes.func.isRequired\n};\n\nexport default Unauthorized;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  padding: 10px 20px;\n`;\n\n\nconst ErrorPage = ({ message }) => (\n  <Container>\n    <h3>{message}</h3>\n    <div>\n      <Link to=\"/\">Home</Link>\n    </div>\n  </Container>\n);\n\nErrorPage.propTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default ErrorPage;\n","import React from \"react\";\nimport ErrorPage from \"./ErrorPage\";\n\nconst NotFound = () => <ErrorPage message=\"Page not found\" />;\n\nexport default NotFound;\n","/* global Rollbar */\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ErrorPage from \"./ErrorPage\";\n\nclass ErrorBoundary extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    message: PropTypes.string\n  };\n\n  static defaultProps = {\n    message: \"Something went wrong\"\n  };\n\n  state = { hasError: false };\n\n  componentDidCatch(error) {\n    Rollbar.error(error);\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorPage message={this.props.message} />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport pages, { makeLink } from \"../pages\";\nimport { StrongText } from \"./typeComponents\";\nimport Section from \"./Section\";\nimport Loading from \"./Loading\";\n\nclass Budgets extends Component {\n  static propTypes = {\n    budgets: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired\n      })\n    ).isRequired,\n    budgetsLoaded: PropTypes.bool.isRequired,\n    onRequestBudgets: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    if (!this.props.budgetsLoaded) {\n      this.props.onRequestBudgets();\n    }\n  }\n\n  render() {\n    const { budgets, budgetsLoaded } = this.props;\n\n    if (!budgetsLoaded) {\n      return <Loading />;\n    }\n\n    return (\n      <Section>\n        <StrongText>Select a budget:</StrongText>\n        {budgets.map(({ id, name }) => (\n          <div key={id}>\n            <Link to={makeLink(pages.currentMonth.path, { budgetId: id })}>\n              {name}\n            </Link>\n          </div>\n        ))}\n      </Section>\n    );\n  }\n}\n\nexport default Budgets;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Switch } from \"react-router-dom\";\nimport moment from \"moment\";\nimport get from \"lodash/fp/get\";\nimport keyBy from \"lodash/fp/keyBy\";\nimport {\n  getBudgets,\n  getUpdatedBudget,\n  AUTHORIZE_URL,\n  setLastLocation\n} from \"../ynabRepo\";\nimport { setSetting, getSetting } from \"../uiRepo\";\nimport PageWrapper from \"./PageWrapper\";\nimport PageTitle from \"./PageTitle\";\nimport PageBreadcrumbs from \"./PageBreadcrumbs\";\nimport PageActions from \"./PageActions\";\nimport PageContent from \"./PageContent\";\nimport Unauthorized from \"./Unauthorized\";\nimport NotFound from \"./NotFound\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport Budgets from \"./Budgets\";\nimport CurrencyContext from \"./CurrencyContext\";\n\nclass App extends Component {\n  static propTypes = {\n    hasToken: PropTypes.bool.isRequired\n  };\n\n  state = {\n    authorized: true,\n    budgetsLoaded: false,\n    budgetIds: [],\n    budgets: {},\n    budgetDetails: {},\n    currentMonth: moment().format(\"YYYY-MM\"),\n    settings: {\n      payeesSort: \"amount\",\n      incomeVsExpensesShowing: \"average\"\n    }\n  };\n\n  handleRequestBudgets = callback => {\n    getBudgets().then(({ budgets }) => {\n      this.setState(\n        {\n          budgetsLoaded: true,\n          budgetIds: budgets.map(b => b.id),\n          budgets: keyBy(\"id\")(budgets)\n        },\n        callback\n      );\n    });\n  };\n\n  handleRequestBudget = id => {\n    getUpdatedBudget(id).then(({ budget, authorized }) => {\n      this.setState(state => ({\n        ...state,\n        authorized,\n        budgetDetails: {\n          ...state.budgetDetails,\n          [id]: budget\n        }\n      }));\n    });\n  };\n\n  handleAuthorize = () => {\n    setLastLocation();\n    window.location.replace(AUTHORIZE_URL);\n  };\n\n  handleChangeSetting = ({ setting, value }) => {\n    this.setState(state => ({\n      ...state,\n      settings: {\n        ...state.settings,\n        [setting]: value\n      }\n    }));\n  };\n\n  render() {\n    const { hasToken } = this.props;\n    const {\n      authorized,\n      budgetsLoaded,\n      budgetIds,\n      budgets,\n      budgetDetails,\n      currentMonth,\n      settings\n    } = this.state;\n\n    if (!hasToken) {\n      return <Unauthorized onAuthorize={this.handleAuthorize} />;\n    }\n\n    return (\n      <ErrorBoundary>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <Budgets\n                budgets={budgetIds.map(id => budgets[id])}\n                budgetsLoaded={budgetsLoaded}\n                onRequestBudgets={this.handleRequestBudgets}\n              />\n            )}\n          />\n          <Route\n            path=\"/budgets/:budgetId\"\n            render={props => {\n              const { budgetId } = props.match.params;\n              const budget = budgetDetails[budgetId];\n\n              return (\n                <CurrencyContext.Provider value={get(\"currencyFormat\")(budget)}>\n                  <PageWrapper\n                    authorized={authorized}\n                    budgetId={budgetId}\n                    budgetLoaded={!!budget}\n                    hasMultipleBudgets={budgetIds.length > 1}\n                    historyAction={props.history.action}\n                    location={props.location.pathname}\n                    onAuthorize={this.handleAuthorize}\n                    onRequestBudget={this.handleRequestBudget}\n                    title={<PageTitle budget={budget} />}\n                    breadcrumbs={<PageBreadcrumbs budget={budget} />}\n                    actions={\n                      <PageActions\n                        settings={settings}\n                        onChangeSetting={this.handleChangeSetting}\n                      />\n                    }\n                    content={\n                      <PageContent\n                        budget={budget}\n                        currentMonth={currentMonth}\n                        investmentAccounts={getSetting(\n                          \"investmentAccounts\",\n                          budgetId\n                        )}\n                        mortgageAccounts={getSetting(\n                          \"mortgageAccounts\",\n                          budgetId\n                        )}\n                        settings={settings}\n                        historyAction={props.history.action}\n                        location={props.location.pathname}\n                        onChangeSetting={this.handleChangeSetting}\n                        onUpdateAccounts={({ type, value }) => {\n                          if (type === \"investment\") {\n                            setSetting(\"investmentAccounts\", budgetId, value);\n                          }\n                          if (type === \"mortgage\") {\n                            setSetting(\"mortgageAccounts\", budgetId, value);\n                          }\n                          this.forceUpdate();\n                        }}\n                      />\n                    }\n                  />\n                </CurrencyContext.Provider>\n              );\n            }}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </ErrorBoundary>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { getAuthorizeToken, initializeYnabApi } from \"./ynabRepo\";\nimport App from \"./components/App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nconst token = getAuthorizeToken();\n\nif (token) {\n  initializeYnabApi(token);\n}\n\nReactDOM.render(\n  <HashRouter>\n    <App hasToken={!!token} />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}